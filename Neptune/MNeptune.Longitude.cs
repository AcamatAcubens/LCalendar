using Acamat.LCore;
using Acamat.LMath;
using System;

namespace Acamat.LCalendar;

/// <summary>
/// Bündelt Berechnungen zum Neptun.
/// </summary>
public static partial class MNeptune
{
	// ------------------- //
	// Felder und Methoden //
	// ------------------- //
	// MNeptune.L0(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 0. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 0. Ordnung.</returns>
	private static double L0(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 5.31188633047 * (0.00000000000 +     0.00000000000 * t).Cos();
		rtn += 0.01798475509 * (2.90101273050 +    38.13303563780 * t).Cos();
		rtn += 0.01019727662 * (0.48580923660 +     1.48447270830 * t).Cos();
		rtn += 0.00124531845 * (4.83008090682 +    36.64856292950 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00042064450 * (5.41054991607 +     2.96894541660 * t).Cos();
		rtn += 0.00037714589 * (6.09221834946 +    35.16409022120 * t).Cos();
		rtn += 0.00033784734 * (1.24488865578 +    76.26607127560 * t).Cos();
		rtn += 0.00016482741 * (0.00007729261 +   491.55792945680 * t).Cos();
		rtn += 0.00009198582 * (4.93747059924 +    39.61750834610 * t).Cos();
		rtn += 0.00008994249 * (0.27462142569 +   175.16605980020 * t).Cos();
		rtn += 0.00004216235 * (1.98711914364 +    73.29712585900 * t).Cos();
		rtn += 0.00003364818 * (1.03590121818 +    33.67961751290 * t).Cos();
		rtn += 0.00002284800 * (4.20606932559 +     4.45341812490 * t).Cos();
		rtn += 0.00001433512 * (2.78340432711 +    74.78159856730 * t).Cos();
		rtn += 0.00000900240 * (2.07606702418 +   109.94568878850 * t).Cos();
		rtn += 0.00000744996 * (3.19032530145 +    71.81265315070 * t).Cos();
		rtn += 0.00000506206 * (5.74785370252 +   114.39910691340 * t).Cos();
		rtn += 0.00000399552 * (0.34972342569 +  1021.24889455140 * t).Cos();
		rtn += 0.00000345195 * (3.46186210169 +    41.10198105440 * t).Cos();
		rtn += 0.00000340323 * (3.30369900416 +    77.75054398390 * t).Cos();
		rtn += 0.00000323004 * (2.24815188609 +    32.19514480460 * t).Cos();
		rtn += 0.00000306338 * (0.49684039897 +     0.52126486180 * t).Cos();
		rtn += 0.00000287322 * (4.50523446022 +     0.04818410980 * t).Cos();
		rtn += 0.00000282170 * (2.24565579693 +   146.59425171800 * t).Cos();
		rtn += 0.00000266605 * (4.88932609483 +     0.96320784650 * t).Cos();
		rtn += 0.00000251941 * (5.78166597292 +   388.46515523820 * t).Cos();
		rtn += 0.00000244722 * (1.24693337933 +     9.56122755560 * t).Cos();
		rtn += 0.00000232887 * (2.50459795017 +   137.03302416240 * t).Cos();
		rtn += 0.00000227079 * (1.79713054538 +   453.42489381900 * t).Cos();
		rtn += 0.00000170404 * (3.32390630650 +   108.46121608020 * t).Cos();
		rtn += 0.00000151401 * (2.19153094280 +    33.94024994380 * t).Cos();
		rtn += 0.00000150180 * (2.99706110414 +     5.93789083320 * t).Cos();
		rtn += 0.00000148295 * (0.85948986145 +   111.43016149680 * t).Cos();
		rtn += 0.00000118672 * (3.67706204305 +     2.44768055480 * t).Cos();
		rtn += 0.00000109300 * (2.41599378049 +   183.24281464750 * t).Cos();
		rtn += 0.00000103305 * (0.04078966679 +     0.26063243090 * t).Cos();
		rtn += 0.00000103054 * (4.40441222000 +    70.32818044240 * t).Cos();
		rtn += 0.00000101821 * (5.70539236951 +     0.11187458460 * t).Cos();
		rtn += 0.00000097873 * (2.80518260528 +     8.07675484730 * t).Cos();
		rtn += 0.00000086379 * (4.22834506045 +   490.07345674850 * t).Cos();
		rtn += 0.00000081536 * (5.19908046216 +   493.04240216510 * t).Cos();
		rtn += 0.00000077725 * (4.16446516424 +     4.19278569400 * t).Cos();
		rtn += 0.00000073938 * (1.32805041516 +   529.69096509460 * t).Cos();
		rtn += 0.00000071503 * (5.29530386579 +   350.33211960040 * t).Cos();
		rtn += 0.00000064418 * (3.54541016050 +   168.05251279940 * t).Cos();
		rtn += 0.00000062570 * (0.15028731465 +   182.27960680100 * t).Cos();
		rtn += 0.00000058488 * (3.50106873945 +   145.10977900970 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000048276 * (1.11259925628 +   112.91463420510 * t).Cos();
		rtn += 0.00000047728 * (0.12906212461 +   484.44438245600 * t).Cos();
		rtn += 0.00000047565 * (2.58404814824 +   219.89137757700 * t).Cos();
		rtn += 0.00000047229 * (4.57373229818 +    46.20979048510 * t).Cos();
		rtn += 0.00000047046 * (4.49844660400 +   173.68158709190 * t).Cos();
		rtn += 0.00000046858 * (3.01699530327 +   498.67147645760 * t).Cos();
		rtn += 0.00000044714 * (5.47302733614 +   176.65053250850 * t).Cos();
		rtn += 0.00000039124 * (1.66569356050 +   213.29909543800 * t).Cos();
		rtn += 0.00000038659 * (2.38685706479 +     2.92076130680 * t).Cos();
		rtn += 0.00000032279 * (3.45759151220 +    30.71067209630 * t).Cos();
		rtn += 0.00000028249 * (4.13282446716 +     6.59228213900 * t).Cos();
		rtn += 0.00000024661 * (3.67822620786 +   181.75834193920 * t).Cos();
		rtn += 0.00000024505 * (1.55095867965 +     7.11354700080 * t).Cos();
		rtn += 0.00000024433 * (4.55736848232 +   106.97674337190 * t).Cos();
		rtn += 0.00000022169 * (2.74932970271 +   256.53994050650 * t).Cos();
		rtn += 0.00000021848 * (1.04366818343 +    39.09624348430 * t).Cos();
		rtn += 0.00000017728 * (3.55049134167 +     1.37259812370 * t).Cos();
		rtn += 0.00000017347 * (2.14069234880 +    42.58645376270 * t).Cos();
		rtn += 0.00000016936 * (6.10896452834 +    44.72531777680 * t).Cos();
		rtn += 0.00000016614 * (4.98188930613 +    37.61177077600 * t).Cos();
		rtn += 0.00000015676 * (6.22010212025 +   454.90936652730 * t).Cos();
		rtn += 0.00000014953 * (3.36405649131 +    98.89998852460 * t).Cos();
		rtn += 0.00000014837 * (3.52557245517 +    25.60286266560 * t).Cos();
		rtn += 0.00000014566 * (0.69857991985 +  1550.93985964600 * t).Cos();
		rtn += 0.00000013243 * (5.61712542227 +    68.84370773410 * t).Cos();
		rtn += 0.00000012757 * (0.04509743861 +    11.04570026390 * t).Cos();
		rtn += 0.00000012108 * (1.87022663714 +    79.23501669220 * t).Cos();
		rtn += 0.00000011988 * (4.81687553351 +    24.11838995730 * t).Cos();
		rtn += 0.00000011698 * (0.49005698002 +     1.59634729290 * t).Cos();
		rtn += 0.00000011681 * (3.85151357766 +   218.40690486870 * t).Cos();
		rtn += 0.00000011343 * (0.81432278263 +   525.49817940060 * t).Cos();
		rtn += 0.00000011060 * (1.78958277553 +     7.42236354150 * t).Cos();
		rtn += 0.00000010803 * (2.92081211459 +   293.18850343600 * t).Cos();
		rtn += 0.00000010459 * (2.38743199893 +   381.35160823740 * t).Cos();
		rtn += 0.00000010183 * (1.15395455831 +  6244.94281435360 * t).Cos();
		rtn += 0.00000010097 * (5.03383557061 +   601.76425067620 * t).Cos();
		rtn += 0.00000009544 * (4.02452832984 +   152.53214255120 * t).Cos();
		rtn += 0.00000009196 * (1.00274090619 +    72.07328558160 * t).Cos();
		rtn += 0.00000008744 * (0.14168568610 +   148.07872442630 * t).Cos();
		rtn += 0.00000008691 * (4.74352784364 +   143.62530630140 * t).Cos();
		rtn += 0.00000008382 * (3.07534786987 +     1.27202438720 * t).Cos();
		rtn += 0.00000008283 * (0.35956716764 +   138.51749687070 * t).Cos();
		rtn += 0.00000008193 * (2.58588219154 +   141.22580985640 * t).Cos();
		rtn += 0.00000008035 * (1.77685723010 +     0.21244832110 * t).Cos();
		rtn += 0.00000007929 * (2.10765101655 +    27.08733537390 * t).Cos();
		rtn += 0.00000007666 * (1.52223325105 +   115.88357962170 * t).Cos();
		rtn += 0.00000007531 * (5.37537256533 +     5.10780943070 * t).Cos();
		rtn += 0.00000007465 * (1.72131945843 +    31.01948863700 * t).Cos();
		rtn += 0.00000007274 * (4.10937535938 +   251.43213107580 * t).Cos();
		rtn += 0.00000007134 * (2.05292376023 +   278.25883401880 * t).Cos();
		rtn += 0.00000007094 * (5.11528393609 +   312.19908396260 * t).Cos();
		rtn += 0.00000006947 * (3.48041784595 +   415.29185818120 * t).Cos();
		rtn += 0.00000006902 * (4.62452068308 +     2.70831298570 * t).Cos();
		rtn += 0.00000006156 * (3.50746507109 +    28.57180808220 * t).Cos();
		rtn += 0.00000005925 * (4.02504592620 +   255.05546779820 * t).Cos();
		rtn += 0.00000005918 * (2.57693824084 + 10175.15251057320 * t).Cos();
		rtn += 0.00000005916 * (0.68957324226 +    62.25142559510 * t).Cos();
		rtn += 0.00000005499 * (2.09250039025 +     1.69692102940 * t).Cos();
		rtn += 0.00000005482 * (3.07979737280 +   329.83706636550 * t).Cos();
		rtn += 0.00000005408 * (3.31313295602 +   528.20649238630 * t).Cos();
		rtn += 0.00000005357 * (3.63061058987 +     5.41662597140 * t).Cos();
		rtn += 0.00000005279 * (4.09390686798 +   983.11585891360 * t).Cos();
		rtn += 0.00000004767 * (4.91981150665 +   456.39383923560 * t).Cos();
		rtn += 0.00000004606 * (1.17779101436 +    43.24084506850 * t).Cos();
		rtn += 0.00000004014 * (1.63905164030 +    40.58071619260 * t).Cos();
		rtn += 0.00000003956 * (5.00418696742 +   184.72728735580 * t).Cos();
		rtn += 0.00000003924 * (4.92763242635 +   180.27386923090 * t).Cos();
		rtn += 0.00000003802 * (4.96279204998 +   594.65070367540 * t).Cos();
		rtn += 0.00000003770 * (1.57277409442 +    32.71640966640 * t).Cos();
		rtn += 0.00000003707 * (4.82965453201 +   221.37585028530 * t).Cos();
		rtn += 0.00000003649 * (3.88114678609 +   494.52687487340 * t).Cos();
		rtn += 0.00000003590 * (5.69939670162 +  1124.34166877000 * t).Cos();
		rtn += 0.00000003474 * (5.65891305944 +   395.57870223900 * t).Cos();
		rtn += 0.00000003440 * (1.70887250883 +    12.53017297220 * t).Cos();
		rtn += 0.00000003267 * (5.63287799820 +   488.58898404020 * t).Cos();
		rtn += 0.00000003261 * (4.65478978469 +    29.22619938800 * t).Cos();
		rtn += 0.00000003225 * (5.57423738665 +  1014.13534755060 * t).Cos();
		rtn += 0.00000003211 * (4.19927605853 +   291.70403072770 * t).Cos();
		rtn += 0.00000003202 * (2.21483496593 +    41.05379694460 * t).Cos();
		rtn += 0.00000003143 * (2.93495725805 +    31.23193695810 * t).Cos();
		rtn += 0.00000003134 * (4.69665220513 +    82.85835341460 * t).Cos();
		rtn += 0.00000003107 * (5.79335949207 +   105.49227066360 * t).Cos();
		rtn += 0.00000003061 * (0.39713858313 +     1.43628859850 * t).Cos();
		rtn += 0.00000003001 * (3.59143817947 +   211.81462272970 * t).Cos();
		rtn += 0.00000002967 * (0.54448940101 +   135.54855145410 * t).Cos();
		rtn += 0.00000002918 * (5.91079083895 +     1.22384027740 * t).Cos();
		rtn += 0.00000002901 * (3.24755614136 +   366.48562929500 * t).Cos();
		rtn += 0.00000002899 * (5.99669788291 +    22.63391724900 * t).Cos();
		rtn += 0.00000002879 * (5.12239168488 +    38.65430049960 * t).Cos();
		rtn += 0.00000002858 * (4.88677262419 +   258.02441321480 * t).Cos();
		rtn += 0.00000002848 * (0.55423029727 +   567.82400073240 * t).Cos();
		rtn += 0.00000002845 * (0.56009386585 +   144.14657116320 * t).Cos();
		rtn += 0.00000002729 * (4.62707721219 +     5.62907429250 * t).Cos();
		rtn += 0.00000002712 * (2.43726364359 +    60.76695288680 * t).Cos();
		rtn += 0.00000002690 * (5.32070128202 +     2.00573757010 * t).Cos();
		rtn += 0.00000002630 * (6.00855841124 +    37.16982779130 * t).Cos();
		rtn += 0.00000002592 * (1.36262641469 +    35.42472265210 * t).Cos();
		rtn += 0.00000002586 * (6.24984047544 +    38.08485152800 * t).Cos();
		rtn += 0.00000002586 * (2.69392971321 +    38.18121974760 * t).Cos();
		rtn += 0.00000002513 * (5.60391563025 +    19.12245511120 * t).Cos();
		rtn += 0.00000002486 * (5.21235809332 +   140.00196957900 * t).Cos();
		rtn += 0.00000002418 * (4.93467056526 +    47.69426319340 * t).Cos();
		rtn += 0.00000002326 * (2.82664069146 +   807.94979911340 * t).Cos();
		rtn += 0.00000002301 * (3.35951602914 +  1028.36244155220 * t).Cos();
		rtn += 0.00000002296 * (6.06934502789 +   451.94042111070 * t).Cos();
		rtn += 0.00000002270 * (2.08634524182 +    30.05628079050 * t).Cos();
		rtn += 0.00000002237 * (0.38455553470 +     3.62333672240 * t).Cos();
		rtn += 0.00000002140 * (2.65037925793 +   700.66423920080 * t).Cos();
		rtn += 0.00000002098 * (4.57819744766 +  1019.76442184310 * t).Cos();
		rtn += 0.00000002089 * (5.79838063413 +     4.66586644600 * t).Cos();
		rtn += 0.00000002021 * (4.15631916516 +   178.13500521680 * t).Cos();
		rtn += 0.00000002004 * (5.47811228948 +    63.73589830340 * t).Cos();
		rtn += 0.00000001988 * (3.35850272780 +   186.21176006410 * t).Cos();
		rtn += 0.00000001984 * (5.54763522932 +  1022.73336725970 * t).Cos();
		rtn += 0.00000001971 * (6.00790964671 +    34.20088237470 * t).Cos();
		rtn += 0.00000001966 * (4.07957525462 +    20.60692781950 * t).Cos();
		rtn += 0.00000001956 * (5.01527508588 +   294.67297614430 * t).Cos();
		rtn += 0.00000001919 * (5.10717766499 +   216.92243216040 * t).Cos();
		rtn += 0.00000001913 * (5.53560681085 +   149.56319713460 * t).Cos();
		rtn += 0.00000001869 * (3.85907708723 +   911.04257333200 * t).Cos();
		rtn += 0.00000001810 * (5.81430038477 +   129.91947716160 * t).Cos();
		rtn += 0.00000001795 * (1.68012868451 +  1059.38193018920 * t).Cos();
		rtn += 0.00000001776 * (4.37047808449 +   328.35259365720 * t).Cos();
		rtn += 0.00000001760 * (6.00927149342 +   172.19711438360 * t).Cos();
		rtn += 0.00000001668 * (2.77543377384 +    16.15350969460 * t).Cos();
		rtn += 0.00000001637 * (0.53823942149 +    67.35923502580 * t).Cos();
		rtn += 0.00000001610 * (3.40993944436 +   403.13419222450 * t).Cos();
		rtn += 0.00000001589 * (5.59323020112 +  3302.47939106200 * t).Cos();
		rtn += 0.00000001540 * (2.62327849119 +    41.75637236020 * t).Cos();
		rtn += 0.00000001531 * (4.54891769768 +   526.72201967800 * t).Cos();
		rtn += 0.00000001494 * (4.98692049495 +   666.72398925700 * t).Cos();
		rtn += 0.00000001460 * (2.63664516309 +     2.85707083200 * t).Cos();
		rtn += 0.00000001388 * (2.10598045632 +     3.93215326310 * t).Cos();
		rtn += 0.00000001361 * (4.48227243414 +    17.63798240290 * t).Cos();
		rtn += 0.00000001357 * (4.06399031430 +    26.82670294300 * t).Cos();
		rtn += 0.00000001352 * (0.55618245459 +     0.65439130580 * t).Cos();
		rtn += 0.00000001342 * (4.52685061062 +   563.63121503840 * t).Cos();
		rtn += 0.00000001338 * (0.37643611305 +    14.01464568050 * t).Cos();
		rtn += 0.00000001310 * (3.78526380930 +   386.98068252990 * t).Cos();
		rtn += 0.00000001246 * (4.69840351226 +   389.94962794650 * t).Cos();
		rtn += 0.00000001232 * (5.17443930901 +   331.32153907380 * t).Cos();
		rtn += 0.00000001218 * (0.73456434750 +   426.59819087600 * t).Cos();
		rtn += 0.00000001132 * (5.64520725360 +   151.04766984290 * t).Cos();
		rtn += 0.00000001083 * (2.27578897621 +     6.90109867970 * t).Cos();
		rtn += 0.00000001078 * (1.20253141912 +    35.68535508300 * t).Cos();
		rtn += 0.00000001077 * (4.30911470250 +     0.63313944640 * t).Cos();
		rtn += 0.00000001077 * (0.71409061316 +    44.07092647100 * t).Cos();
		rtn += 0.00000001060 * (0.74679491358 +   487.36514376280 * t).Cos();
		rtn += 0.00000001042 * (6.02756893581 +   106.01353552540 * t).Cos();
		rtn += 0.00000001027 * (0.18243183397 +    84.34282612290 * t).Cos();
		rtn += 0.00000001020 * (0.83233892300 +    39.35687591520 * t).Cos();
		rtn += 0.00000001013 * (0.42234855022 +    32.45577723550 * t).Cos();
		rtn += 0.00000001013 * (0.37845630298 +    36.90919536040 * t).Cos();
		rtn += 0.00000001009 * (5.98451242784 +   142.14083359310 * t).Cos();
		rtn += 0.00000000986 * (0.00600924269 +    81.37388070630 * t).Cos();
		rtn += 0.00000000974 * (5.23958752786 +   253.57099508990 * t).Cos();
		rtn += 0.00000000972 * (0.59038366513 +     8.90683624980 * t).Cos();
		rtn += 0.00000000964 * (5.09748190218 +   357.44566660120 * t).Cos();
		rtn += 0.00000000956 * (3.50447791020 +    64.95973858080 * t).Cos();
		rtn += 0.00000000940 * (2.42688145966 +   343.21857259960 * t).Cos();
		rtn += 0.00000000939 * (4.50445799766 +   365.00115658670 * t).Cos();
		rtn += 0.00000000938 * (5.03471583911 +    69.36497259590 * t).Cos();
		rtn += 0.00000000929 * (4.51267465978 +    38.39366806870 * t).Cos();
		rtn += 0.00000000929 * (4.43109514438 +    37.87240320690 * t).Cos();
		rtn += 0.00000000926 * (6.09803297747 +     4.14460158420 * t).Cos();
		rtn += 0.00000000916 * (5.04967792934 +    38.02116105320 * t).Cos();
		rtn += 0.00000000916 * (3.89409205418 +    38.24491022240 * t).Cos();
		rtn += 0.00000000888 * (3.20360339895 +   348.84764689210 * t).Cos();
		rtn += 0.00000000860 * (4.82440483506 +   210.33015002140 * t).Cos();
		rtn += 0.00000000855 * (3.57592750113 +   439.78275515400 * t).Cos();
		rtn += 0.00000000835 * (1.45568626670 +    35.21227433100 * t).Cos();
		rtn += 0.00000000774 * (5.44432678139 +   367.97010200330 * t).Cos();
		rtn += 0.00000000764 * (4.62720907712 +     0.83008140250 * t).Cos();
		rtn += 0.00000000762 * (0.01897337130 +   189.39315380180 * t).Cos();
		rtn += 0.00000000756 * (0.82872484717 +    17.52610781830 * t).Cos();
		rtn += 0.00000000738 * (2.31770478416 +    42.32582133180 * t).Cos();
		rtn += 0.00000000736 * (4.78125743795 +     5.36844186160 * t).Cos();
		rtn += 0.00000000733 * (5.81485239057 +    29.74746424980 * t).Cos();
		rtn += 0.00000000724 * (4.89141609280 +   119.50691634410 * t).Cos();
		rtn += 0.00000000694 * (0.08328521209 +     5.67725840230 * t).Cos();
		rtn += 0.00000000678 * (4.48687912809 +   351.81659230870 * t).Cos();
		rtn += 0.00000000678 * (0.29428615814 +   171.23390653710 * t).Cos();
		rtn += 0.00000000666 * (6.26456825266 +  1474.67378837040 * t).Cos();
		rtn += 0.00000000666 * (3.42196897591 +   179.09821306330 * t).Cos();
		rtn += 0.00000000655 * (1.99014093000 +    19.01058052660 * t).Cos();
		rtn += 0.00000000644 * (1.94044989547 +   446.31134681820 * t).Cos();
		rtn += 0.00000000638 * (0.63267396269 +   244.31858407500 * t).Cos();
		rtn += 0.00000000636 * (1.02615137352 +  2080.63082474060 * t).Cos();
		rtn += 0.00000000635 * (2.13805182663 +   164.12035953630 * t).Cos();
		rtn += 0.00000000631 * (4.82928491724 +   460.53844081980 * t).Cos();
		rtn += 0.00000000623 * (5.61454940380 +   285.37238101960 * t).Cos();
		rtn += 0.00000000594 * (0.59315717529 +   491.03666459500 * t).Cos();
		rtn += 0.00000000584 * (4.29064541383 +    16.67477455640 * t).Cos();
		rtn += 0.00000000580 * (2.57189536188 +   492.07919431860 * t).Cos();
		rtn += 0.00000000557 * (0.71378452161 +    80.71948940050 * t).Cos();
		rtn += 0.00000000556 * (2.60791360513 +   418.26080359780 * t).Cos();
		rtn += 0.00000000541 * (4.36400580938 +   815.06334611420 * t).Cos();
		rtn += 0.00000000532 * (0.25784352716 +   477.33083545520 * t).Cos();
		rtn += 0.00000000529 * (5.13250788030 +   697.74347789400 * t).Cos();
		rtn += 0.00000000529 * (1.88063108785 +   416.77633088950 * t).Cos();
		rtn += 0.00000000526 * (1.66512720297 +    97.41551581630 * t).Cos();
		rtn += 0.00000000524 * (5.42759392280 +   290.21955801940 * t).Cos();
		rtn += 0.00000000524 * (0.29054995359 +   247.23934538180 * t).Cos();
		rtn += 0.00000000518 * (4.48916591410 +   875.83029900100 * t).Cos();
		rtn += 0.00000000506 * (5.38611121207 +   404.61866493280 * t).Cos();
		rtn += 0.00000000500 * (1.49548514415 +   704.85702489480 * t).Cos();
		rtn += 0.00000000497 * (4.72640318293 +   401.64971951620 * t).Cos();
		rtn += 0.00000000487 * (4.97772067947 +   274.06604832480 * t).Cos();
		rtn += 0.00000000484 * (0.01535318279 +   738.79727483860 * t).Cos();
		rtn += 0.00000000470 * (5.01853200224 +   313.68355667090 * t).Cos();
		rtn += 0.00000000466 * (0.23340415764 +   120.99138905240 * t).Cos();
		rtn += 0.00000000454 * (3.72767803715 +   476.43131808350 * t).Cos();
		rtn += 0.00000000442 * (3.68919475089 +   457.87831194390 * t).Cos();
		rtn += 0.00000000434 * (0.33533802200 +   984.60033162190 * t).Cos();
		rtn += 0.00000000432 * (2.98481475894 +   100.38446123290 * t).Cos();
		rtn += 0.00000000424 * (6.16774845481 +   178.78939652260 * t).Cos();
		rtn += 0.00000000420 * (3.65147769268 +    20.49505323490 * t).Cos();
		rtn += 0.00000000416 * (0.26652109651 +   103.09277421860 * t).Cos();
		rtn += 0.00000000409 * (3.08849480895 +    59.28248017850 * t).Cos();
		rtn += 0.00000000407 * (4.19457842203 +   309.79958751760 * t).Cos();
		rtn += 0.00000000401 * (4.06530055968 +    14.66903698630 * t).Cos();
		rtn += 0.00000000396 * (4.62747640832 +     6.15033915430 * t).Cos();
		rtn += 0.00000000384 * (3.69499925394 +   160.93896579860 * t).Cos();
		rtn += 0.00000000382 * (0.28067758468 +     8.38557138800 * t).Cos();
		rtn += 0.00000000381 * (0.01364856960 +   495.49008271990 * t).Cos();
		rtn += 0.00000000380 * (3.17063415023 +   487.62577619370 * t).Cos();
		rtn += 0.00000000380 * (2.70238752925 +   134.11226285560 * t).Cos();
		rtn += 0.00000000364 * (0.76192181046 +   104.00779795530 * t).Cos();
		rtn += 0.00000000362 * (4.88985810610 +   438.29828244570 * t).Cos();
		rtn += 0.00000000344 * (1.48930997270 +   166.56804009110 * t).Cos();
		rtn += 0.00000000340 * (0.99915726716 +    31.54075349880 * t).Cos();
		rtn += 0.00000000334 * (4.05924071124 +     8.33738727820 * t).Cos();
		rtn += 0.00000000334 * (0.35121412008 +  1227.43444298860 * t).Cos();
		rtn += 0.00000000331 * (4.37715965811 +   180.79513409270 * t).Cos();
		rtn += 0.00000000327 * (2.91090790412 +   505.78502345840 * t).Cos();
		rtn += 0.00000000326 * (2.46104924164 +   169.53698550770 * t).Cos();
		rtn += 0.00000000325 * (5.52669889053 +   441.26722786230 * t).Cos();
		rtn += 0.00000000324 * (5.30240189273 +   457.61767951300 * t).Cos();
		rtn += 0.00000000323 * (5.45836731979 +   918.15612033280 * t).Cos();
		rtn += 0.00000000315 * (5.34885013040 +   183.76407950930 * t).Cos();
		rtn += 0.00000000313 * (5.45945846595 +    13.49338081870 * t).Cos();
		rtn += 0.00000000309 * (0.48352303405 +   118.02244363580 * t).Cos();
		rtn += 0.00000000308 * (1.50185265748 +    77.22927912210 * t).Cos();
		rtn += 0.00000000308 * (0.96082817124 +    21.14944454070 * t).Cos();
		rtn += 0.00000000306 * (5.23085809622 +    45.24658263860 * t).Cos();
		rtn += 0.00000000300 * (0.17435705540 +   252.91660378410 * t).Cos();
		rtn += 0.00000000294 * (5.45249564193 +   206.18554843720 * t).Cos();
		rtn += 0.00000000293 * (2.56582281789 +   662.53120356300 * t).Cos();
		rtn += 0.00000000290 * (1.80003152563 +   101.86893394120 * t).Cos();
		rtn += 0.00000000289 * (2.63591886391 +    55.77101804070 * t).Cos();
		rtn += 0.00000000288 * (5.02487283285 +  1440.73353842660 * t).Cos();
		rtn += 0.00000000288 * (1.48123872077 +   220.41264243880 * t).Cos();
		rtn += 0.00000000280 * (3.99993658196 +   674.80074410430 * t).Cos();
		rtn += 0.00000000275 * (5.04385701142 +   156.15547927360 * t).Cos();
		rtn += 0.00000000275 * (2.37619210741 +  2118.76386037840 * t).Cos();
		rtn += 0.00000000274 * (4.10829870815 +   518.38463239980 * t).Cos();
		rtn += 0.00000000272 * (5.61149862463 +   148.33935685720 * t).Cos();
		rtn += 0.00000000269 * (6.09827783249 +  1654.03263386460 * t).Cos();
		rtn += 0.00000000268 * (5.02354540478 +   377.41945497430 * t).Cos();
		rtn += 0.00000000266 * (0.99036038827 +   209.10630974400 * t).Cos();
		rtn += 0.00000000266 * (0.63672427386 +    79.18683258240 * t).Cos();
		rtn += 0.00000000265 * (5.64967127743 +   326.86812094890 * t).Cos();
		rtn += 0.00000000265 * (1.08736632800 +   450.45594840240 * t).Cos();
		rtn += 0.00000000264 * (5.70536379124 +   490.33408917940 * t).Cos();
		rtn += 0.00000000264 * (0.83337660655 +   488.37653571910 * t).Cos();
		rtn += 0.00000000263 * (2.66670785888 +   464.73122651380 * t).Cos();
		rtn += 0.00000000262 * (2.30390003360 +   494.73932319450 * t).Cos();
		rtn += 0.00000000260 * (3.88543008475 +   513.07988101300 * t).Cos();
		rtn += 0.00000000258 * (5.12448148780 +   608.87779767700 * t).Cos();
		rtn += 0.00000000254 * (0.02963623277 +   117.36805233000 * t).Cos();
		rtn += 0.00000000251 * (1.52353965506 +     6.85291456990 * t).Cos();
		rtn += 0.00000000249 * (1.57215637373 +    14.22709400160 * t).Cos();
		rtn += 0.00000000247 * (1.74540930625 +    65.87476231750 * t).Cos();
		rtn += 0.00000000246 * (0.37698964335 +   157.63995198190 * t).Cos();
		rtn += 0.00000000243 * (6.06808644973 +   154.01661525950 * t).Cos();
		rtn += 0.00000000243 * (5.32730346969 +   485.92885516430 * t).Cos();
		rtn += 0.00000000243 * (4.35559878377 +   482.95990974770 * t).Cos();
		rtn += 0.00000000238 * (1.93340192445 +   500.15594916590 * t).Cos();
		rtn += 0.00000000238 * (1.55647021369 +    79.88940799800 * t).Cos();
		rtn += 0.00000000238 * (0.96169723853 +   497.18700374930 * t).Cos();
		rtn += 0.00000000237 * (0.32676889138 +   208.84567731310 * t).Cos();
		rtn += 0.00000000236 * (3.95835282821 +   141.48644228730 * t).Cos();
		rtn += 0.00000000234 * (1.82700149824 + 52175.80628314840 * t).Cos();
		rtn += 0.00000000232 * (3.01948719112 +    10.93382567930 * t).Cos();
		rtn += 0.00000000230 * (6.13158632762 +   178.34745353790 * t).Cos();
		rtn += 0.00000000230 * (0.54049951530 +   532.61172640140 * t).Cos();
		rtn += 0.00000000229 * (2.25832077914 +   190.66517818900 * t).Cos();
		rtn += 0.00000000228 * (2.48511565618 + 12566.15169998280 * t).Cos();
		rtn += 0.00000000227 * (5.72984298540 +  1543.82631264520 * t).Cos();
		rtn += 0.00000000226 * (3.84152961620 +   283.62727588040 * t).Cos();
		rtn += 0.00000000225 * (3.86300359251 +   171.98466606250 * t).Cos();
		rtn += 0.00000000219 * (5.67679857772 + 52099.54021187280 * t).Cos();
		rtn += 0.00000000219 * (4.52300776062 +  1615.89959822680 * t).Cos();
		rtn += 0.00000000217 * (2.45036922991 +   187.17496791060 * t).Cos();
		rtn += 0.00000000215 * (1.92414563346 +   552.69738935910 * t).Cos();
		rtn += 0.00000000214 * (1.60213179145 +    11.30633269480 * t).Cos();
		rtn += 0.00000000214 * (1.45987216039 +   522.57741809380 * t).Cos();
		rtn += 0.00000000211 * (4.04791980901 +  6205.32530600750 * t).Cos();
		rtn += 0.00000000211 * (0.06484535455 +   215.43795945210 * t).Cos();
		rtn += 0.00000000209 * (5.34065233845 +    13.64213866500 * t).Cos();
		rtn += 0.00000000209 * (5.02893682321 +   364.55921360200 * t).Cos();
		rtn += 0.00000000209 * (4.35051470487 +   536.80451209540 * t).Cos();
		rtn += 0.00000000208 * (2.65835778368 +   496.01134758170 * t).Cos();
		rtn += 0.00000000205 * (4.16096717573 +   711.44930703380 * t).Cos();
		rtn += 0.00000000203 * (5.44328656642 +   145.63104387150 * t).Cos();
		rtn += 0.00000000203 * (5.11234865419 +   324.72925693480 * t).Cos();
		rtn += 0.00000000203 * (0.74638490279 +    14.55716240170 * t).Cos();
		rtn += 0.00000000200 * (4.16839394758 +   285.11174858870 * t).Cos();
		rtn += 0.00000000199 * (0.06168021293 +    73.55775828990 * t).Cos();
		rtn += 0.00000000198 * (5.68125942959 +  6280.10690457480 * t).Cos();
		rtn += 0.00000000196 * (1.95549714182 +   335.77495719870 * t).Cos();
		rtn += 0.00000000194 * (2.37664231450 +   944.98282327580 * t).Cos();
		rtn += 0.00000000194 * (1.13504964219 +    57.25549074900 * t).Cos();
		rtn += 0.00000000193 * (2.12636756833 + 20350.30502114640 * t).Cos();
		rtn += 0.00000000192 * (3.17719161639 +   343.47920503050 * t).Cos();
		rtn += 0.00000000192 * (0.96973434120 +   304.23420369990 * t).Cos();
		rtn += 0.00000000191 * (3.72574595369 +    65.22037101170 * t).Cos();
		rtn += 0.00000000191 * (1.68313683465 +   563.37058260750 * t).Cos();
		rtn += 0.00000000189 * (5.28135043909 +   377.15882254340 * t).Cos();
		rtn += 0.00000000189 * (1.11279570541 +  1127.26243007680 * t).Cos();
		rtn += 0.00000000188 * (6.17288913873 +   535.32003938710 * t).Cos();
		rtn += 0.00000000188 * (0.82104161550 + 10210.31660079440 * t).Cos();
		rtn += 0.00000000187 * (5.57685931698 +   266.10116806210 * t).Cos();
		rtn += 0.00000000181 * (6.23699820519 +   355.96119389290 * t).Cos();
		rtn += 0.00000000181 * (2.99704790590 +    75.74480641380 * t).Cos();
		rtn += 0.00000000181 * (2.10814562080 +   113.87784205160 * t).Cos();
		rtn += 0.00000000181 * (1.65699502247 +  1627.20593092160 * t).Cos();
		rtn += 0.00000000181 * (1.43525075751 +   279.74330672710 * t).Cos();
		rtn += 0.00000000177 * (3.50680841790 +   207.36120460480 * t).Cos();
		rtn += 0.00000000177 * (3.49360697678 +   421.22974901440 * t).Cos();
		rtn += 0.00000000177 * (1.50027795761 +     9.44935297100 * t).Cos();
		rtn += 0.00000000177 * (0.03038098292 +   165.60483224460 * t).Cos();
		rtn += 0.00000000176 * (4.64462444674 +   315.16802937920 * t).Cos();
		rtn += 0.00000000176 * (0.41626373842 +   222.86032299360 * t).Cos();
		rtn += 0.00000000174 * (2.76155855705 +    49.17873590170 * t).Cos();
		rtn += 0.00000000174 * (1.95010708561 +   319.31263096340 * t).Cos();
		rtn += 0.00000000173 * (5.15083799917 +   474.94684537520 * t).Cos();
		rtn += 0.00000000173 * (3.93200456456 +   238.90195810360 * t).Cos();
		rtn += 0.00000000172 * (0.75085513952 +   267.58564077040 * t).Cos();
		rtn += 0.00000000168 * (0.52839230204 +   487.10451133190 * t).Cos();
		rtn += 0.00000000166 * (5.49038139690 + 10135.53500222710 * t).Cos();
		rtn += 0.00000000165 * (4.00537112057 +   493.56366702690 * t).Cos();
		rtn += 0.00000000165 * (0.97421918976 +   556.51766803760 * t).Cos();
		rtn += 0.00000000161 * (5.96143146317 +    36.12729806770 * t).Cos();
		rtn += 0.00000000160 * (4.77712663799 +   524.01370669230 * t).Cos();
		rtn += 0.00000000151 * (1.66981962338 +   116.53797092750 * t).Cos();
		rtn += 0.00000000150 * (5.42593657173 +   526.98265210890 * t).Cos();
		rtn += 0.00000000146 * (4.99570112660 +   142.66209845490 * t).Cos();
		rtn += 0.00000000145 * (4.96888131586 +  1189.30140735080 * t).Cos();
		rtn += 0.00000000145 * (2.81448128781 +  1512.80682400820 * t).Cos();
		rtn += 0.00000000141 * (2.63342951123 +   381.61224066830 * t).Cos();
		rtn += 0.00000000141 * (0.18423889807 +   131.40394986990 * t).Cos();
		rtn += 0.00000000138 * (1.22260849471 +   187.69623277240 * t).Cos();
		rtn += 0.00000000137 * (2.96534226337 +  6206.80977871580 * t).Cos();
		rtn += 0.00000000130 * (3.04810765699 +   310.71461125430 * t).Cos();
		rtn += 0.00000000128 * (2.53394068407 +   276.77436131050 * t).Cos();
		rtn += 0.00000000126 * (5.77648809669 +   525.23754696970 * t).Cos();
		rtn += 0.00000000124 * (2.93225731024 +   179.61947792510 * t).Cos();
		rtn += 0.00000000122 * (3.01323006886 +    70.84944530420 * t).Cos();
		rtn += 0.00000000120 * (3.78755085035 +  1057.89745748090 * t).Cos();
		rtn += 0.00000000111 * (6.18471578216 +   981.63138620530 * t).Cos();
		rtn += 0.00000000111 * (0.77449448649 +   179.35884549420 * t).Cos();
		rtn += 0.00000000110 * (5.25053027081 +   986.08480433020 * t).Cos();
		rtn += 0.00000000109 * (2.15905156247 +   289.56516671360 * t).Cos();
		rtn += 0.00000000109 * (1.53327585900 +   419.74527630610 * t).Cos();
		rtn += 0.00000000104 * (0.20665642552 +   564.85505531580 * t).Cos();
		rtn += 0.00000000096 * (3.86591534559 +   240.12579838100 * t).Cos();
		rtn += 0.00000000094 * (4.21870300178 +  1024.21783996800 * t).Cos();
		rtn += 0.00000000093 * (4.54014016637 +    36.69674703930 * t).Cos();
		rtn += 0.00000000090 * (0.60145818457 +    36.76043751410 * t).Cos();
		rtn += 0.00000000084 * (0.81316746605 +   170.71264167530 * t).Cos();
		rtn += 0.00000000081 * (1.89134135215 +    36.60037881970 * t).Cos();
		rtn += 0.00000000080 * (4.38832594589 + 10137.01947493540 * t).Cos();
		rtn += 0.00000000080 * (1.73940577376 +    39.50563376150 * t).Cos();
		rtn += 0.00000000074 * (4.92511651321 +  1549.45538693770 * t).Cos();
		rtn += 0.00000000072 * (5.06852406179 +   249.94765836750 * t).Cos();
		return rtn;
	}

	// MNeptune.L1(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 1. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 1. Ordnung.</returns>
	private static double L1(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 38.37687716731 * (0.00000000000 +     0.00000000000 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn +=  0.00016604187 * (4.86319129565 +     1.48447270830 * t).Cos();
		rtn +=  0.00015807148 * (2.27923488532 +    38.13303563780 * t).Cos();
		rtn +=  0.00003334701 * (3.68199676020 +    76.26607127560 * t).Cos();
		rtn +=  0.00001305840 * (3.67320813491 +     2.96894541660 * t).Cos();
		rtn +=  0.00000604832 * (1.50477747549 +    35.16409022120 * t).Cos();
		rtn +=  0.00000178623 * (3.45318524147 +    39.61750834610 * t).Cos();
		rtn +=  0.00000106537 * (2.45126138334 +     4.45341812490 * t).Cos();
		rtn +=  0.00000105747 * (2.75479326550 +    33.67961751290 * t).Cos();
		rtn +=  0.00000072684 * (5.48724732699 +    36.64856292950 * t).Cos();
		rtn +=  0.00000057355 * (1.85767603384 +   114.39910691340 * t).Cos();
		rtn +=  0.00000057069 * (5.21649804970 +     0.52126486180 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn +=  0.00000035368 * (4.51676827545 +    74.78159856730 * t).Cos();
		rtn +=  0.00000032216 * (5.90411489680 +    77.75054398390 * t).Cos();
		rtn +=  0.00000029871 * (3.67043294114 +   388.46515523820 * t).Cos();
		rtn +=  0.00000028866 * (5.16877529164 +     9.56122755560 * t).Cos();
		rtn +=  0.00000028742 * (5.16732589024 +     2.44768055480 * t).Cos();
		rtn +=  0.00000025507 * (5.24526281928 +   168.05251279940 * t).Cos();
		rtn +=  0.00000024869 * (4.73193067810 +   182.27960680100 * t).Cos();
		rtn +=  0.00000020205 * (5.78945415677 +  1021.24889455140 * t).Cos();
		rtn +=  0.00000019022 * (1.82981144269 +   484.44438245600 * t).Cos();
		rtn +=  0.00000018661 * (1.31606255521 +   498.67147645760 * t).Cos();
		rtn +=  0.00000015094 * (3.98705254940 +    32.19514480460 * t).Cos();
		rtn +=  0.00000015063 * (4.95003893760 +   137.03302416240 * t).Cos();
		rtn +=  0.00000011725 * (4.89255650674 +    71.81265315070 * t).Cos();
		rtn +=  0.00000010720 * (2.44148149225 +     4.19278569400 * t).Cos();
		rtn +=  0.00000009882 * (6.08165628679 +     7.11354700080 * t).Cos();
		rtn +=  0.00000009606 * (1.88534821556 +    41.10198105440 * t).Cos();
		rtn +=  0.00000009581 * (1.23188039594 +     5.93789083320 * t).Cos();
		rtn +=  0.00000008968 * (0.01758559103 +     8.07675484730 * t).Cos();
		rtn +=  0.00000007632 * (5.51307048241 +    73.29712585900 * t).Cos();
		rtn +=  0.00000006992 * (0.61688864282 +     2.92076130680 * t).Cos();
		rtn +=  0.00000005543 * (2.24141557794 +    46.20979048510 * t).Cos();
		rtn +=  0.00000004845 * (3.71055823750 +   112.91463420510 * t).Cos();
		rtn +=  0.00000003700 * (5.25713252333 +   111.43016149680 * t).Cos();
		rtn +=  0.00000003233 * (6.10303038418 +    70.32818044240 * t).Cos();
		rtn +=  0.00000002939 * (4.86520586648 +    98.89998852460 * t).Cos();
		rtn +=  0.00000002894 * (4.20148844767 +   381.35160823740 * t).Cos();
		rtn +=  0.00000002784 * (4.95821114677 +   108.46121608020 * t).Cos();
		rtn +=  0.00000002403 * (2.90637675099 +   601.76425067620 * t).Cos();
		rtn +=  0.00000002398 * (1.04343654629 +     6.59228213900 * t).Cos();
		rtn +=  0.00000002235 * (2.38045158073 +   453.42489381900 * t).Cos();
		rtn +=  0.00000002126 * (0.54976393136 +    41.05379694460 * t).Cos();
		rtn +=  0.00000002111 * (5.93089610785 +    25.60286266560 * t).Cos();
		rtn +=  0.00000002075 * (5.20632201951 +    30.71067209630 * t).Cos();
		rtn +=  0.00000002018 * (3.42245274178 +    31.01948863700 * t).Cos();
		rtn +=  0.00000001876 * (2.59784179105 +    33.94024994380 * t).Cos();
		rtn +=  0.00000001859 * (0.89409373259 +    24.11838995730 * t).Cos();
		rtn +=  0.00000001776 * (3.86571077241 +   395.57870223900 * t).Cos();
		rtn +=  0.00000001700 * (3.91715254287 +    11.04570026390 * t).Cos();
		rtn +=  0.00000001646 * (3.34591387314 +    44.72531777680 * t).Cos();
		rtn +=  0.00000001644 * (0.15855999051 +   152.53214255120 * t).Cos();
		rtn +=  0.00000001614 * (0.42137145545 +   175.16605980020 * t).Cos();
		rtn +=  0.00000001517 * (3.12967210501 +   491.55792945680 * t).Cos();
		rtn +=  0.00000001468 * (6.12983933526 +  1550.93985964600 * t).Cos();
		rtn +=  0.00000001408 * (6.13722948564 +   490.07345674850 * t).Cos();
		rtn +=  0.00000001336 * (3.28611928206 +   493.04240216510 * t).Cos();
		rtn +=  0.00000001207 * (0.59525736062 +   312.19908396260 * t).Cos();
		rtn +=  0.00000001193 * (4.63176675581 +    60.76695288680 * t).Cos();
		rtn +=  0.00000001176 * (5.87266726996 +     5.41662597140 * t).Cos();
		rtn +=  0.00000001053 * (4.60375516830 +    79.23501669220 * t).Cos();
		rtn +=  0.00000001038 * (1.13470380744 +  1014.13534755060 * t).Cos();
		rtn +=  0.00000001037 * (4.89007314395 +     1.27202438720 * t).Cos();
		rtn +=  0.00000001034 * (5.93741289103 +    32.71640966640 * t).Cos();
		rtn +=  0.00000001002 * (1.85850922283 +     5.10780943070 * t).Cos();
		rtn +=  0.00000000998 * (1.73689827444 +  1028.36244155220 * t).Cos();
		rtn +=  0.00000000994 * (4.11489180313 +     4.66586644600 * t).Cos();
		rtn +=  0.00000000983 * (0.05345050384 +     7.42236354150 * t).Cos();
		rtn +=  0.00000000940 * (3.09103721222 +    62.25142559510 * t).Cos();
		rtn +=  0.00000000922 * (5.12373360511 +   145.10977900970 * t).Cos();
		rtn +=  0.00000000890 * (0.87049255398 +    31.23193695810 * t).Cos();
		rtn +=  0.00000000852 * (5.35508394316 +   144.14657116320 * t).Cos();
		rtn +=  0.00000000828 * (4.06035194600 +   115.88357962170 * t).Cos();
		rtn +=  0.00000000825 * (1.35568908148 +   129.91947716160 * t).Cos();
		rtn +=  0.00000000793 * (6.13086312116 +   567.82400073240 * t).Cos();
		rtn +=  0.00000000789 * (0.37496785039 +    26.82670294300 * t).Cos();
		rtn +=  0.00000000781 * (0.10946327923 +   173.68158709190 * t).Cos();
		rtn +=  0.00000000738 * (3.56766018960 +   176.65053250850 * t).Cos();
		rtn +=  0.00000000727 * (1.39718382835 +   213.29909543800 * t).Cos();
		rtn +=  0.00000000714 * (6.24797992301 +   106.97674337190 * t).Cos();
		rtn +=  0.00000000711 * (3.14189997439 +   278.25883401880 * t).Cos();
		rtn +=  0.00000000669 * (4.50554989443 +    27.08733537390 * t).Cos();
		rtn +=  0.00000000654 * (1.13177751192 +    68.84370773410 * t).Cos();
		rtn +=  0.00000000639 * (0.68930265745 +   529.69096509460 * t).Cos();
		rtn +=  0.00000000624 * (0.01567750666 +    28.57180808220 * t).Cos();
		rtn +=  0.00000000608 * (4.60180625368 +   189.39315380180 * t).Cos();
		rtn +=  0.00000000595 * (0.00857468445 +    42.58645376270 * t).Cos();
		rtn +=  0.00000000530 * (5.61201247153 +    12.53017297220 * t).Cos();
		rtn +=  0.00000000526 * (3.02138731705 +     5.62907429250 * t).Cos();
		rtn +=  0.00000000524 * (3.43316448349 +    38.65430049960 * t).Cos();
		rtn +=  0.00000000521 * (1.02371768017 +   415.29185818120 * t).Cos();
		rtn +=  0.00000000479 * (5.55141744216 +    37.61177077600 * t).Cos();
		rtn +=  0.00000000462 * (3.80436154644 +   343.21857259960 * t).Cos();
		rtn +=  0.00000000456 * (4.44331571392 +    43.24084506850 * t).Cos();
		rtn +=  0.00000000443 * (3.39350946329 +   357.44566660120 * t).Cos();
		rtn +=  0.00000000436 * (2.41630174435 +    82.85835341460 * t).Cos();
		rtn +=  0.00000000424 * (5.27159202779 +   181.75834193920 * t).Cos();
		rtn +=  0.00000000424 * (1.95736011325 +   477.33083545520 * t).Cos();
		rtn +=  0.00000000395 * (1.93577214824 + 10137.01947493540 * t).Cos();
		rtn +=  0.00000000390 * (5.49512204296 +   350.33211960040 * t).Cos();
		rtn +=  0.00000000384 * (5.60377408953 +   594.65070367540 * t).Cos();
		rtn +=  0.00000000383 * (1.90232196422 +    22.63391724900 * t).Cos();
		rtn +=  0.00000000378 * (2.74122401337 +   488.37653571910 * t).Cos();
		rtn +=  0.00000000372 * (0.39980033572 +   494.73932319450 * t).Cos();
		rtn +=  0.00000000369 * (4.45577410338 +     6.90109867970 * t).Cos();
		rtn +=  0.00000000368 * (3.53577440355 +    40.58071619260 * t).Cos();
		rtn +=  0.00000000361 * (0.29018303419 +    72.07328558160 * t).Cos();
		rtn +=  0.00000000358 * (3.69126616347 +     3.93215326310 * t).Cos();
		rtn +=  0.00000000353 * (1.10614174053 +    20.60692781950 * t).Cos();
		rtn +=  0.00000000352 * (3.10952926034 +   135.54855145410 * t).Cos();
		rtn +=  0.00000000328 * (0.50849285663 +  6206.80977871580 * t).Cos();
		rtn +=  0.00000000307 * (5.39420288683 +   160.93896579860 * t).Cos();
		rtn +=  0.00000000296 * (0.86351261285 +   149.56319713460 * t).Cos();
		rtn +=  0.00000000295 * (2.48737537240 +    19.12245511120 * t).Cos();
		rtn +=  0.00000000290 * (0.18636083306 +   143.62530630140 * t).Cos();
		rtn +=  0.00000000288 * (2.28755739359 +    47.69426319340 * t).Cos();
		rtn +=  0.00000000287 * (2.44403568436 +    16.67477455640 * t).Cos();
		rtn +=  0.00000000282 * (1.48595620175 +   983.11585891360 * t).Cos();
		rtn +=  0.00000000266 * (3.09977370364 +    69.36497259590 * t).Cos();
		rtn +=  0.00000000266 * (1.21002824826 +   505.78502345840 * t).Cos();
		rtn +=  0.00000000265 * (0.62702473701 +   253.57099508990 * t).Cos();
		rtn +=  0.00000000257 * (3.64119914774 +   446.31134681820 * t).Cos();
		rtn +=  0.00000000256 * (0.42073598460 +    23.90594163620 * t).Cos();
		rtn +=  0.00000000252 * (3.12745026026 +   460.53844081980 * t).Cos();
		rtn +=  0.00000000239 * (5.54080102299 +   911.04257333200 * t).Cos();
		rtn +=  0.00000000238 * (2.69801319489 +   882.94384600180 * t).Cos();
		rtn +=  0.00000000231 * (2.47026250085 +   454.90936652730 * t).Cos();
		rtn +=  0.00000000230 * (3.24571542922 +  1066.49547719000 * t).Cos();
		rtn +=  0.00000000224 * (4.43751392203 +   639.89728631400 * t).Cos();
		rtn +=  0.00000000220 * (2.30038816175 +  1052.26838318840 * t).Cos();
		rtn +=  0.00000000216 * (5.44225918870 +    39.09624348430 * t).Cos();
		rtn +=  0.00000000213 * (1.64175339637 +  1089.12939443900 * t).Cos();
		rtn +=  0.00000000212 * (5.41931177641 +    64.95973858080 * t).Cos();
		rtn +=  0.00000000210 * (4.53976756699 +  1093.32218013300 * t).Cos();
		rtn +=  0.00000000202 * (3.43517732411 +    45.24658263860 * t).Cos();
		rtn +=  0.00000000201 * (2.58746514605 +   119.50691634410 * t).Cos();
		rtn +=  0.00000000200 * (6.12663205401 +    14.22709400160 * t).Cos();
		rtn +=  0.00000000189 * (4.05785534221 +   120.99138905240 * t).Cos();
		rtn +=  0.00000000186 * (2.50651218075 +   487.36514376280 * t).Cos();
		rtn +=  0.00000000184 * (2.24245977278 +   815.06334611420 * t).Cos();
		rtn +=  0.00000000183 * (5.45168150656 +   218.40690486870 * t).Cos();
		rtn +=  0.00000000176 * (3.86129425367 +   148.33935685720 * t).Cos();
		rtn +=  0.00000000175 * (4.49165234532 +   171.23390653710 * t).Cos();
		rtn +=  0.00000000173 * (2.61090344107 +   389.94962794650 * t).Cos();
		rtn +=  0.00000000171 * (5.50633466316 +   179.09821306330 * t).Cos();
		rtn +=  0.00000000171 * (0.66899426684 +   179.31066138440 * t).Cos();
		rtn +=  0.00000000167 * (3.94754384833 +    77.22927912210 * t).Cos();
		rtn +=  0.00000000166 * (3.41009128748 +    81.37388070630 * t).Cos();
		rtn +=  0.00000000164 * (1.49614763046 +    63.73589830340 * t).Cos();
		rtn +=  0.00000000163 * (3.88198848446 +   556.51766803760 * t).Cos();
		rtn +=  0.00000000161 * (2.22215642318 +   574.93754773320 * t).Cos();
		rtn +=  0.00000000161 * (1.21480182441 +  1024.43028828910 * t).Cos();
		rtn +=  0.00000000156 * (0.64321524870 +  1029.84691426050 * t).Cos();
		rtn +=  0.00000000155 * (3.25842414799 + 10251.41858184880 * t).Cos();
		rtn +=  0.00000000152 * (3.35145509017 +   285.37238101960 * t).Cos();
		rtn +=  0.00000000152 * (0.42398786475 +   274.06604832480 * t).Cos();
		rtn +=  0.00000000147 * (4.30958930740 +   157.63995198190 * t).Cos();
		rtn +=  0.00000000147 * (1.80689177510 +   377.41945497430 * t).Cos();
		rtn +=  0.00000000146 * (5.70714579127 +   419.48464387520 * t).Cos();
		rtn +=  0.00000000140 * (1.49826604627 +   386.98068252990 * t).Cos();
		rtn +=  0.00000000137 * (2.14480243915 +   563.63121503840 * t).Cos();
		rtn +=  0.00000000136 * (1.81672451740 +   151.04766984290 * t).Cos();
		rtn +=  0.00000000135 * (5.07517561780 +   426.59819087600 * t).Cos();
		rtn +=  0.00000000134 * (4.16039455079 +   169.53698550770 * t).Cos();
		rtn +=  0.00000000134 * (3.18868986487 +   166.56804009110 * t).Cos();
		rtn +=  0.00000000129 * (3.64795525602 +   183.76407950930 * t).Cos();
		rtn +=  0.00000000129 * (2.67625057010 +   180.79513409270 * t).Cos();
		rtn +=  0.00000000127 * (3.98726599710 +    84.34282612290 * t).Cos();
		rtn +=  0.00000000123 * (4.46641157829 +  1022.73336725970 * t).Cos();
		rtn +=  0.00000000121 * (0.29300927469 +   206.18554843720 * t).Cos();
		rtn +=  0.00000000116 * (6.06435563172 +   220.41264243880 * t).Cos();
		rtn +=  0.00000000116 * (5.58946529961 +    35.68535508300 * t).Cos();
		rtn +=  0.00000000112 * (4.34485256988 +   138.51749687070 * t).Cos();
		rtn +=  0.00000000108 * (2.10378485880 +   494.52687487340 * t).Cos();
		rtn +=  0.00000000108 * (1.03796693383 +   488.58898404020 * t).Cos();
		rtn +=  0.00000000106 * (0.87068583107 +  1059.38193018920 * t).Cos();
		rtn +=  0.00000000097 * (6.05634803604 +   482.95990974770 * t).Cos();
		rtn +=  0.00000000097 * (0.74486741478 +   485.92885516430 * t).Cos();
		rtn +=  0.00000000095 * (5.54259914856 +   497.18700374930 * t).Cos();
		rtn +=  0.00000000095 * (0.23111852730 +   500.15594916590 * t).Cos();
		rtn +=  0.00000000085 * (3.16062141266 +   522.57741809380 * t).Cos();
		rtn +=  0.00000000084 * (2.64687252518 +   536.80451209540 * t).Cos();
		rtn +=  0.00000000074 * (3.90678924318 +  1019.76442184310 * t).Cos();
		return rtn;
	}

	// MNeptune.L2(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 2. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 2. Ordnung.</returns>
	private static double L2(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.00053892649 * (0.00000000000 +    0.00000000000 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00000295693 * (1.85520292248 +    1.48447270830 * t).Cos();
		rtn += 0.00000281251 * (1.19084538887 +   38.13303563780 * t).Cos();
		rtn += 0.00000270190 * (5.72143228148 +   76.26607127560 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000023023 * (1.21035596452 +    2.96894541660 * t).Cos();
		rtn += 0.00000009057 * (4.42544992035 +   35.16409022120 * t).Cos();
		rtn += 0.00000007333 * (0.54033306830 +    2.44768055480 * t).Cos();
		rtn += 0.00000005223 * (0.67427930044 +  168.05251279940 * t).Cos();
		rtn += 0.00000005201 * (3.02338671812 +  182.27960680100 * t).Cos();
		rtn += 0.00000004288 * (3.84351844003 +  114.39910691340 * t).Cos();
		rtn += 0.00000003925 * (3.53214557374 +  484.44438245600 * t).Cos();
		rtn += 0.00000003741 * (5.90238217874 +  498.67147645760 * t).Cos();
		rtn += 0.00000003415 * (0.55971639038 +   74.78159856730 * t).Cos();
		rtn += 0.00000003255 * (1.84921884906 +  175.16605980020 * t).Cos();
		rtn += 0.00000002966 * (0.31002477611 +    4.45341812490 * t).Cos();
		rtn += 0.00000002451 * (4.68586840176 +  491.55792945680 * t).Cos();
		rtn += 0.00000002211 * (4.37997092240 +    7.11354700080 * t).Cos();
		rtn += 0.00000002204 * (1.69321574906 +   77.75054398390 * t).Cos();
		rtn += 0.00000002157 * (1.89135758747 +  388.46515523820 * t).Cos();
		rtn += 0.00000001847 * (3.48574435762 +    9.56122755560 * t).Cos();
		rtn += 0.00000001844 * (5.12281562096 +   33.67961751290 * t).Cos();
		rtn += 0.00000001652 * (2.55859494053 +   36.64856292950 * t).Cos();
		rtn += 0.00000001309 * (4.52400192922 + 1021.24889455140 * t).Cos();
		rtn += 0.00000001124 * (0.38710602242 +  137.03302416240 * t).Cos();
		rtn += 0.00000000664 * (0.88101734307 +    4.19278569400 * t).Cos();
		rtn += 0.00000000582 * (5.25716719826 +   31.01948863700 * t).Cos();
		rtn += 0.00000000512 * (6.22609200672 +  381.35160823740 * t).Cos();
		rtn += 0.00000000497 * (2.24615784762 +  395.57870223900 * t).Cos();
		rtn += 0.00000000446 * (0.36647221351 +   98.89998852460 * t).Cos();
		rtn += 0.00000000383 * (5.48585528762 +    5.93789083320 * t).Cos();
		rtn += 0.00000000375 * (4.61250246774 +    8.07675484730 * t).Cos();
		rtn += 0.00000000354 * (1.30783918287 +  601.76425067620 * t).Cos();
		rtn += 0.00000000259 * (5.66033623678 +  112.91463420510 * t).Cos();
		rtn += 0.00000000248 * (5.85877831382 + 1059.38193018920 * t).Cos();
		rtn += 0.00000000247 * (2.89695614593 +  189.39315380180 * t).Cos();
		rtn += 0.00000000245 * (4.26572913391 +  220.41264243880 * t).Cos();
		rtn += 0.00000000233 * (3.16423779113 +   41.10198105440 * t).Cos();
		rtn += 0.00000000227 * (0.20028518978 +   60.76695288680 * t).Cos();
		rtn += 0.00000000217 * (1.46218158211 +   71.81265315070 * t).Cos();
		rtn += 0.00000000200 * (0.52604535784 +   64.95973858080 * t).Cos();
		rtn += 0.00000000194 * (2.37949641473 +   73.29712585900 * t).Cos();
		rtn += 0.00000000191 * (4.88786653062 +   39.61750834610 * t).Cos();
		rtn += 0.00000000190 * (5.57500985081 +  343.21857259960 * t).Cos();
		rtn += 0.00000000184 * (3.01962045713 + 1014.13534755060 * t).Cos();
		rtn += 0.00000000182 * (2.33457064554 +  152.53214255120 * t).Cos();
		rtn += 0.00000000182 * (1.92429384025 +  183.76407950930 * t).Cos();
		rtn += 0.00000000178 * (0.34928799031 + 1028.36244155220 * t).Cos();
		rtn += 0.00000000173 * (6.23717119485 +  493.04240216510 * t).Cos();
		rtn += 0.00000000172 * (3.66036463613 +  477.33083545520 * t).Cos();
		rtn += 0.00000000172 * (0.59550457102 +   46.20979048510 * t).Cos();
		rtn += 0.00000000171 * (1.61368476689 +  357.44566660120 * t).Cos();
		rtn += 0.00000000169 * (4.91086673212 +  166.56804009110 * t).Cos();
		rtn += 0.00000000157 * (5.89200571154 +  169.53698550770 * t).Cos();
		rtn += 0.00000000151 * (3.81621340568 +  146.59425171800 * t).Cos();
		rtn += 0.00000000136 * (2.75150881988 +  144.14657116320 * t).Cos();
		rtn += 0.00000000104 * (6.03262825314 +  529.69096509460 * t).Cos();
		rtn += 0.00000000076 * (0.20932812381 +  453.42489381900 * t).Cos();
		return rtn;
	}

	// MNeptune.L3(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 3. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 3. Ordnung.</returns>
	private static double L3(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000031254 * (0.00000000000 +   0.00000000000 * t).Cos();
		rtn += 0.00000014541 * (1.35337075856 +  76.26607127560 * t).Cos();
		rtn += 0.00000012461 * (6.04431418812 +   1.48447270830 * t).Cos();
		rtn += 0.00000011547 * (6.11257808366 +  38.13303563780 * t).Cos();
		rtn += 0.00000001351 * (4.93951495175 +   2.96894541660 * t).Cos();
		rtn += 0.00000000741 * (2.35936954597 + 168.05251279940 * t).Cos();
		rtn += 0.00000000715 * (1.27409542804 + 182.27960680100 * t).Cos();
		rtn += 0.00000000664 * (0.55871435877 +  31.01948863700 * t).Cos();
		rtn += 0.00000000537 * (5.23632185196 + 484.44438245600 * t).Cos();
		rtn += 0.00000000523 * (4.16769839601 + 498.67147645760 * t).Cos();
		rtn += 0.00000000301 * (2.69253200796 +   7.11354700080 * t).Cos();
		rtn += 0.00000000206 * (2.51012178002 +  74.78159856730 * t).Cos();
		rtn += 0.00000000194 * (2.05904114139 + 137.03302416240 * t).Cos();
		rtn += 0.00000000160 * (5.63111039032 + 114.39910691340 * t).Cos();
		rtn += 0.00000000149 * (3.09327713923 +  35.16409022120 * t).Cos();
		return rtn;
	}

	// MNeptune.L4(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 4. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 4. Ordnung.</returns>
	private static double L4(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00000113998 * (3.14159265359 +  0.00000000000 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000000605 * (3.18211885677 + 76.26607127560 * t).Cos();
		return rtn;
	}

	// MNeptune.L5(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 5. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 5. Ordnung.</returns>
	private static double L5(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000000874 * (3.14159265359 + 0.00000000000 * t).Cos();
		return rtn;
	}

	// MNeptune.Longitude(EPrecision)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Länge zur aktuellen Systemzeit.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <returns>Heliozentrisch-ekliptikale Länge zur aktuellen Systemzeit.</returns>
	public static double Longitude(EPrecision value)
	{
		// Lokale Felder einrichten
		double jd = DateTime.Now.ToJdn();
		return MNeptune.Longitude(value, jd);
	}

	// MNeptune.Longitude(EPrecision, double)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Länge zur julianischen Tageszahl.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="jd">Julianische Tageszahl.</param>
	/// <returns>Heliozentrisch-ekliptikale Länge zur julianischen Tageszahl.</returns>
	public static double Longitude(EPrecision value, double jd)
	{
		// Lokale Felder einrichten
		double t  = (jd - MCalendar.Jdn20000101) / 365250.0; // Jahrhundertbruchteil
		double l0 = MNeptune.L0(value, t);
		double l1 = MNeptune.L1(value, t);
		double l2 = MNeptune.L2(value, t);
		double l3 = MNeptune.L3(value, t);
		double l4 = MNeptune.L4(value, t);
		double l5 = MNeptune.L5(value, t);

		// Länge berechnen
		return MMath.Polynome(t, l0, l1, l2, l3, l4, l5).Mod(MMath.Pi2);
	}
}
