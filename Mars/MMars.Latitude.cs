using Acamat.LCore;
using Acamat.LMath;
using System;

namespace Acamat.LCalendar;

/// <summary>
/// Bündelt Berechnungen zum Mars.
/// </summary>
public static partial class MMars
{
	// ------------------- //
	// Felder und Methoden //
	// ------------------- //
	// MMars.B0(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 0. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 0. Ordnung.</returns>
	private static double B0(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.03197134986 * (3.76832042432 +  3340.61242669980 * t).Cos();
		rtn += 0.00298033234 * (4.10616996243 +  6681.22485339960 * t).Cos();
		rtn += 0.00289104742 * (0.00000000000 +     0.00000000000 * t).Cos();
		rtn += 0.00031365538 * (4.44651052853 + 10021.83728009940 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00003484100 * (4.78812547889 + 13362.44970679920 * t).Cos();
		rtn += 0.00000443401 * (5.02642620491 +  3344.13554504880 * t).Cos();
		rtn += 0.00000442999 * (5.65233015876 +  3337.08930835080 * t).Cos();
		rtn += 0.00000399109 * (5.13056814700 + 16703.06213349900 * t).Cos();
		rtn += 0.00000292506 * (3.79290644595 +  2281.23049651060 * t).Cos();
		rtn += 0.00000181982 * (6.13648011704 +  6151.53388830500 * t).Cos();
		rtn += 0.00000163159 * (4.26399626634 +   529.69096509460 * t).Cos();
		rtn += 0.00000159678 * (2.23194610246 +  1059.38193018920 * t).Cos();
		rtn += 0.00000149297 * (2.16501209917 +  5621.84292321040 * t).Cos();
		rtn += 0.00000142686 * (1.18215016110 +  3340.59517304760 * t).Cos();
		rtn += 0.00000142685 * (3.21292180820 +  3340.62968035200 * t).Cos();
		rtn += 0.00000139323 * (2.41796344238 +  8962.45534991020 * t).Cos();
		rtn += 0.00000086377 * (5.74429648412 +  3738.76143010800 * t).Cos();
		rtn += 0.00000083276 * (5.98866315739 +  6677.70173505060 * t).Cos();
		rtn += 0.00000082544 * (5.36667872319 +  6684.74797174860 * t).Cos();
		rtn += 0.00000073640 * (5.09187524843 +   398.14900340820 * t).Cos();
		rtn += 0.00000072660 * (5.53775710437 +  6283.07584999140 * t).Cos();
		rtn += 0.00000063111 * (0.73049113369 +  5884.92684658320 * t).Cos();
		rtn += 0.00000062338 * (4.85071999184 +  2942.46342329160 * t).Cos();
		rtn += 0.00000060116 * (3.67960808826 +   796.29800681640 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00000047199 * (4.52184736343 +  3149.16416058820 * t).Cos();
		rtn += 0.00000046953 * (5.13486627234 +  3340.67973700260 * t).Cos();
		rtn += 0.00000046951 * (5.54339723804 +  3340.54511639700 * t).Cos();
		rtn += 0.00000046630 * (5.47361665459 + 20043.67456019880 * t).Cos();
		rtn += 0.00000045588 * (2.13262507507 +  2810.92146160520 * t).Cos();
		rtn += 0.00000041269 * (0.20003189001 +  9492.14631500480 * t).Cos();
		rtn += 0.00000038540 * (4.08008443274 +  4136.91043351620 * t).Cos();
		rtn += 0.00000033069 * (4.06581918329 +  1751.53953141600 * t).Cos();
		rtn += 0.00000032736 * (2.62071056958 +  2914.01423582380 * t).Cos();
		rtn += 0.00000029694 * (5.92218297386 +  3532.06069281140 * t).Cos();
		rtn += 0.00000029521 * (2.75342566734 + 12303.06777661000 * t).Cos();
		rtn += 0.00000028618 * (4.94710527914 +  3870.30339179440 * t).Cos();
		rtn += 0.00000028169 * (2.06282533993 +  5486.77784317500 * t).Cos();
		rtn += 0.00000026603 * (3.55085844020 +  6681.24210705180 * t).Cos();
		rtn += 0.00000026603 * (1.52008675291 +  6681.20759974740 * t).Cos();
		rtn += 0.00000026052 * (2.60064548916 +  4399.99435688900 * t).Cos();
		rtn += 0.00000023336 * (2.27624532707 +  1589.07289528380 * t).Cos();
		rtn += 0.00000022637 * (2.27507466406 +  1194.44701022460 * t).Cos();
		rtn += 0.00000019947 * (2.67365368471 +  8432.76438481560 * t).Cos();
		rtn += 0.00000018887 * (6.04416196149 +  7079.37385680780 * t).Cos();
		rtn += 0.00000015104 * (2.81013535571 +  3496.03282613400 * t).Cos();
		rtn += 0.00000014846 * (3.41358603159 +  5088.62883976680 * t).Cos();
		rtn += 0.00000014682 * (5.89211938785 +  9623.68827669120 * t).Cos();
		rtn += 0.00000014152 * (2.42512744356 +  3333.49887969900 * t).Cos();
		rtn += 0.00000014008 * (1.67425558329 +  6254.62666252360 * t).Cos();
		rtn += 0.00000013310 * (2.62839773036 +   426.59819087600 * t).Cos();
		rtn += 0.00000013183 * (0.04521207632 + 10018.31416175040 * t).Cos();
		rtn += 0.00000013011 * (5.70759434129 + 10025.36039844840 * t).Cos();
		rtn += 0.00000012080 * (1.51804981987 +  3185.19202726560 * t).Cos();
		rtn += 0.00000011554 * (5.57418971820 +   191.44826611160 * t).Cos();
		rtn += 0.00000011530 * (2.13314819584 + 11773.37681151540 * t).Cos();
		rtn += 0.00000011196 * (0.55829576311 +  5092.15195811580 * t).Cos();
		rtn += 0.00000010435 * (5.72414012635 +  6467.92575796160 * t).Cos();
		rtn += 0.00000009846 * (0.86942245495 +  1592.59601363280 * t).Cos();
		rtn += 0.00000009761 * (1.09342288660 +  2544.31441988340 * t).Cos();
		rtn += 0.00000008937 * (4.83790385610 +  6489.77658728800 * t).Cos();
		rtn += 0.00000008799 * (1.52910882795 +  3339.63210563160 * t).Cos();
		rtn += 0.00000008797 * (2.86597575792 +  3341.59274776800 * t).Cos();
		rtn += 0.00000008754 * (5.88131160438 +  6681.15754309680 * t).Cos();
		rtn += 0.00000008754 * (5.47281660412 +  6681.29216370240 * t).Cos();
		rtn += 0.00000008652 * (4.72118876809 +   213.29909543800 * t).Cos();
		rtn += 0.00000008560 * (4.79003986337 +  4690.47983635860 * t).Cos();
		rtn += 0.00000008384 * (2.65895230037 +  4535.05943692440 * t).Cos();
		rtn += 0.00000008213 * (4.82608134710 +  3553.91152213780 * t).Cos();
		rtn += 0.00000008103 * (1.00994045172 +  9225.53927328300 * t).Cos();
		rtn += 0.00000007209 * (4.41679446871 +  7477.52286021600 * t).Cos();
		rtn += 0.00000006974 * (0.53246284561 + 12832.75874170460 * t).Cos();
		rtn += 0.00000006087 * (1.89071507516 +  9595.23908922340 * t).Cos();
		rtn += 0.00000005592 * (3.97792577165 +  3127.31333126180 * t).Cos();
		rtn += 0.00000005584 * (6.18909308524 +  4292.33083295040 * t).Cos();
		rtn += 0.00000005530 * (5.81711987294 + 23384.28698689860 * t).Cos();
		rtn += 0.00000005174 * (3.62343554596 +  2700.71514038580 * t).Cos();
		rtn += 0.00000005126 * (0.11856805000 +  4562.46099302120 * t).Cos();
		rtn += 0.00000005038 * (6.06393121994 +  7210.91581849420 * t).Cos();
		rtn += 0.00000004999 * (3.09121636067 + 15643.68020330980 * t).Cos();
		rtn += 0.00000004965 * (5.74589127183 +  1990.74501704100 * t).Cos();
		rtn += 0.00000004863 * (1.33051301524 +  3894.18182954220 * t).Cos();
		rtn += 0.00000004686 * (3.27731664264 +  3361.38782219220 * t).Cos();
		rtn += 0.00000004685 * (1.11750235736 +  3319.83703120740 * t).Cos();
		rtn += 0.00000004639 * (6.14089337232 +     7.11354700080 * t).Cos();
		rtn += 0.00000004246 * (4.19639278630 +  2146.16541647520 * t).Cos();
		rtn += 0.00000004184 * (3.88899446923 + 10021.85453375160 * t).Cos();
		rtn += 0.00000004184 * (1.85821885540 + 10021.82002644720 * t).Cos();
		rtn += 0.00000004101 * (6.22532797325 + 10213.28554621100 * t).Cos();
		rtn += 0.00000003954 * (2.65573703692 +  4929.68532198360 * t).Cos();
		rtn += 0.00000003919 * (2.96552252075 +  7740.60678358880 * t).Cos();
		rtn += 0.00000003372 * (4.45558202843 +  6674.11130639880 * t).Cos();
		rtn += 0.00000003361 * (1.85016770821 +  2957.71589447660 * t).Cos();
		rtn += 0.00000003124 * (0.08536218671 + 10419.98628350760 * t).Cos();
		rtn += 0.00000003094 * (2.40385309455 +  2118.76386037840 * t).Cos();
		rtn += 0.00000003093 * (1.98041729732 +  3337.02199804800 * t).Cos();
		rtn += 0.00000003079 * (2.41163389513 +  3344.20285535160 * t).Cos();
		rtn += 0.00000003044 * (4.38894419912 +  1221.84856632140 * t).Cos();
		rtn += 0.00000003011 * (4.33965766608 +  2388.89402044920 * t).Cos();
		rtn += 0.00000002879 * (2.93292197885 +  2787.04302385740 * t).Cos();
		rtn += 0.00000002686 * (2.38172448359 + 15113.98923821520 * t).Cos();
		rtn += 0.00000002616 * (1.23659420897 +  4933.20844033260 * t).Cos();
		rtn += 0.00000002516 * (2.30275910483 +  3723.50895892300 * t).Cos();
		rtn += 0.00000002510 * (4.06249795775 +  6872.67311951120 * t).Cos();
		rtn += 0.00000002495 * (3.87395320804 +  7903.07341972100 * t).Cos();
		rtn += 0.00000002443 * (3.02632351975 +  3767.21061757580 * t).Cos();
		rtn += 0.00000002385 * (6.23883456815 + 12964.30070339100 * t).Cos();
		rtn += 0.00000002265 * (1.85773885180 +  6525.80445396540 * t).Cos();
		rtn += 0.00000002253 * (0.47469626036 +  3475.67750673520 * t).Cos();
		rtn += 0.00000002213 * (3.91982326360 +  3205.54734666440 * t).Cos();
		rtn += 0.00000002192 * (1.68877598700 +   639.89728631400 * t).Cos();
		rtn += 0.00000002157 * (6.07600403318 +  9808.53818466140 * t).Cos();
		rtn += 0.00000002156 * (2.87771528495 +  6041.32756708560 * t).Cos();
		rtn += 0.00000001937 * (0.38000997629 + 13358.92658845020 * t).Cos();
		rtn += 0.00000001910 * (6.04319894051 + 13365.97282514820 * t).Cos();
		rtn += 0.00000001806 * (2.38408432339 + 11243.68584642080 * t).Cos();
		rtn += 0.00000001746 * (0.10485504333 +  3583.34103067380 * t).Cos();
		rtn += 0.00000001665 * (3.60183854165 +  2288.34404351140 * t).Cos();
		rtn += 0.00000001646 * (0.73261192032 +  2274.11694950980 * t).Cos();
		rtn += 0.00000001642 * (1.86812936557 +  6680.24453233140 * t).Cos();
		rtn += 0.00000001637 * (3.20410489018 +  6682.20517446780 * t).Cos();
		rtn += 0.00000001616 * (3.39954231101 +  8429.24126646660 * t).Cos();
		rtn += 0.00000001616 * (2.19447775480 +  8827.39026987480 * t).Cos();
		rtn += 0.00000001567 * (1.76860259924 +   382.89653222320 * t).Cos();
		rtn += 0.00000001527 * (5.79343536555 +  6894.52394883760 * t).Cos();
		rtn += 0.00000001507 * (5.80795976424 +  1748.01641306700 * t).Cos();
		rtn += 0.00000001492 * (2.99360929050 +  7875.67186362420 * t).Cos();
		rtn += 0.00000001459 * (1.40571286543 + 14584.29827312060 * t).Cos();
		rtn += 0.00000001409 * (5.17099876287 +  9830.38901398780 * t).Cos();
		rtn += 0.00000001377 * (6.21830533138 + 10021.76996979660 * t).Cos();
		rtn += 0.00000001377 * (5.80980821450 + 10021.90459040220 * t).Cos();
		rtn += 0.00000001357 * (0.32856318286 +  4032.77002792660 * t).Cos();
		rtn += 0.00000001296 * (2.92899986522 +  9381.93999378540 * t).Cos();
		rtn += 0.00000001291 * (2.98932404463 +  6836.64525283380 * t).Cos();
		rtn += 0.00000001269 * (2.02253791623 +   155.42039943420 * t).Cos();
		rtn += 0.00000001227 * (2.20421067322 + 12935.85151592320 * t).Cos();
		rtn += 0.00000001153 * (4.73786864168 +  8031.09226305840 * t).Cos();
		rtn += 0.00000001083 * (0.87622049125 + 16173.37116840440 * t).Cos();
		rtn += 0.00000001080 * (4.75502761725 + 10818.13528691580 * t).Cos();
		rtn += 0.00000001046 * (6.11317298058 +  5331.35744374080 * t).Cos();
		rtn += 0.00000001044 * (2.65889542110 +  3312.16323923200 * t).Cos();
		rtn += 0.00000001042 * (1.73541825729 +  3369.06161416760 * t).Cos();
		rtn += 0.00000001035 * (2.44286811558 +  1052.26838318840 * t).Cos();
		rtn += 0.00000001016 * (1.33950348904 + 12566.15169998280 * t).Cos();
		rtn += 0.00000000978 * (4.55697167317 +  3097.88382272579 * t).Cos();
		rtn += 0.00000000957 * (5.29505019432 +  1066.49547719000 * t).Cos();
		rtn += 0.00000000949 * (0.04595688771 +  7064.12138562280 * t).Cos();
		rtn += 0.00000000946 * (1.92368414869 +  5628.95647021120 * t).Cos();
		rtn += 0.00000000934 * (0.35014113954 +  3264.34635542420 * t).Cos();
		rtn += 0.00000000933 * (0.82551054416 +  3503.07906283200 * t).Cos();
		rtn += 0.00000000904 * (4.11832249537 +  3355.86489788480 * t).Cos();
		rtn += 0.00000000904 * (0.27361540197 +  3325.35995551480 * t).Cos();
		rtn += 0.00000000901 * (1.46788821922 +  6660.44945790720 * t).Cos();
		rtn += 0.00000000899 * (1.87265511538 +  3077.52850332700 * t).Cos();
		rtn += 0.00000000894 * (0.34991139502 + 10551.52824519400 * t).Cos();
		rtn += 0.00000000892 * (2.51347636401 +  3603.69635007260 * t).Cos();
		rtn += 0.00000000883 * (5.46537936740 +  5614.72937620960 * t).Cos();
		rtn += 0.00000000872 * (3.61205859852 +  6702.00024889200 * t).Cos();
		rtn += 0.00000000846 * (4.65096242323 +  6438.49624942560 * t).Cos();
		rtn += 0.00000000842 * (5.61713543212 +  8955.34180290940 * t).Cos();
		rtn += 0.00000000842 * (0.57536275896 +  3191.04922956520 * t).Cos();
		rtn += 0.00000000807 * (2.26443259820 +  8969.56889691100 * t).Cos();
		rtn += 0.00000000762 * (3.42576079312 + 18984.29263000960 * t).Cos();
		rtn += 0.00000000739 * (4.97716008834 + 10014.72373309860 * t).Cos();
		rtn += 0.00000000665 * (6.05561837558 +  7632.94325965020 * t).Cos();
		rtn += 0.00000000649 * (2.17894376907 +  6298.32832117640 * t).Cos();
		rtn += 0.00000000641 * (3.24534699403 +  3347.72597370060 * t).Cos();
		rtn += 0.00000000638 * (4.49647258906 +     3.52311834900 * t).Cos();
		rtn += 0.00000000626 * (4.60715188203 +  2487.41604494780 * t).Cos();
		rtn += 0.00000000617 * (4.22635718375 + 13362.46696045140 * t).Cos();
		rtn += 0.00000000617 * (2.19529512598 + 13362.43245314700 * t).Cos();
		rtn += 0.00000000613 * (3.01718810256 +  8270.29774868340 * t).Cos();
		rtn += 0.00000000605 * (4.68480399923 +  5729.50644714900 * t).Cos();
		rtn += 0.00000000593 * (2.97207045977 +  3178.14579056760 * t).Cos();
		rtn += 0.00000000584 * (4.51625727923 +  1648.44675719740 * t).Cos();
		rtn += 0.00000000579 * (3.32303439858 + 11081.21921028860 * t).Cos();
		rtn += 0.00000000579 * (2.31217959727 +  6677.63442474780 * t).Cos();
		rtn += 0.00000000578 * (2.74445077242 +  6684.81528205140 * t).Cos();
		rtn += 0.00000000572 * (4.27984088783 +  6546.15977336420 * t).Cos();
		rtn += 0.00000000571 * (5.65341463660 +  2921.12778282460 * t).Cos();
		rtn += 0.00000000567 * (2.62806466971 +  2648.45482547300 * t).Cos();
		rtn += 0.00000000558 * (5.89236366633 +  6158.64743530580 * t).Cos();
		rtn += 0.00000000557 * (6.13686769377 + 26724.89941359840 * t).Cos();
		rtn += 0.00000000556 * (4.98610303145 +  6531.66165626500 * t).Cos();
		rtn += 0.00000000552 * (5.75724124958 +   149.56319713460 * t).Cos();
		rtn += 0.00000000552 * (1.07795672495 +   536.80451209540 * t).Cos();
		rtn += 0.00000000551 * (3.27081871281 +  6127.65545055720 * t).Cos();
		rtn += 0.00000000550 * (3.11161314141 +  6144.42034130420 * t).Cos();
		rtn += 0.00000000546 * (2.76744357149 +  5459.37628707820 * t).Cos();
		rtn += 0.00000000539 * (0.59284523316 +   553.56940284240 * t).Cos();
		rtn += 0.00000000537 * (4.19207200801 +  3335.08950239240 * t).Cos();
		rtn += 0.00000000536 * (0.18973312148 +  3346.13535100720 * t).Cos();
		rtn += 0.00000000519 * (4.61705823333 +  7373.38245462640 * t).Cos();
		rtn += 0.00000000507 * (1.35016417800 +  3320.25710730100 * t).Cos();
		rtn += 0.00000000502 * (3.03141512630 +  3360.96774609859 * t).Cos();
		rtn += 0.00000000489 * (4.59082197201 +   522.57741809380 * t).Cos();
		rtn += 0.00000000476 * (0.81142637639 +  6816.28993343500 * t).Cos();
		rtn += 0.00000000459 * (4.84216944554 +  1758.65307841680 * t).Cos();
		rtn += 0.00000000445 * (3.64293918046 + 10713.99488132620 * t).Cos();
		rtn += 0.00000000439 * (0.41122589061 + 10404.73381232260 * t).Cos();
		rtn += 0.00000000434 * (1.99641894213 + 26087.90314157420 * t).Cos();
		rtn += 0.00000000423 * (3.77854586358 +  6688.33840040040 * t).Cos();
		rtn += 0.00000000422 * (5.99158563064 +   242.72860397400 * t).Cos();
		rtn += 0.00000000422 * (1.57591737080 +  8273.82086703240 * t).Cos();
		rtn += 0.00000000421 * (4.43540354818 +   103.09277421860 * t).Cos();
		rtn += 0.00000000421 * (3.10245838137 +  8329.67161059700 * t).Cos();
		rtn += 0.00000000420 * (2.77274750272 +  2906.90068882300 * t).Cos();
		rtn += 0.00000000413 * (0.21011211689 + 13149.15061136120 * t).Cos();
		rtn += 0.00000000412 * (4.81039654306 +  3329.97576135000 * t).Cos();
		rtn += 0.00000000410 * (5.85255605682 +  3351.24909204960 * t).Cos();
		rtn += 0.00000000407 * (0.30117328390 + 16304.91313009080 * t).Cos();
		rtn += 0.00000000402 * (2.67375675473 + 18454.60166491500 * t).Cos();
		rtn += 0.00000000401 * (2.06012045711 +  3980.50971301380 * t).Cos();
		rtn += 0.00000000401 * (0.51161484292 + 17085.95866572220 * t).Cos();
		rtn += 0.00000000385 * (1.06248122739 +  7234.79425624200 * t).Cos();
		rtn += 0.00000000375 * (2.50803340920 +  6784.31762761820 * t).Cos();
		rtn += 0.00000000371 * (0.41707432281 + 13760.59871020740 * t).Cos();
		rtn += 0.00000000366 * (6.05186692577 +  3607.21946842160 * t).Cos();
		rtn += 0.00000000363 * (2.19017574725 +  9866.41688066520 * t).Cos();
		rtn += 0.00000000354 * (5.41265456299 +   951.71840625060 * t).Cos();
		rtn += 0.00000000351 * (4.60766539695 +  3074.00538497800 * t).Cos();
		rtn += 0.00000000349 * (1.62483962938 + 17924.91069982040 * t).Cos();
		rtn += 0.00000000348 * (3.36497054127 +  8439.87793181640 * t).Cos();
		rtn += 0.00000000344 * (3.58310197017 +  7107.82304427560 * t).Cos();
		rtn += 0.00000000343 * (0.27605726543 + 10973.55568635000 * t).Cos();
		rtn += 0.00000000340 * (1.73392662280 +  1692.16566950240 * t).Cos();
		rtn += 0.00000000337 * (5.46398740226 +  6604.95878212400 * t).Cos();
		rtn += 0.00000000336 * (2.78173647754 +  4989.05918389720 * t).Cos();
		rtn += 0.00000000336 * (1.56854533505 +  1581.95934828300 * t).Cos();
		rtn += 0.00000000335 * (2.02339633221 +  3333.56619000180 * t).Cos();
		rtn += 0.00000000333 * (4.86991808664 +  3863.18984479360 * t).Cos();
		rtn += 0.00000000328 * (0.43464916253 +  6923.95345737360 * t).Cos();
		rtn += 0.00000000324 * (4.99165215532 + 11371.70468975820 * t).Cos();
		rtn += 0.00000000319 * (1.44510282827 + 11769.85369316640 * t).Cos();
		rtn += 0.00000000317 * (4.91466081381 +  3443.70520091840 * t).Cos();
		rtn += 0.00000000315 * (4.55227306770 +  5828.02847164760 * t).Cos();
		rtn += 0.00000000312 * (0.28436027987 + 13745.34623902240 * t).Cos();
		rtn += 0.00000000296 * (5.25637576704 +    76.26607127560 * t).Cos();
		rtn += 0.00000000293 * (2.20643287367 +  3347.65866339780 * t).Cos();
		rtn += 0.00000000283 * (5.57884389098 +  3973.39616601300 * t).Cos();
		rtn += 0.00000000280 * (1.42134291540 +  6606.44325483230 * t).Cos();
		rtn += 0.00000000280 * (0.76436434398 +   853.19638175200 * t).Cos();
		rtn += 0.00000000273 * (6.12932898811 +  3336.73109134180 * t).Cos();
		rtn += 0.00000000273 * (4.53535816659 +  3344.49376205780 * t).Cos();
		rtn += 0.00000000271 * (4.94509131052 +   692.15760122680 * t).Cos();
		rtn += 0.00000000271 * (1.83008759256 +  3399.98628861340 * t).Cos();
		rtn += 0.00000000271 * (0.08314924409 + 10235.13637553740 * t).Cos();
		rtn += 0.00000000262 * (3.84436620806 +  9168.64089834740 * t).Cos();
		rtn += 0.00000000259 * (1.10208840059 +  1744.42598441520 * t).Cos();
		rtn += 0.00000000257 * (0.15709629188 + 12168.00269657460 * t).Cos();
		rtn += 0.00000000254 * (2.19491751584 +  3281.23856478620 * t).Cos();
		rtn += 0.00000000243 * (1.52425310144 + 14054.60730802600 * t).Cos();
		rtn += 0.00000000237 * (3.13380421805 +    74.78159856730 * t).Cos();
		rtn += 0.00000000236 * (0.97341490472 +  3230.40610548040 * t).Cos();
		rtn += 0.00000000235 * (0.67980074869 + 17395.21973472580 * t).Cos();
		rtn += 0.00000000233 * (3.20163702613 + 10177.25767953360 * t).Cos();
		rtn += 0.00000000232 * (4.73422268172 +  3316.73398895200 * t).Cos();
		rtn += 0.00000000229 * (5.93153003758 +  3364.49086444760 * t).Cos();
		rtn += 0.00000000223 * (4.82744958322 +  9779.10867612540 * t).Cos();
		rtn += 0.00000000222 * (0.71788606092 + 16699.53901514999 * t).Cos();
		rtn += 0.00000000221 * (1.66596576205 + 10575.40668294180 * t).Cos();
		rtn += 0.00000000220 * (1.65400798925 +  3546.79797513700 * t).Cos();
		rtn += 0.00000000219 * (0.09831940529 + 16706.58525184800 * t).Cos();
		rtn += 0.00000000213 * (5.35378111313 +  1596.18644228460 * t).Cos();
		rtn += 0.00000000210 * (5.97305256642 +   419.48464387520 * t).Cos();
		rtn += 0.00000000204 * (2.32272167710 + 13916.01910964160 * t).Cos();
		rtn += 0.00000000200 * (4.79567916236 +  6261.74020952440 * t).Cos();
		rtn += 0.00000000200 * (3.60041329896 +  3304.58456002240 * t).Cos();
		rtn += 0.00000000197 * (3.32400761027 +  5085.03841111500 * t).Cos();
		rtn += 0.00000000196 * (0.78013533938 +  3376.64029337720 * t).Cos();
		rtn += 0.00000000193 * (0.90522037315 + 14314.16811304980 * t).Cos();
		rtn += 0.00000000192 * (2.63243342989 +   433.71173787680 * t).Cos();
		rtn += 0.00000000192 * (0.66079944629 +  3134.42687826260 * t).Cos();
		rtn += 0.00000000191 * (5.88821293073 +  3340.19235060619 * t).Cos();
		rtn += 0.00000000191 * (5.08454560792 +  2178.13772229200 * t).Cos();
		rtn += 0.00000000191 * (4.77647338120 +  3341.03250279340 * t).Cos();
		rtn += 0.00000000190 * (2.65143864216 +  3657.00429635640 * t).Cos();
		rtn += 0.00000000188 * (1.14983778034 + 13892.14067189380 * t).Cos();
		rtn += 0.00000000178 * (3.34059693754 + 11216.28429032400 * t).Cos();
		rtn += 0.00000000174 * (2.20549134205 + 10020.85695903120 * t).Cos();
		rtn += 0.00000000173 * (3.54115285115 + 10022.81760116760 * t).Cos();
		rtn += 0.00000000173 * (0.17070148373 +  3024.22055704320 * t).Cos();
		rtn += 0.00000000172 * (5.71092117488 +  2384.32327072920 * t).Cos();
		rtn += 0.00000000170 * (4.05945259741 +  2818.03500860600 * t).Cos();
		rtn += 0.00000000168 * (0.55746622745 +   110.20632121940 * t).Cos();
		rtn += 0.00000000165 * (5.86551673354 +  2803.80791460440 * t).Cos();
		rtn += 0.00000000165 * (2.91701234796 +  3415.39402526710 * t).Cos();
		rtn += 0.00000000165 * (2.53171951288 + 16276.46394262300 * t).Cos();
		rtn += 0.00000000161 * (2.87915391245 +  4392.88080988820 * t).Cos();
		rtn += 0.00000000161 * (2.64795288862 +  3304.00706139560 * t).Cos();
		rtn += 0.00000000161 * (1.76789928464 +  6709.67404086740 * t).Cos();
		rtn += 0.00000000160 * (1.73968020026 +  3377.21779200400 * t).Cos();
		rtn += 0.00000000159 * (3.72249746113 + 13517.87010623340 * t).Cos();
		rtn += 0.00000000158 * (5.67248197213 +  4407.10790388980 * t).Cos();
		rtn += 0.00000000158 * (5.50643845256 + 13171.00144068760 * t).Cos();
		rtn += 0.00000000157 * (1.00235389487 +  3209.07046501340 * t).Cos();
		rtn += 0.00000000154 * (2.45916882835 + 12722.55242048520 * t).Cos();
		rtn += 0.00000000154 * (0.32136196834 +  6665.97238221460 * t).Cos();
		rtn += 0.00000000153 * (6.14783670557 + 13362.51701710200 * t).Cos();
		rtn += 0.00000000153 * (0.27328628499 + 13362.38239649640 * t).Cos();
		rtn += 0.00000000150 * (3.39592748537 +  3472.15438838620 * t).Cos();
		rtn += 0.00000000142 * (3.02798835989 +  3511.28529731900 * t).Cos();
		rtn += 0.00000000141 * (1.37128440708 +  3169.93955608060 * t).Cos();
		rtn += 0.00000000137 * (3.34809361979 +  3341.04230982650 * t).Cos();
		rtn += 0.00000000137 * (1.04576950390 +  3340.18254357310 * t).Cos();
		rtn += 0.00000000132 * (4.25407099272 + 16858.48253293320 * t).Cos();
		rtn += 0.00000000131 * (5.09769375731 + 14158.74771361560 * t).Cos();
		rtn += 0.00000000130 * (4.95002309460 + 13553.89797291080 * t).Cos();
		rtn += 0.00000000129 * (1.21297315367 + 19513.98359510420 * t).Cos();
		rtn += 0.00000000125 * (2.88510294667 + 17256.63153634140 * t).Cos();
		rtn += 0.00000000125 * (1.32195559043 +  1349.86740965880 * t).Cos();
		rtn += 0.00000000124 * (2.59724598646 + 12310.18132361080 * t).Cos();
		rtn += 0.00000000121 * (5.23997785185 +  9872.27408296480 * t).Cos();
		rtn += 0.00000000120 * (0.64287725481 +  4459.36821880260 * t).Cos();
		rtn += 0.00000000120 * (0.17087854222 +  8671.96987044060 * t).Cos();
		rtn += 0.00000000119 * (5.95361348050 + 12295.95422960920 * t).Cos();
		rtn += 0.00000000119 * (4.15694365082 +  3760.09707057500 * t).Cos();
		rtn += 0.00000000119 * (4.07277528003 + 10184.30391623160 * t).Cos();
		rtn += 0.00000000119 * (2.63312561442 +  7321.12213971360 * t).Cos();
		rtn += 0.00000000112 * (3.35831868034 +  5989.06725217280 * t).Cos();
		rtn += 0.00000000112 * (0.16822264326 +   135.06508003540 * t).Cos();
		rtn += 0.00000000111 * (3.14151030451 + 13524.91634293140 * t).Cos();
		rtn += 0.00000000110 * (5.23317664736 +  1375.77379984580 * t).Cos();
		rtn += 0.00000000110 * (0.94707767481 +  3274.12501778540 * t).Cos();
		rtn += 0.00000000109 * (6.18873749839 +  1478.86657406440 * t).Cos();
		rtn += 0.00000000108 * (1.01854506729 +  3265.83082813250 * t).Cos();
		rtn += 0.00000000106 * (6.13415161313 +   162.46663613220 * t).Cos();
		rtn += 0.00000000106 * (4.30186500383 +   640.87760738220 * t).Cos();
		rtn += 0.00000000105 * (3.09551802365 + 20618.01935853360 * t).Cos();
		rtn += 0.00000000105 * (2.72692368303 +  1162.47470440780 * t).Cos();
		rtn += 0.00000000104 * (5.00696041032 + 13119.72110282519 * t).Cos();
		rtn += 0.00000000104 * (1.73769165705 +  2221.85663459700 * t).Cos();
		rtn += 0.00000000104 * (1.72206104768 +  3296.89351439480 * t).Cos();
		rtn += 0.00000000103 * (1.25691413032 +  3384.33133900480 * t).Cos();
		rtn += 0.00000000103 * (0.43484130196 +  1861.74585263540 * t).Cos();
		rtn += 0.00000000102 * (5.58754073056 +  2766.26762836500 * t).Cos();
		rtn += 0.00000000101 * (5.94930983227 +  8425.65083781480 * t).Cos();
		rtn += 0.00000000099 * (4.25515697974 + 23539.70738633280 * t).Cos();
		rtn += 0.00000000098 * (4.01577665825 +  6843.69148953180 * t).Cos();
		rtn += 0.00000000096 * (1.81122023425 + 10001.06188460700 * t).Cos();
		rtn += 0.00000000095 * (4.94756054764 +  3981.49003408200 * t).Cos();
		rtn += 0.00000000095 * (0.13037485775 + 15508.61512327440 * t).Cos();
		rtn += 0.00000000094 * (5.37493368020 + 13355.33615979840 * t).Cos();
		rtn += 0.00000000093 * (3.58905885066 +  5099.26550511660 * t).Cos();
		rtn += 0.00000000091 * (3.95041101283 + 10042.61267559180 * t).Cos();
		rtn += 0.00000000091 * (2.09965252231 +   949.17560896980 * t).Cos();
		rtn += 0.00000000090 * (3.76370412628 + 22324.90505670940 * t).Cos();
		rtn += 0.00000000089 * (3.52977975496 +  9485.03276800400 * t).Cos();
		rtn += 0.00000000088 * (5.46013317934 + 16460.33352952499 * t).Cos();
		rtn += 0.00000000088 * (1.79608901332 +  6247.51311552280 * t).Cos();
		rtn += 0.00000000087 * (4.97838021880 +  1118.75579210280 * t).Cos();
		rtn += 0.00000000087 * (4.51145821088 +   220.41264243880 * t).Cos();
		rtn += 0.00000000087 * (2.11654357529 +  3450.81874791920 * t).Cos();
		rtn += 0.00000000086 * (0.41976545794 +   956.28915597060 * t).Cos();
		rtn += 0.00000000085 * (2.74791518135 +  3407.09983561420 * t).Cos();
		rtn += 0.00000000084 * (5.78647729498 +  5518.75014899180 * t).Cos();
		rtn += 0.00000000084 * (4.45487801845 +  6696.47732458460 * t).Cos();
		rtn += 0.00000000084 * (0.16960920719 +   263.08392337280 * t).Cos();
		rtn += 0.00000000083 * (2.96589752213 +  6652.77566593180 * t).Cos();
		rtn += 0.00000000082 * (0.01837230371 +  9499.25986200560 * t).Cos();
		rtn += 0.00000000080 * (4.61446168762 +  3914.95722503460 * t).Cos();
		rtn += 0.00000000080 * (0.42550989980 + 18052.92954315780 * t).Cos();
		rtn += 0.00000000079 * (1.79313426804 +    38.13303563780 * t).Cos();
		rtn += 0.00000000079 * (1.50228636499 +  2111.65031337760 * t).Cos();
		rtn += 0.00000000078 * (2.17362706851 + 30220.93223973240 * t).Cos();
		rtn += 0.00000000076 * (2.00296087293 +   224.34479570190 * t).Cos();
		rtn += 0.00000000075 * (2.59340305340 +  1964.83862685400 * t).Cos();
		rtn += 0.00000000074 * (5.32032289064 + 11766.26326451460 * t).Cos();
		rtn += 0.00000000073 * (0.93706647938 + 20735.83216142559 * t).Cos();
		rtn += 0.00000000073 * (0.10667695992 + 29822.78323632420 * t).Cos();
		rtn += 0.00000000072 * (3.89476829327 +  9380.95967271720 * t).Cos();
		rtn += 0.00000000071 * (4.82445647307 +  8542.97070603500 * t).Cos();
		rtn += 0.00000000070 * (2.51605694403 +  9638.94074787620 * t).Cos();
		rtn += 0.00000000069 * (6.07427052412 + 26482.17080962440 * t).Cos();
		rtn += 0.00000000069 * (3.34387224268 + 11670.28403729680 * t).Cos();
		rtn += 0.00000000069 * (2.05018999200 + 29424.63423291600 * t).Cos();
		rtn += 0.00000000068 * (5.36539876845 +  1228.96211332220 * t).Cos();
		rtn += 0.00000000068 * (5.03013252197 +  9070.11887384880 * t).Cos();
		rtn += 0.00000000068 * (3.84252763135 +  6571.01853218020 * t).Cos();
		rtn += 0.00000000068 * (0.04775525953 +  2125.87740737920 * t).Cos();
		rtn += 0.00000000067 * (1.92945007459 + 21265.52312652020 * t).Cos();
		rtn += 0.00000000067 * (0.16600936321 + 22743.40937951640 * t).Cos();
		rtn += 0.00000000066 * (5.70059718737 + 33561.54466643220 * t).Cos();
		rtn += 0.00000000066 * (3.85497672006 + 19406.67828817460 * t).Cos();
		rtn += 0.00000000065 * (4.65423392949 +  2807.39834325620 * t).Cos();
		rtn += 0.00000000065 * (4.49078808776 +   632.78373931320 * t).Cos();
		rtn += 0.00000000065 * (3.37109873211 + 11610.91017538320 * t).Cos();
		rtn += 0.00000000064 * (4.61909647015 +  9886.77220006400 * t).Cos();
		rtn += 0.00000000064 * (4.56332268770 + 16703.07938715119 * t).Cos();
		rtn += 0.00000000064 * (2.53229538141 + 16703.04487984680 * t).Cos();
		rtn += 0.00000000063 * (0.18907106180 + 30065.51184029820 * t).Cos();
		rtn += 0.00000000062 * (4.81389895867 + 20199.09495963300 * t).Cos();
		rtn += 0.00000000062 * (2.81689634717 +  6944.30877677240 * t).Cos();
		rtn += 0.00000000061 * (3.65945073900 + 14421.83163698840 * t).Cos();
		rtn += 0.00000000060 * (5.83757395809 +  8646.06348025360 * t).Cos();
		rtn += 0.00000000060 * (3.61007443614 +  9468.26787725700 * t).Cos();
		rtn += 0.00000000060 * (2.64683840328 + 10018.24685144760 * t).Cos();
		rtn += 0.00000000060 * (2.55506470511 + 11780.49035851620 * t).Cos();
		rtn += 0.00000000059 * (5.00150762621 +  6414.61781167780 * t).Cos();
		rtn += 0.00000000059 * (3.08413561767 + 10025.42770875120 * t).Cos();
		rtn += 0.00000000058 * (5.64889513615 +  9945.57120882380 * t).Cos();
		rtn += 0.00000000057 * (6.10407356832 + 19800.94595622480 * t).Cos();
		rtn += 0.00000000057 * (4.89927831599 +  9602.35263622420 * t).Cos();
		rtn += 0.00000000057 * (4.12235760406 + 10028.95082710020 * t).Cos();
		rtn += 0.00000000057 * (3.28105791201 +   206.18554843720 * t).Cos();
		rtn += 0.00000000057 * (2.97448265957 + 21795.21409161479 * t).Cos();
		rtn += 0.00000000057 * (2.82240075154 + 10124.93005431800 * t).Cos();
		rtn += 0.00000000057 * (1.88614831237 + 18451.07854656599 * t).Cos();
		rtn += 0.00000000056 * (3.31988072467 +  6518.75821726740 * t).Cos();
		rtn += 0.00000000056 * (3.13789031275 +  8799.98871377800 * t).Cos();
		rtn += 0.00000000056 * (2.23565630779 + 20995.39296644940 * t).Cos();
		rtn += 0.00000000055 * (5.20976473824 +  3237.51965248120 * t).Cos();
		rtn += 0.00000000055 * (1.95164531764 +  9588.12554222260 * t).Cos();
		rtn += 0.00000000055 * (1.41700952855 + 15906.76412668260 * t).Cos();
		rtn += 0.00000000053 * (2.16328741039 +  6418.14093002680 * t).Cos();
		rtn += 0.00000000053 * (0.77878945764 + 16865.52876963120 * t).Cos();
		rtn += 0.00000000053 * (0.31937174553 + 12721.57209941700 * t).Cos();
		rtn += 0.00000000051 * (5.73824213507 +  6048.44111408640 * t).Cos();
		rtn += 0.00000000051 * (3.54335413699 + 20597.24396304120 * t).Cos();
		rtn += 0.00000000051 * (3.25271478667 +  7799.98064550240 * t).Cos();
		rtn += 0.00000000051 * (1.15475560534 + 10156.90236013480 * t).Cos();
		rtn += 0.00000000051 * (0.06312524105 + 20206.14119633100 * t).Cos();
		rtn += 0.00000000050 * (1.92342238827 + 11614.43329373220 * t).Cos();
		return rtn;
	}

	// MMars.B1(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 1. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 1. Ordnung.</returns>
	private static double B1(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.00350068845 * (5.36847836211 +  3340.61242669980 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00014116030 * (3.14159265359 +     0.00000000000 * t).Cos();
		rtn += 0.00009670755 * (5.47877786506 +  6681.22485339960 * t).Cos();
		rtn += 0.00001471918 * (3.20205766795 + 10021.83728009940 * t).Cos();
		rtn += 0.00000425864 * (3.40843812875 + 13362.44970679920 * t).Cos();
		rtn += 0.00000102039 * (0.77617286189 +  3337.08930835080 * t).Cos();
		rtn += 0.00000078848 * (3.71768293865 + 16703.06213349900 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000032708 * (3.45803723682 +  5621.84292321040 * t).Cos();
		rtn += 0.00000026171 * (2.48293558065 +  2281.23049651060 * t).Cos();
		rtn += 0.00000020712 * (1.44120802297 +  6151.53388830500 * t).Cos();
		rtn += 0.00000018294 * (6.03102943125 +   529.69096509460 * t).Cos();
		rtn += 0.00000016975 * (4.81115186866 +  3344.13554504880 * t).Cos();
		rtn += 0.00000015680 * (3.93075566599 +  8962.45534991020 * t).Cos();
		rtn += 0.00000015622 * (4.81318636318 +  3340.62968035200 * t).Cos();
		rtn += 0.00000015622 * (2.78241383265 +  3340.59517304760 * t).Cos();
		rtn += 0.00000014268 * (0.24640247719 +  2942.46342329160 * t).Cos();
		rtn += 0.00000013771 * (1.67983063909 +  3532.06069281140 * t).Cos();
		rtn += 0.00000013067 * (0.97324736181 +  6677.70173505060 * t).Cos();
		rtn += 0.00000012711 * (4.04546734935 + 20043.67456019880 * t).Cos();
		rtn += 0.00000012493 * (2.25620513522 +  5884.92684658320 * t).Cos();
		rtn += 0.00000009250 * (4.35071778619 +  3496.03282613400 * t).Cos();
		rtn += 0.00000008903 * (5.95437916504 +  2810.92146160520 * t).Cos();
		rtn += 0.00000008800 * (0.34079528233 +   398.14900340820 * t).Cos();
		rtn += 0.00000008637 * (1.75213704409 +  2544.31441988340 * t).Cos();
		rtn += 0.00000008102 * (0.84279830287 +  6283.07584999140 * t).Cos();
		rtn += 0.00000008085 * (4.29614034209 +  6684.74797174860 * t).Cos();
		rtn += 0.00000005864 * (3.69652093329 +  5486.77784317500 * t).Cos();
		rtn += 0.00000005811 * (3.55479498415 +  5092.15195811580 * t).Cos();
		rtn += 0.00000005618 * (0.03475872145 +  3185.19202726560 * t).Cos();
		rtn += 0.00000005148 * (0.85886443528 +  3340.54511639700 * t).Cos();
		rtn += 0.00000005145 * (0.45169791514 +  3340.67973700260 * t).Cos();
		rtn += 0.00000004898 * (4.12922007874 +  1059.38193018920 * t).Cos();
		rtn += 0.00000003471 * (5.07253485267 +  5088.62883976680 * t).Cos();
		rtn += 0.00000003194 * (2.86899092087 +  1751.53953141600 * t).Cos();
		rtn += 0.00000003171 * (1.24730004776 +  3738.76143010800 * t).Cos();
		rtn += 0.00000003102 * (3.11487063736 +  3339.63210563160 * t).Cos();
		rtn += 0.00000003013 * (1.00910437496 +  2914.01423582380 * t).Cos();
		rtn += 0.00000002792 * (4.27117916474 +  8432.76438481560 * t).Cos();
		rtn += 0.00000002577 * (2.78651098185 +  6254.62666252360 * t).Cos();
		rtn += 0.00000002431 * (0.14615904873 +  4690.47983635860 * t).Cos();
		rtn += 0.00000002304 * (1.38460565999 +  3870.30339179440 * t).Cos();
		rtn += 0.00000002248 * (4.46756441051 + 10025.36039844840 * t).Cos();
		rtn += 0.00000002233 * (2.91238180064 +  3894.18182954220 * t).Cos();
		rtn += 0.00000002014 * (5.48528849094 +  3127.31333126180 * t).Cos();
		rtn += 0.00000001996 * (1.51200589223 +  4292.33083295040 * t).Cos();
		rtn += 0.00000001922 * (4.37668623732 + 23384.28698689860 * t).Cos();
		rtn += 0.00000001860 * (5.15222219319 +   796.29800681640 * t).Cos();
		rtn += 0.00000001782 * (2.70229954651 +  4136.91043351620 * t).Cos();
		rtn += 0.00000001621 * (2.26742355334 +  3149.16416058820 * t).Cos();
		rtn += 0.00000001452 * (1.53948251192 +  9492.14631500480 * t).Cos();
		rtn += 0.00000001378 * (4.12087865376 +  3723.50895892300 * t).Cos();
		rtn += 0.00000001373 * (3.20232312108 +  2146.16541647520 * t).Cos();
		rtn += 0.00000001332 * (5.67966837010 +  1592.59601363280 * t).Cos();
		rtn += 0.00000001303 * (1.12409937702 +  4399.99435688900 * t).Cos();
		rtn += 0.00000001230 * (0.37904885593 +  6525.80445396540 * t).Cos();
		rtn += 0.00000001215 * (0.33914405698 +  6674.11130639880 * t).Cos();
		rtn += 0.00000001211 * (0.97241747335 +  6467.92575796160 * t).Cos();
		rtn += 0.00000001204 * (0.95200561837 + 10018.31416175040 * t).Cos();
		rtn += 0.00000001194 * (0.84501638145 +  1194.44701022460 * t).Cos();
		rtn += 0.00000001179 * (6.15475441355 +   213.29909543800 * t).Cos();
		rtn += 0.00000001173 * (1.26036608440 +  3341.59274776800 * t).Cos();
		rtn += 0.00000001168 * (3.52407129935 + 11773.37681151540 * t).Cos();
		rtn += 0.00000001107 * (1.44142157852 +  2787.04302385740 * t).Cos();
		rtn += 0.00000001043 * (3.98123209815 + 12303.06777661000 * t).Cos();
		rtn += 0.00000001032 * (4.26592917807 +  1990.74501704100 * t).Cos();
		rtn += 0.00000001029 * (1.21951732572 +  4535.05943692440 * t).Cos();
		rtn += 0.00000001013 * (5.90131661122 +  3097.88382272579 * t).Cos();
		rtn += 0.00000000989 * (2.37220445455 +  9225.53927328300 * t).Cos();
		rtn += 0.00000000954 * (4.90448639106 +  3583.34103067380 * t).Cos();
		rtn += 0.00000000946 * (3.14940196742 +  6489.77658728800 * t).Cos();
		rtn += 0.00000000939 * (2.99716248257 +  7477.52286021600 * t).Cos();
		rtn += 0.00000000913 * (2.86098924372 +  2388.89402044920 * t).Cos();
		rtn += 0.00000000866 * (4.92421595837 +  6681.24210705180 * t).Cos();
		rtn += 0.00000000866 * (2.89344915945 +  6681.20759974740 * t).Cos();
		rtn += 0.00000000797 * (4.53307543814 +  7079.37385680780 * t).Cos();
		rtn += 0.00000000782 * (1.56739177814 +  3333.49887969900 * t).Cos();
		rtn += 0.00000000738 * (3.78715624780 +  4562.46099302120 * t).Cos();
		rtn += 0.00000000670 * (3.23650405278 +  9595.23908922340 * t).Cos();
		rtn += 0.00000000659 * (0.33901474348 +  2957.71589447660 * t).Cos();
		rtn += 0.00000000641 * (4.46918721250 +  6836.64525283380 * t).Cos();
		rtn += 0.00000000611 * (3.97393774087 +  6041.32756708560 * t).Cos();
		rtn += 0.00000000558 * (2.92718433901 +  1589.07289528380 * t).Cos();
		rtn += 0.00000000558 * (2.09491968451 +  2288.34404351140 * t).Cos();
		rtn += 0.00000000534 * (4.88536251621 +  3361.38782219220 * t).Cos();
		rtn += 0.00000000528 * (6.06190721770 +  4933.20844033260 * t).Cos();
		rtn += 0.00000000520 * (6.19100285186 +  6438.49624942560 * t).Cos();
		rtn += 0.00000000513 * (0.96852780537 +  9623.68827669120 * t).Cos();
		rtn += 0.00000000512 * (1.53960708348 +  7740.60678358880 * t).Cos();
		rtn += 0.00000000508 * (4.07262127921 +     7.11354700080 * t).Cos();
		rtn += 0.00000000487 * (2.72879191049 +  3319.83703120740 * t).Cos();
		rtn += 0.00000000482 * (4.73460866232 + 13365.97282514820 * t).Cos();
		rtn += 0.00000000481 * (3.51023225206 +   155.42039943420 * t).Cos();
		rtn += 0.00000000445 * (3.42439886280 +  6680.24453233140 * t).Cos();
		rtn += 0.00000000441 * (1.82408206251 +  3325.35995551480 * t).Cos();
		rtn += 0.00000000430 * (0.62845892205 +  5614.72937620960 * t).Cos();
		rtn += 0.00000000426 * (5.47172830908 +  3205.54734666440 * t).Cos();
		rtn += 0.00000000417 * (4.48716253276 +  7903.07341972100 * t).Cos();
		rtn += 0.00000000409 * (4.53421956625 +  3360.96774609859 * t).Cos();
		rtn += 0.00000000395 * (4.89021898045 + 10419.98628350760 * t).Cos();
		rtn += 0.00000000380 * (1.91138845097 +  3553.91152213780 * t).Cos();
		rtn += 0.00000000358 * (4.21584518245 +   426.59819087600 * t).Cos();
		rtn += 0.00000000358 * (4.21258737082 +  1052.26838318840 * t).Cos();
		rtn += 0.00000000347 * (1.52200237477 + 10213.28554621100 * t).Cos();
		rtn += 0.00000000346 * (1.65247014273 +  6682.20517446780 * t).Cos();
		rtn += 0.00000000330 * (1.00078638665 +  8955.34180290940 * t).Cos();
		rtn += 0.00000000329 * (5.64440592793 + 12832.75874170460 * t).Cos();
		rtn += 0.00000000322 * (2.42607399606 +  2274.11694950980 * t).Cos();
		rtn += 0.00000000317 * (6.15274242841 +  3320.25710730100 * t).Cos();
		rtn += 0.00000000316 * (3.22064089430 +  1221.84856632140 * t).Cos();
		rtn += 0.00000000312 * (4.63751658715 +  5331.35744374080 * t).Cos();
		rtn += 0.00000000312 * (3.66073476074 +  3337.02199804800 * t).Cos();
		rtn += 0.00000000310 * (4.09100416919 +  3344.20285535160 * t).Cos();
		rtn += 0.00000000306 * (1.52567836482 +  7875.67186362420 * t).Cos();
		rtn += 0.00000000295 * (2.87635162282 +  7210.91581849420 * t).Cos();
		rtn += 0.00000000285 * (0.97118840317 +  6681.15754309680 * t).Cos();
		rtn += 0.00000000284 * (0.56373187712 +  6681.29216370240 * t).Cos();
		rtn += 0.00000000278 * (1.50842060340 +  4929.68532198360 * t).Cos();
		rtn += 0.00000000274 * (3.61160906396 +   191.44826611160 * t).Cos();
		rtn += 0.00000000269 * (4.45182417080 +  9381.93999378540 * t).Cos();
		rtn += 0.00000000269 * (1.78448639785 +  6127.65545055720 * t).Cos();
		rtn += 0.00000000268 * (3.57749600251 +  9830.38901398780 * t).Cos();
		rtn += 0.00000000256 * (3.67744143301 +  1066.49547719000 * t).Cos();
		rtn += 0.00000000249 * (3.31328995337 + 10818.13528691580 * t).Cos();
		rtn += 0.00000000248 * (3.93789974497 + 11243.68584642080 * t).Cos();
		rtn += 0.00000000246 * (0.16913226579 +  2700.71514038580 * t).Cos();
		rtn += 0.00000000245 * (4.71030710599 + 26724.89941359840 * t).Cos();
		rtn += 0.00000000242 * (2.57630671866 +  3355.86489788480 * t).Cos();
		rtn += 0.00000000241 * (1.89683861728 + 15643.68020330980 * t).Cos();
		rtn += 0.00000000240 * (4.87364672707 +  6144.42034130420 * t).Cos();
		rtn += 0.00000000239 * (1.35709001659 +  7064.12138562280 * t).Cos();
		rtn += 0.00000000237 * (3.19837233399 +  5729.50644714900 * t).Cos();
		rtn += 0.00000000228 * (0.71217112323 +  9866.41688066520 * t).Cos();
		rtn += 0.00000000226 * (2.43332503270 +  8429.24126646660 * t).Cos();
		rtn += 0.00000000219 * (0.03864812268 +   522.57741809380 * t).Cos();
		rtn += 0.00000000215 * (3.44260776071 +  8827.39026987480 * t).Cos();
		rtn += 0.00000000215 * (2.12744795327 +   553.56940284240 * t).Cos();
		rtn += 0.00000000206 * (5.23615052385 +  6923.95345737360 * t).Cos();
		rtn += 0.00000000202 * (2.63373646725 + 10021.85453375160 * t).Cos();
		rtn += 0.00000000202 * (0.60277862639 + 10021.82002644720 * t).Cos();
		rtn += 0.00000000199 * (4.22948972595 +  3312.16323923200 * t).Cos();
		rtn += 0.00000000199 * (3.26545613445 +   382.89653222320 * t).Cos();
		rtn += 0.00000000198 * (4.50685315424 +   242.72860397400 * t).Cos();
		rtn += 0.00000000188 * (0.67072289565 +  6298.32832117640 * t).Cos();
		rtn += 0.00000000186 * (2.44723831367 +  3503.07906283200 * t).Cos();
		rtn += 0.00000000177 * (3.92599588022 +  8031.09226305840 * t).Cos();
		rtn += 0.00000000176 * (2.37291314099 +  2118.76386037840 * t).Cos();
		rtn += 0.00000000163 * (5.83356697025 +   639.89728631400 * t).Cos();
		rtn += 0.00000000162 * (3.94498519498 +  2921.12778282460 * t).Cos();
		rtn += 0.00000000160 * (2.90951395323 +  6872.67311951120 * t).Cos();
		rtn += 0.00000000155 * (1.57189307640 +  3767.21061757580 * t).Cos();
		rtn += 0.00000000155 * (1.24529852403 +  3364.49086444760 * t).Cos();
		rtn += 0.00000000149 * (0.49665393273 +  8969.56889691100 * t).Cos();
		rtn += 0.00000000142 * (3.85764234922 +  6894.52394883760 * t).Cos();
		rtn += 0.00000000139 * (5.75493557040 +  7632.94325965020 * t).Cos();
		rtn += 0.00000000133 * (4.20989922795 + 11371.70468975820 * t).Cos();
		rtn += 0.00000000132 * (4.97828413367 +  1748.01641306700 * t).Cos();
		rtn += 0.00000000131 * (0.08971075365 +  8273.82086703240 * t).Cos();
		rtn += 0.00000000130 * (1.33114943655 +  3347.72597370060 * t).Cos();
		rtn += 0.00000000130 * (0.66881298338 + 10014.72373309860 * t).Cos();
		rtn += 0.00000000129 * (2.02607662846 +  3346.13535100720 * t).Cos();
		rtn += 0.00000000128 * (2.80753554051 + 14584.29827312060 * t).Cos();
		rtn += 0.00000000127 * (1.76223414864 + 11081.21921028860 * t).Cos();
		rtn += 0.00000000127 * (0.26234206855 + 13358.92658845020 * t).Cos();
		rtn += 0.00000000124 * (4.92495255567 + 12964.30070339100 * t).Cos();
		rtn += 0.00000000121 * (4.22204758443 +  6158.64743530580 * t).Cos();
		rtn += 0.00000000117 * (5.66812806862 +   536.80451209540 * t).Cos();
		rtn += 0.00000000114 * (2.12636383988 +  6688.33840040040 * t).Cos();
		rtn += 0.00000000112 * (3.14240135508 +  3316.73398895200 * t).Cos();
		rtn += 0.00000000110 * (5.78893316282 + 16173.37116840440 * t).Cos();
		rtn += 0.00000000108 * (0.94652521237 +  9808.53818466140 * t).Cos();
		rtn += 0.00000000106 * (1.21268139587 +  7234.79425624200 * t).Cos();
		rtn += 0.00000000105 * (3.27202438053 + 15113.98923821520 * t).Cos();
		rtn += 0.00000000100 * (2.56456804207 +  3178.14579056760 * t).Cos();
		rtn += 0.00000000099 * (5.62543167000 + 10973.55568635000 * t).Cos();
		rtn += 0.00000000099 * (3.28955694324 + 17654.78053974960 * t).Cos();
		rtn += 0.00000000096 * (5.13010621713 +  3304.58456002240 * t).Cos();
		rtn += 0.00000000095 * (0.64723185059 +  2487.41604494780 * t).Cos();
		rtn += 0.00000000095 * (0.32948273562 +  3863.18984479360 * t).Cos();
		rtn += 0.00000000095 * (0.29428946155 +  5628.95647021120 * t).Cos();
		rtn += 0.00000000092 * (1.40883592065 +  3336.73109134180 * t).Cos();
		rtn += 0.00000000091 * (1.48623539837 +  8270.29774868340 * t).Cos();
		rtn += 0.00000000088 * (2.78893554858 + 11769.85369316640 * t).Cos();
		rtn += 0.00000000087 * (4.14322802003 +  3603.69635007260 * t).Cos();
		rtn += 0.00000000087 * (3.50260474148 +  3077.52850332700 * t).Cos();
		rtn += 0.00000000086 * (3.34935714534 +  1581.95934828300 * t).Cos();
		rtn += 0.00000000086 * (1.82073461894 + 10404.73381232260 * t).Cos();
		rtn += 0.00000000085 * (3.33671991814 +  1758.65307841680 * t).Cos();
		rtn += 0.00000000084 * (2.16662156833 + 12566.15169998280 * t).Cos();
		rtn += 0.00000000083 * (2.04400907684 + 18984.29263000960 * t).Cos();
		rtn += 0.00000000083 * (0.80327899268 +  5085.03841111500 * t).Cos();
		rtn += 0.00000000082 * (4.87880877413 +  5828.02847164760 * t).Cos();
		rtn += 0.00000000079 * (4.25171159471 +  7373.38245462640 * t).Cos();
		rtn += 0.00000000079 * (0.61833410504 +   951.71840625060 * t).Cos();
		rtn += 0.00000000078 * (1.41762772678 +     3.52311834900 * t).Cos();
		rtn += 0.00000000078 * (0.89238228021 +  2699.73481931760 * t).Cos();
		rtn += 0.00000000076 * (5.23354729169 + 13760.59871020740 * t).Cos();
		rtn += 0.00000000075 * (4.91191036053 + 10021.76996979660 * t).Cos();
		rtn += 0.00000000071 * (1.71691035008 + 10575.40668294180 * t).Cos();
		rtn += 0.00000000070 * (1.93458925881 +  3475.67750673520 * t).Cos();
		rtn += 0.00000000069 * (3.50477916910 + 10713.99488132620 * t).Cos();
		rtn += 0.00000000067 * (3.68731475523 +  4032.77002792660 * t).Cos();
		rtn += 0.00000000066 * (5.01996258363 + 16706.58525184800 * t).Cos();
		rtn += 0.00000000064 * (3.75812808116 +  1596.18644228460 * t).Cos();
		rtn += 0.00000000064 * (2.43149744819 +  2648.45482547300 * t).Cos();
		rtn += 0.00000000062 * (3.16420520010 + 13517.87010623340 * t).Cos();
		rtn += 0.00000000062 * (0.25250107112 +  3980.50971301380 * t).Cos();
		rtn += 0.00000000061 * (5.33515994167 +   853.19638175200 * t).Cos();
		rtn += 0.00000000061 * (1.37421861116 +   419.48464387520 * t).Cos();
		rtn += 0.00000000059 * (4.13409540555 +  4407.10790388980 * t).Cos();
		rtn += 0.00000000059 * (2.83458587563 + 13362.46696045140 * t).Cos();
		rtn += 0.00000000059 * (0.80382380790 + 13362.43245314700 * t).Cos();
		rtn += 0.00000000059 * (0.07234691744 +  6531.66165626500 * t).Cos();
		rtn += 0.00000000057 * (5.57913927474 +  3376.64029337720 * t).Cos();
		rtn += 0.00000000055 * (4.01321481700 + 10177.25767953360 * t).Cos();
		rtn += 0.00000000055 * (1.36081433917 + 21393.54196985760 * t).Cos();
		rtn += 0.00000000055 * (1.11154560464 +   433.71173787680 * t).Cos();
		rtn += 0.00000000055 * (0.37478855406 +   149.56319713460 * t).Cos();
		rtn += 0.00000000053 * (2.93285711320 +  3981.49003408200 * t).Cos();
		rtn += 0.00000000053 * (0.55329112916 + 14314.16811304980 * t).Cos();
		rtn += 0.00000000050 * (2.01769015785 + 10022.81760116760 * t).Cos();
		return rtn;
	}

	// MMars.B2(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 2. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 2. Ordnung.</returns>
	private static double B2(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00016726690 * (0.60221392419 +  3340.61242669980 * t).Cos();
		rtn += 0.00004986799 * (3.14159265359 +     0.00000000000 * t).Cos();
		rtn += 0.00000302141 * (5.55871276021 +  6681.22485339960 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000025767 * (1.89662673499 + 13362.44970679920 * t).Cos();
		rtn += 0.00000021452 * (0.91749968618 + 10021.83728009940 * t).Cos();
		rtn += 0.00000011820 * (2.24240738700 +  3337.08930835080 * t).Cos();
		rtn += 0.00000007985 * (2.24892866611 + 16703.06213349900 * t).Cos();
		rtn += 0.00000002960 * (5.89425825808 +  3496.03282613400 * t).Cos();
		rtn += 0.00000002445 * (5.18770525274 +  5621.84292321040 * t).Cos();
		rtn += 0.00000001779 * (2.58759968520 + 20043.67456019880 * t).Cos();
		rtn += 0.00000001501 * (3.18533003542 +  3532.06069281140 * t).Cos();
		rtn += 0.00000001428 * (1.25238140580 +  2281.23049651060 * t).Cos();
		rtn += 0.00000001259 * (4.80695172904 +  3185.19202726560 * t).Cos();
		rtn += 0.00000001109 * (3.80982317372 +  5884.92684658320 * t).Cos();
		rtn += 0.00000001100 * (1.82962075794 +  2942.46342329160 * t).Cos();
		rtn += 0.00000001029 * (2.35029907056 +  6677.70173505060 * t).Cos();
		rtn += 0.00000000928 * (0.29719160927 +  3344.13554504880 * t).Cos();
		rtn += 0.00000000883 * (5.18681316017 +  5486.77784317500 * t).Cos();
		rtn += 0.00000000860 * (3.11698318930 +  6151.53388830500 * t).Cos();
		rtn += 0.00000000853 * (1.33003321402 +   529.69096509460 * t).Cos();
		rtn += 0.00000000815 * (3.40910567373 +  2544.31441988340 * t).Cos();
		rtn += 0.00000000745 * (4.30248377111 +  3340.59517304760 * t).Cos();
		rtn += 0.00000000745 * (0.05006463495 +  3340.62968035200 * t).Cos();
		rtn += 0.00000000702 * (5.49076132554 +  8962.45534991020 * t).Cos();
		rtn += 0.00000000681 * (5.40951261308 +  2810.92146160520 * t).Cos();
		rtn += 0.00000000644 * (0.31400306761 +  5088.62883976680 * t).Cos();
		rtn += 0.00000000586 * (4.48071459693 +  3894.18182954220 * t).Cos();
		rtn += 0.00000000542 * (4.68895461946 +  3339.63210563160 * t).Cos();
		rtn += 0.00000000497 * (4.65665197749 +  5092.15195811580 * t).Cos();
		rtn += 0.00000000460 * (1.06670343610 +  3097.88382272579 * t).Cos();
		rtn += 0.00000000429 * (1.70668733378 +  4690.47983635860 * t).Cos();
		rtn += 0.00000000423 * (3.08034568777 +  4292.33083295040 * t).Cos();
		rtn += 0.00000000381 * (2.24933115190 +  6283.07584999140 * t).Cos();
		rtn += 0.00000000339 * (2.92195933142 + 23384.28698689860 * t).Cos();
		rtn += 0.00000000323 * (5.15230144390 +  6525.80445396540 * t).Cos();
		rtn += 0.00000000310 * (5.63324402105 +  3723.50895892300 * t).Cos();
		rtn += 0.00000000298 * (2.58990636818 +  6684.74797174860 * t).Cos();
		rtn += 0.00000000287 * (1.98619629868 +   398.14900340820 * t).Cos();
		rtn += 0.00000000247 * (2.36923535528 +  3340.54511639700 * t).Cos();
		rtn += 0.00000000247 * (1.96071951597 +  3340.67973700260 * t).Cos();
		rtn += 0.00000000240 * (3.53331653789 +  3583.34103067380 * t).Cos();
		rtn += 0.00000000238 * (4.69268478666 +  6254.62666252360 * t).Cos();
		rtn += 0.00000000223 * (4.75562842441 +  2146.16541647520 * t).Cos();
		rtn += 0.00000000202 * (4.25439775032 +  3333.49887969900 * t).Cos();
		rtn += 0.00000000198 * (6.21548965568 +  2787.04302385740 * t).Cos();
		rtn += 0.00000000185 * (2.99350590687 + 10025.36039844840 * t).Cos();
		rtn += 0.00000000177 * (1.41002572971 +  6438.49624942560 * t).Cos();
		rtn += 0.00000000158 * (1.89216973387 +  6674.11130639880 * t).Cos();
		rtn += 0.00000000153 * (5.93528616595 +  6836.64525283380 * t).Cos();
		rtn += 0.00000000138 * (1.23172102079 +  3127.31333126180 * t).Cos();
		rtn += 0.00000000136 * (1.06039656714 +  2388.89402044920 * t).Cos();
		rtn += 0.00000000116 * (5.97739483530 +  2914.01423582380 * t).Cos();
		rtn += 0.00000000108 * (6.13917250674 +  1748.01641306700 * t).Cos();
		rtn += 0.00000000106 * (5.35414400998 +  3738.76143010800 * t).Cos();
		rtn += 0.00000000102 * (3.67040445208 +  1059.38193018920 * t).Cos();
		rtn += 0.00000000099 * (1.50221319099 +  1751.53953141600 * t).Cos();
		rtn += 0.00000000093 * (5.04434801864 +   155.42039943420 * t).Cos();
		rtn += 0.00000000093 * (2.70817394910 +  8955.34180290940 * t).Cos();
		rtn += 0.00000000092 * (2.68470906437 +  1990.74501704100 * t).Cos();
		rtn += 0.00000000080 * (5.48556941416 +  8432.76438481560 * t).Cos();
		rtn += 0.00000000078 * (0.79220883728 +  2288.34404351140 * t).Cos();
		rtn += 0.00000000077 * (4.01966292109 +  1592.59601363280 * t).Cos();
		rtn += 0.00000000076 * (5.67354102576 +  6041.32756708560 * t).Cos();
		rtn += 0.00000000076 * (4.49660101731 +  4562.46099302120 * t).Cos();
		rtn += 0.00000000074 * (5.84795427965 +  3341.59274776800 * t).Cos();
		rtn += 0.00000000066 * (5.08073805943 +  2957.71589447660 * t).Cos();
		rtn += 0.00000000065 * (2.11705931744 + 10018.31416175040 * t).Cos();
		rtn += 0.00000000061 * (4.51116100631 +  4933.20844033260 * t).Cos();
		rtn += 0.00000000059 * (3.79695096075 +  6923.95345737360 * t).Cos();
		rtn += 0.00000000059 * (0.27765984344 +  6127.65545055720 * t).Cos();
		rtn += 0.00000000057 * (4.73711357046 +  2274.11694950980 * t).Cos();
		rtn += 0.00000000056 * (5.23212313891 +  9866.41688066520 * t).Cos();
		rtn += 0.00000000054 * (1.50278239577 +  6489.77658728800 * t).Cos();
		rtn += 0.00000000052 * (5.84885902302 +  4535.05943692440 * t).Cos();
		rtn += 0.00000000051 * (2.48654805044 +  6467.92575796160 * t).Cos();
		rtn += 0.00000000051 * (1.45495904398 +  7477.52286021600 * t).Cos();
		return rtn;
	}

	// MMars.B3(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 3. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 3. Ordnung.</returns>
	private static double B3(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00000606506 * (1.98050633529 +  3340.61242669980 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000042611 * (0.00000000000 +     0.00000000000 * t).Cos();
		rtn += 0.00000013652 * (1.79588228800 +  6681.22485339960 * t).Cos();
		rtn += 0.00000002730 * (3.45377082121 + 10021.83728009940 * t).Cos();
		rtn += 0.00000000929 * (3.75226159072 +  3337.08930835080 * t).Cos();
		rtn += 0.00000000617 * (1.14471772765 +  3496.03282613400 * t).Cos();
		rtn += 0.00000000607 * (0.10618486408 + 13362.44970679920 * t).Cos();
		rtn += 0.00000000479 * (0.70504966293 + 16703.06213349900 * t).Cos();
		rtn += 0.00000000185 * (3.28778562029 +  3185.19202726560 * t).Cos();
		rtn += 0.00000000169 * (0.29980532608 +  5621.84292321040 * t).Cos();
		rtn += 0.00000000158 * (1.09025317222 + 20043.67456019880 * t).Cos();
		rtn += 0.00000000126 * (4.74517022983 +  3532.06069281140 * t).Cos();
		rtn += 0.00000000123 * (2.55664973413 +  3097.88382272579 * t).Cos();
		rtn += 0.00000000106 * (3.41315845439 +  2942.46342329160 * t).Cos();
		rtn += 0.00000000099 * (4.92257049901 +  2544.31441988340 * t).Cos();
		rtn += 0.00000000093 * (6.03607685759 +  3894.18182954220 * t).Cos();
		rtn += 0.00000000062 * (6.25738949900 +  3339.63210563160 * t).Cos();
		rtn += 0.00000000058 * (4.64867983361 +  4292.33083295040 * t).Cos();
		rtn += 0.00000000058 * (3.65295480755 +  6525.80445396540 * t).Cos();
		rtn += 0.00000000052 * (3.25535694335 +  4690.47983635860 * t).Cos();
		rtn += 0.00000000051 * (5.24063514394 +  5884.92684658320 * t).Cos();
		rtn += 0.00000000050 * (3.75358626972 +  6677.70173505060 * t).Cos();
		rtn += 0.00000000050 * (1.89408668049 +  5088.62883976680 * t).Cos();
		return rtn;
	}

	// MMars.B4(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 4. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 4. Ordnung.</returns>
	private static double B4(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000013369 * (0.00000000000 +     0.00000000000 * t).Cos();
		rtn += 0.00000011334 * (3.45724352586 +  3340.61242669980 * t).Cos();
		rtn += 0.00000000744 * (0.50445805257 +  6681.22485339960 * t).Cos();
		rtn += 0.00000000148 * (1.05056602649 + 10021.83728009940 * t).Cos();
		rtn += 0.00000000102 * (2.66185835593 +  3496.03282613400 * t).Cos();
		rtn += 0.00000000053 * (5.27888218929 +  3337.08930835080 * t).Cos();
		return rtn;
	}

	// MMars.B5(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 5. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 5. Ordnung.</returns>
	private static double B5(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000000457 * (4.86794125358 + 3340.61242669980 * t).Cos();
		rtn += 0.00000000053 * (5.30547050586 + 6681.22485339960 * t).Cos();
		return rtn;
	}

	// MMars.Latitude(EPrecision)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.</returns>
	public static double Latitude(EPrecision value)
	{
		// Lokale Felder einrichten
		double jd = DateTime.Now.ToJdn();
		return MMars.Latitude(value, jd);
	}

	// MMars.Latitude(EPrecision, double)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="jd">Julianische Tageszahl.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.</returns>
	public static double Latitude(EPrecision value, double jd)
	{
		// Lokale Felder einrichten
		double t  = (jd - MCalendar.Jdn20000101) / 365250.0; // Jahrhundertbruchteil
		double b0 = MMars.B0(value, t);
		double b1 = MMars.B1(value, t);
		double b2 = MMars.B2(value, t);
		double b3 = MMars.B3(value, t);
		double b4 = MMars.B4(value, t);
		double b5 = MMars.B5(value, t);

		// Breite berechnen
		return MMath.Polynome(t, b0, b1, b2, b3, b4, b5);
	}
}
