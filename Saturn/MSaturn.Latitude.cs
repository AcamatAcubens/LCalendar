using Acamat.LCore;
using Acamat.LMath;
using System;

namespace Acamat.LCalendar;

/// <summary>
/// Bündelt Berechnungen zum Saturn.
/// </summary>
public static partial class MSaturn
{
	// ------------------- //
	// Felder und Methoden //
	// ------------------- //
	// MSaturn.B0(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 0. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 0. Ordnung.</returns>
	private static double B0(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.04330678040 * (3.60284428399 +   213.29909543800 * t).Cos();
		rtn += 0.00240348303 * (2.85238489390 +   426.59819087600 * t).Cos();
		rtn += 0.00084745939 * (0.00000000000 +     0.00000000000 * t).Cos();
		if(value == EPrecision.Low)
			return rtn;
		rtn += 0.00034116063 * (0.57297307844 +   206.18554843720 * t).Cos();
		rtn += 0.00030863357 * (3.48441504465 +   220.41264243880 * t).Cos();
		rtn += 0.00014734070 * (2.11846597870 +   639.89728631400 * t).Cos();
		rtn += 0.00009916668 * (5.79003189405 +   419.48464387520 * t).Cos();
		rtn += 0.00006993564 * (4.73604689179 +     7.11354700080 * t).Cos();
		rtn += 0.00004807587 * (5.43305315602 +   316.39186965660 * t).Cos();
		rtn += 0.00004788392 * (4.96512927420 +   110.20632121940 * t).Cos();
		rtn += 0.00003432125 * (2.73255752123 +   433.71173787680 * t).Cos();
		rtn += 0.00001506129 * (6.01304536144 +   103.09277421860 * t).Cos();
		rtn += 0.00001060298 * (5.63099292414 +   529.69096509460 * t).Cos();
		rtn += 0.00000969071 * (5.20434966103 +   632.78373931320 * t).Cos();
		rtn += 0.00000942050 * (1.39646678088 +   853.19638175200 * t).Cos();
		rtn += 0.00000707645 * (3.80302329547 +   323.50541665740 * t).Cos();
		rtn += 0.00000552313 * (5.13149109045 +   202.25339517410 * t).Cos();
		rtn += 0.00000399675 * (3.35891413961 +   227.52618943960 * t).Cos();
		rtn += 0.00000319380 * (3.62571550980 +   209.36694217490 * t).Cos();
		rtn += 0.00000316063 * (1.99716764199 +   647.01083331480 * t).Cos();
		rtn += 0.00000314225 * (0.46510272410 +   217.23124870110 * t).Cos();
		rtn += 0.00000284494 * (4.88648481625 +   224.34479570190 * t).Cos();
		rtn += 0.00000236442 * (2.13887472281 +    11.04570026390 * t).Cos();
		rtn += 0.00000215354 * (5.94982610103 +   846.08283475120 * t).Cos();
		rtn += 0.00000208522 * (2.12003893769 +   415.55249061210 * t).Cos();
		rtn += 0.00000207213 * (0.73021462851 +   199.07200143640 * t).Cos();
		rtn += 0.00000178958 * (2.95361514672 +    63.73589830340 * t).Cos();
		rtn += 0.00000140585 * (0.64417620299 +   490.33408917940 * t).Cos();
		rtn += 0.00000139240 * (4.59535168021 +    14.22709400160 * t).Cos();
		rtn += 0.00000139140 * (1.99821990940 +   735.87651353180 * t).Cos();
		rtn += 0.00000134884 * (5.24500819605 +   742.99006053260 * t).Cos();
		rtn += 0.00000121669 * (3.11537140876 +   522.57741809380 * t).Cos();
		rtn += 0.00000115524 * (3.10891547171 +   216.48048917570 * t).Cos();
		rtn += 0.00000114218 * (0.96261442133 +   210.11770170030 * t).Cos();
		rtn += 0.00000096376 * (4.48164339766 +   117.31986822020 * t).Cos();
		rtn += 0.00000080593 * (1.31692750150 +   277.03499374140 * t).Cos();
		rtn += 0.00000074302 * (2.89376539620 +   149.56319713460 * t).Cos();
		rtn += 0.00000072952 * (3.05988482370 +   536.80451209540 * t).Cos();
		rtn += 0.00000069261 * (4.92378633635 +   309.27832265580 * t).Cos();
		rtn += 0.00000068040 * (2.18002263974 +   351.81659230870 * t).Cos();
		rtn += 0.00000061734 * (0.67728106562 +  1066.49547719000 * t).Cos();
		rtn += 0.00000056598 * (2.60963391288 +   440.82528487760 * t).Cos();
		if(value == EPrecision.Medium)
			return rtn;
		rtn += 0.00000048864 * (5.78725874107 +    95.97922721780 * t).Cos();
		rtn += 0.00000048243 * (2.18211837430 +    74.78159856730 * t).Cos();
		rtn += 0.00000038304 * (5.29151303843 +  1059.38193018920 * t).Cos();
		rtn += 0.00000036833 * (6.27769966148 +  1162.47470440780 * t).Cos();
		rtn += 0.00000036323 * (1.63348365121 +   628.85158605010 * t).Cos();
		rtn += 0.00000035055 * (1.71279210041 +  1052.26838318840 * t).Cos();
		rtn += 0.00000034313 * (5.97994514798 +   412.37109687440 * t).Cos();
		rtn += 0.00000034270 * (2.45740470599 +   422.66603761290 * t).Cos();
		rtn += 0.00000033787 * (1.14073392951 +   949.17560896980 * t).Cos();
		rtn += 0.00000031633 * (4.14722153007 +   437.64389113990 * t).Cos();
		rtn += 0.00000026980 * (1.27154816810 +   860.30992875280 * t).Cos();
		rtn += 0.00000023631 * (3.07427204313 +   215.74677599280 * t).Cos();
		rtn += 0.00000023600 * (4.11386961467 +     3.93215326310 * t).Cos();
		rtn += 0.00000023516 * (2.74936525342 +   838.96928775040 * t).Cos();
		rtn += 0.00000023460 * (0.98962849901 +   210.85141488320 * t).Cos();
		rtn += 0.00000020935 * (0.14356167048 +   430.53034413910 * t).Cos();
		rtn += 0.00000020813 * (3.51084686918 +   330.61896365820 * t).Cos();
		rtn += 0.00000019509 * (2.81857577372 +   127.47179660680 * t).Cos();
		rtn += 0.00000019100 * (2.97699096081 +   137.03302416240 * t).Cos();
		rtn += 0.00000019027 * (6.27326062836 +   423.41679713830 * t).Cos();
		rtn += 0.00000017824 * (2.28524493886 +   388.46515523820 * t).Cos();
		rtn += 0.00000017635 * (6.19715516746 +   703.63318461740 * t).Cos();
		rtn += 0.00000017103 * (3.89784279922 +   214.26230328450 * t).Cos();
		rtn += 0.00000017065 * (0.16611115812 +   212.33588759150 * t).Cos();
		rtn += 0.00000016551 * (1.66649120724 +    38.13303563780 * t).Cos();
		rtn += 0.00000015517 * (4.54798410406 +   956.28915597060 * t).Cos();
		rtn += 0.00000014173 * (3.57477564831 +   213.25091132820 * t).Cos();
		rtn += 0.00000014169 * (0.48937283445 +   213.34727954780 * t).Cos();
		rtn += 0.00000013344 * (2.37136126257 +   429.77958461370 * t).Cos();
		rtn += 0.00000012565 * (1.03178071173 +   563.63121503840 * t).Cos();
		rtn += 0.00000012058 * (0.44149242700 +   222.86032299360 * t).Cos();
		rtn += 0.00000011374 * (1.45300927024 +  1368.66025284500 * t).Cos();
		rtn += 0.00000010600 * (3.84358958373 +   138.51749687070 * t).Cos();
		rtn += 0.00000010585 * (6.17633425930 +   200.76892246580 * t).Cos();
		rtn += 0.00000010367 * (1.85278552549 +   350.33211960040 * t).Cos();
		rtn += 0.00000010263 * (2.17423692422 +    76.26607127560 * t).Cos();
		rtn += 0.00000010072 * (1.33197220789 +   565.11568774670 * t).Cos();
		rtn += 0.00000008706 * (2.58144528603 +  1155.36115740700 * t).Cos();
		rtn += 0.00000008518 * (4.51649648578 +     3.18139373770 * t).Cos();
		rtn += 0.00000008470 * (1.97890349826 +   625.67019231240 * t).Cos();
		rtn += 0.00000008137 * (3.98500592467 +    85.82729883120 * t).Cos();
		rtn += 0.00000008079 * (0.42574715104 +   554.06998748280 * t).Cos();
		rtn += 0.00000007985 * (2.20794292064 +   362.86229257260 * t).Cos();
		rtn += 0.00000007753 * (6.23664549070 +  1478.86657406440 * t).Cos();
		rtn += 0.00000007567 * (2.68446523795 +   191.20769491020 * t).Cos();
		rtn += 0.00000007444 * (5.41859596459 +   213.82036029980 * t).Cos();
		rtn += 0.00000007439 * (4.92597321442 +   212.77783057620 * t).Cos();
		rtn += 0.00000007421 * (4.19354269508 +     9.56122755560 * t).Cos();
		rtn += 0.00000007409 * (2.03506679104 +   288.08069400530 * t).Cos();
		rtn += 0.00000006610 * (6.14944028835 +   417.03696332040 * t).Cos();
		rtn += 0.00000006319 * (1.17328438271 +  1265.56747862640 * t).Cos();
		rtn += 0.00000006318 * (1.87388481013 +   654.12438031560 * t).Cos();
		rtn += 0.00000006014 * (5.58952234348 +   425.11371816770 * t).Cos();
		rtn += 0.00000005851 * (4.81776629912 +     1.48447270830 * t).Cos();
		rtn += 0.00000005841 * (2.35829915285 +   750.10360753340 * t).Cos();
		rtn += 0.00000005808 * (5.01602242794 +   479.28838891550 * t).Cos();
		rtn += 0.00000005661 * (1.46982713550 +   265.98929347750 * t).Cos();
		rtn += 0.00000005621 * (0.81869581274 +    52.69019803950 * t).Cos();
		rtn += 0.00000005466 * (3.21737829505 +   234.63973644040 * t).Cos();
		rtn += 0.00000005398 * (5.67212179194 +  1375.77379984580 * t).Cos();
		rtn += 0.00000005341 * (3.45755372717 +   203.73786788240 * t).Cos();
		rtn += 0.00000005200 * (3.32827437636 +   515.46387109300 * t).Cos();
		rtn += 0.00000005033 * (0.10756875163 +   252.65597135320 * t).Cos();
		rtn += 0.00000004960 * (1.04628615559 +    12.53017297220 * t).Cos();
		rtn += 0.00000004927 * (3.81806549732 +   225.82926841020 * t).Cos();
		rtn += 0.00000004920 * (3.85622235967 +   173.94221952280 * t).Cos();
		rtn += 0.00000004883 * (1.94823282939 +   195.13984817330 * t).Cos();
		rtn += 0.00000004416 * (5.45506938037 +   408.43894361130 * t).Cos();
		rtn += 0.00000004345 * (3.18562241830 +   414.06801790380 * t).Cos();
		rtn += 0.00000004169 * (1.21145214135 +  1685.05212250160 * t).Cos();
		rtn += 0.00000004066 * (6.24213578122 +  1279.79457262800 * t).Cos();
		rtn += 0.00000004053 * (3.72105017218 +   942.06206196900 * t).Cos();
		rtn += 0.00000004017 * (0.99840226682 +   842.15068148810 * t).Cos();
		rtn += 0.00000003972 * (6.13850317719 +   217.49188113200 * t).Cos();
		rtn += 0.00000003971 * (4.37874143597 +   216.21985674480 * t).Cos();
		rtn += 0.00000003949 * (4.19728912450 +   209.10630974400 * t).Cos();
		rtn += 0.00000003916 * (5.96105725915 +   210.37833413120 * t).Cos();
		rtn += 0.00000003899 * (4.58983662507 +  1272.68102562720 * t).Cos();
		rtn += 0.00000003764 * (3.30663337976 +   212.54833591260 * t).Cos();
		rtn += 0.00000003756 * (0.74987556308 +   214.04985496340 * t).Cos();
		rtn += 0.00000003732 * (1.61040235688 +   635.96513305090 * t).Cos();
		rtn += 0.00000003709 * (2.97082943086 +   223.59403617650 * t).Cos();
		rtn += 0.00000003576 * (3.83436862558 +   483.22054217860 * t).Cos();
		rtn += 0.00000003565 * (4.75262007127 +   207.88246946660 * t).Cos();
		rtn += 0.00000003542 * (2.30814954338 +  1471.75302706360 * t).Cos();
		rtn += 0.00000003541 * (5.62281936827 +   218.71572140940 * t).Cos();
		rtn += 0.00000003209 * (0.42853440759 +   218.92816973050 * t).Cos();
		rtn += 0.00000003162 * (3.64550741000 +   207.67002114550 * t).Cos();
		rtn += 0.00000003149 * (2.27647454229 +   728.76296653100 * t).Cos();
		rtn += 0.00000002970 * (5.75162134301 +   160.60889739850 * t).Cos();
		rtn += 0.00000002965 * (3.40117024932 +   650.94298657790 * t).Cos();
		rtn += 0.00000002869 * (4.31959346745 +   767.36908292080 * t).Cos();
		rtn += 0.00000002853 * (4.81077453523 +   231.45834270270 * t).Cos();
		rtn += 0.00000002826 * (0.86682282341 +   217.96496188400 * t).Cos();
		rtn += 0.00000002787 * (4.03144791896 +    62.25142559510 * t).Cos();
		rtn += 0.00000002724 * (0.47941267764 +   497.44763618020 * t).Cos();
		rtn += 0.00000002652 * (0.30602610654 +   424.15051032120 * t).Cos();
		rtn += 0.00000002605 * (5.04152791794 +    65.22037101170 * t).Cos();
		rtn += 0.00000002543 * (2.76499056123 +   543.91805909620 * t).Cos();
		rtn += 0.00000002509 * (2.94704589100 +    70.84944530420 * t).Cos();
		rtn += 0.00000002485 * (5.78396049817 +    99.16062095550 * t).Cos();
		rtn += 0.00000002452 * (3.19804814047 +   208.63322899200 * t).Cos();
		rtn += 0.00000002384 * (4.44583493310 +    21.34064100240 * t).Cos();
		rtn += 0.00000002363 * (3.35786310868 +   124.43341522100 * t).Cos();
		rtn += 0.00000002308 * (0.63861650866 +   251.43213107580 * t).Cos();
		rtn += 0.00000002283 * (4.22375355881 +    22.09140052780 * t).Cos();
		rtn += 0.00000002283 * (1.55589787463 +   601.76425067620 * t).Cos();
		rtn += 0.00000002245 * (1.69945964547 +   488.84961647110 * t).Cos();
		rtn += 0.00000002232 * (0.56929937568 +  1073.60902419080 * t).Cos();
		rtn += 0.00000002217 * (4.61433094630 +   302.16477565500 * t).Cos();
		rtn += 0.00000002162 * (6.24029269257 +  1795.25844372100 * t).Cos();
		rtn += 0.00000002096 * (5.77425542767 +    88.86568021700 * t).Cos();
		rtn += 0.00000002075 * (3.55622165076 +  1169.58825140860 * t).Cos();
		rtn += 0.00000002069 * (2.75786819366 +   491.81856188770 * t).Cos();
		rtn += 0.00000002033 * (4.87029603776 +   327.43756992050 * t).Cos();
		rtn += 0.00000001971 * (2.59654430358 +   429.04587143080 * t).Cos();
		rtn += 0.00000001950 * (5.56004000293 +    18.15924726470 * t).Cos();
		rtn += 0.00000001948 * (5.70817363392 +   425.63498302950 * t).Cos();
		rtn += 0.00000001939 * (5.48134669380 +   636.71589257630 * t).Cos();
		rtn += 0.00000001888 * (5.45600788064 +   142.44965013380 * t).Cos();
		rtn += 0.00000001854 * (1.41350087782 +  1581.95934828300 * t).Cos();
		rtn += 0.00000001843 * (1.15001484281 +   203.00415469950 * t).Cos();
		rtn += 0.00000001813 * (1.39785500313 +   211.81462272970 * t).Cos();
		rtn += 0.00000001810 * (5.96568495526 +   213.18722085340 * t).Cos();
		rtn += 0.00000001810 * (4.37552745264 +   213.41097002260 * t).Cos();
		rtn += 0.00000001799 * (3.46395976970 +  1258.45393162560 * t).Cos();
		rtn += 0.00000001782 * (3.26122906302 +   175.16605980020 * t).Cos();
		rtn += 0.00000001770 * (3.36194411768 +   248.72381809010 * t).Cos();
		rtn += 0.00000001736 * (5.45933992115 +   916.93228005540 * t).Cos();
		rtn += 0.00000001714 * (6.14729146384 +   643.82943957710 * t).Cos();
		rtn += 0.00000001697 * (3.23613719814 +   427.56139872250 * t).Cos();
		rtn += 0.00000001651 * (4.61629429952 +   621.73803904930 * t).Cos();
		rtn += 0.00000001628 * (0.74011617198 +   177.87437278590 * t).Cos();
		rtn += 0.00000001617 * (1.31181209458 +   214.78356814630 * t).Cos();
		rtn += 0.00000001611 * (0.97888081762 +  2001.44399215820 * t).Cos();
		rtn += 0.00000001608 * (4.66724132818 +   269.92144674060 * t).Cos();
		rtn += 0.00000001578 * (2.82443242444 +   426.55000676620 * t).Cos();
		rtn += 0.00000001574 * (6.01995224314 +   426.64637498580 * t).Cos();
		rtn += 0.00000001564 * (2.04342011485 +  1788.14489672020 * t).Cos();
		rtn += 0.00000001559 * (0.36281050773 +   776.93031047640 * t).Cos();
		rtn += 0.00000001552 * (2.55542734908 +   692.58748435350 * t).Cos();
		rtn += 0.00000001525 * (1.47939329423 +   198.32124191100 * t).Cos();
		rtn += 0.00000001521 * (3.75588462293 +   213.51154375910 * t).Cos();
		rtn += 0.00000001521 * (0.30214462385 +   213.08664711690 * t).Cos();
		rtn += 0.00000001503 * (2.59953333916 +   228.27694896500 * t).Cos();
		rtn += 0.00000001484 * (6.17173980637 +    56.62235130260 * t).Cos();
		rtn += 0.00000001408 * (1.38491846750 +   501.37978944330 * t).Cos();
		rtn += 0.00000001346 * (4.01262069353 +   278.51946644970 * t).Cos();
		rtn += 0.00000001327 * (0.23760037979 +   148.07872442630 * t).Cos();
		rtn += 0.00000001311 * (5.93900415785 +   436.15941843160 * t).Cos();
		rtn += 0.00000001305 * (2.41201772023 +   275.55052103310 * t).Cos();
		rtn += 0.00000001296 * (5.75203277385 +  1692.16566950240 * t).Cos();
		rtn += 0.00000001295 * (3.04090959062 +   831.85574074960 * t).Cos();
		rtn += 0.00000001283 * (1.62400181159 +   643.07868005170 * t).Cos();
		rtn += 0.00000001260 * (0.72481995446 +   355.74874557180 * t).Cos();
		rtn += 0.00000001253 * (0.21632769953 +   404.50679034820 * t).Cos();
		rtn += 0.00000001203 * (1.36928065935 +   235.39049596580 * t).Cos();
		rtn += 0.00000001195 * (2.11232088496 +   205.22234059070 * t).Cos();
		rtn += 0.00000001186 * (1.84906064486 +   151.04766984290 * t).Cos();
		rtn += 0.00000001186 * (0.85270715988 +   525.49817940060 * t).Cos();
		rtn += 0.00000001176 * (1.07528227869 +   312.19908396260 * t).Cos();
		rtn += 0.00000001166 * (0.09590019561 +   340.77089204480 * t).Cos();
		rtn += 0.00000001143 * (5.93977485365 +   213.03846300710 * t).Cos();
		rtn += 0.00000001143 * (4.40125874383 +   213.55972786890 * t).Cos();
		rtn += 0.00000001115 * (2.20460481017 +   221.37585028530 * t).Cos();
		rtn += 0.00000001107 * (1.50329021421 +   289.56516671360 * t).Cos();
		rtn += 0.00000001103 * (0.23626839162 +   617.80588578620 * t).Cos();
		rtn += 0.00000001100 * (0.02509241739 +   219.44943459230 * t).Cos();
		rtn += 0.00000001093 * (5.16243153571 +   630.33605875840 * t).Cos();
		rtn += 0.00000001077 * (3.51670933532 +   312.45971639350 * t).Cos();
		rtn += 0.00000001074 * (3.17412275025 +    98.89998852460 * t).Cos();
		rtn += 0.00000001040 * (4.79631324365 +   106.27416795630 * t).Cos();
		rtn += 0.00000001039 * (0.53953974796 +   778.41478318470 * t).Cos();
		rtn += 0.00000001037 * (1.04152859909 +     2.44768055480 * t).Cos();
		rtn += 0.00000001011 * (6.27004359435 +   121.25202148330 * t).Cos();
		rtn += 0.00000000974 * (3.01092368346 +   696.51963761660 * t).Cos();
		rtn += 0.00000000971 * (5.09512804595 +  1589.07289528380 * t).Cos();
		rtn += 0.00000000961 * (2.80113869315 +   738.79727483860 * t).Cos();
		rtn += 0.00000000950 * (2.00801292252 +  1045.15483618760 * t).Cos();
		rtn += 0.00000000937 * (5.44353432307 +   344.70304530790 * t).Cos();
		rtn += 0.00000000924 * (4.88158186437 +    39.35687591520 * t).Cos();
		rtn += 0.00000000904 * (4.24232505252 +    10.29494073850 * t).Cos();
		rtn += 0.00000000904 * (4.15218356485 +   426.07692601420 * t).Cos();
		rtn += 0.00000000895 * (2.47587956888 +   447.93883187840 * t).Cos();
		rtn += 0.00000000870 * (1.62765846893 +   114.13847448250 * t).Cos();
		rtn += 0.00000000835 * (3.19492825640 +  1574.84580128220 * t).Cos();
		rtn += 0.00000000831 * (4.05299295705 +   207.14875628370 * t).Cos();
		rtn += 0.00000000830 * (1.57233214789 +  1898.35121793960 * t).Cos();
		rtn += 0.00000000826 * (4.66845240923 +   427.11945573780 * t).Cos();
		rtn += 0.00000000824 * (3.97540449663 +   210.59078245230 * t).Cos();
		rtn += 0.00000000824 * (0.08813665925 +   216.00740842370 * t).Cos();
		rtn += 0.00000000823 * (2.08766677969 +   358.93013930950 * t).Cos();
		rtn += 0.00000000816 * (0.62175655307 +   188.92007304980 * t).Cos();
		rtn += 0.00000000801 * (5.84130533519 +   905.88657979150 * t).Cos();
		rtn += 0.00000000798 * (3.36396062989 +   237.67811782620 * t).Cos();
		rtn += 0.00000000796 * (4.87623914638 +   342.25536475310 * t).Cos();
		rtn += 0.00000000767 * (2.73651219269 +   627.36711334180 * t).Cos();
		rtn += 0.00000000755 * (5.90983584858 +   284.14854074220 * t).Cos();
		rtn += 0.00000000753 * (1.51187970880 +   576.16138801060 * t).Cos();
		rtn += 0.00000000734 * (6.23523714922 +  2111.65031337760 * t).Cos();
		rtn += 0.00000000720 * (4.95645178898 +   638.41281360570 * t).Cos();
		rtn += 0.00000000710 * (1.78740818763 +  2104.53676637680 * t).Cos();
		rtn += 0.00000000703 * (0.35096991676 +   220.46082654860 * t).Cos();
		rtn += 0.00000000701 * (0.72526525525 + 10213.28554621100 * t).Cos();
		rtn += 0.00000000697 * (1.91977327925 +   134.58534360760 * t).Cos();
		rtn += 0.00000000690 * (3.48062808501 +   213.13903674360 * t).Cos();
		rtn += 0.00000000690 * (1.34023204821 +  6283.07584999140 * t).Cos();
		rtn += 0.00000000690 * (0.58291546593 +   213.45915413240 * t).Cos();
		rtn += 0.00000000690 * (0.41873449575 +  5856.47765911540 * t).Cos();
		rtn += 0.00000000681 * (3.45804290093 +   220.36445832900 * t).Cos();
		rtn += 0.00000000670 * (0.75839374890 +  2317.83586181480 * t).Cos();
		rtn += 0.00000000653 * (4.19599635390 +   247.23934538180 * t).Cos();
		rtn += 0.00000000648 * (5.15917450752 +     8.07675484730 * t).Cos();
		rtn += 0.00000000642 * (6.15007145598 +   179.35884549420 * t).Cos();
		rtn += 0.00000000639 * (1.20304559619 +   867.42347575360 * t).Cos();
		rtn += 0.00000000629 * (2.83598833891 +   420.96911658350 * t).Cos();
		rtn += 0.00000000600 * (5.22938546212 +   212.02707105080 * t).Cos();
		rtn += 0.00000000595 * (5.11706007934 +   214.57111982520 * t).Cos();
		rtn += 0.00000000565 * (5.28099337758 +   423.67742956920 * t).Cos();
		rtn += 0.00000000564 * (4.05871107615 +   831.10498122420 * t).Cos();
		rtn += 0.00000000552 * (5.83265103738 +    84.34282612290 * t).Cos();
		rtn += 0.00000000551 * (3.33109164145 +   980.66817835880 * t).Cos();
		rtn += 0.00000000546 * (3.56588711151 +  1485.98012106520 * t).Cos();
		rtn += 0.00000000542 * (3.28613020157 +   245.54242435240 * t).Cos();
		rtn += 0.00000000541 * (2.39252901431 +   421.93232443000 * t).Cos();
		rtn += 0.00000000520 * (3.99939347071 +   618.55664531160 * t).Cos();
		rtn += 0.00000000517 * (2.75430004800 +  1148.24761040620 * t).Cos();
		rtn += 0.00000000511 * (3.87073988213 +   125.98732389850 * t).Cos();
		rtn += 0.00000000508 * (2.86873328929 +   337.73251065900 * t).Cos();
		rtn += 0.00000000506 * (0.80261216855 +   181.05576652360 * t).Cos();
		rtn += 0.00000000498 * (3.11515053568 +   439.12836384820 * t).Cos();
		rtn += 0.00000000495 * (5.38121485133 +   391.17346822390 * t).Cos();
		rtn += 0.00000000493 * (4.13699180247 +   518.64526483070 * t).Cos();
		rtn += 0.00000000491 * (4.47199498503 +   558.00214074590 * t).Cos();
		rtn += 0.00000000491 * (4.18623117082 +   219.89137757700 * t).Cos();
		rtn += 0.00000000488 * (0.26059969650 +   416.30325013750 * t).Cos();
		rtn += 0.00000000486 * (5.17710069856 +    67.66805156650 * t).Cos();
		rtn += 0.00000000481 * (3.72498040536 +   206.13736432740 * t).Cos();
		rtn += 0.00000000477 * (5.48556902348 +    35.42472265210 * t).Cos();
		rtn += 0.00000000475 * (5.68530292289 +   320.32402291970 * t).Cos();
		rtn += 0.00000000474 * (2.42545073874 +   436.89313161450 * t).Cos();
		rtn += 0.00000000467 * (4.18144797677 +   444.75743814070 * t).Cos();
		rtn += 0.00000000463 * (5.53192185211 +   418.52143602870 * t).Cos();
		rtn += 0.00000000458 * (0.60848440253 +   206.23373254700 * t).Cos();
		rtn += 0.00000000446 * (6.20735049659 +    73.29712585900 * t).Cos();
		rtn += 0.00000000435 * (2.95256554350 +     5.41662597140 * t).Cos();
		rtn += 0.00000000435 * (1.61732308614 +   191.95845443560 * t).Cos();
		rtn += 0.00000000435 * (1.60816661416 +  2214.74308759620 * t).Cos();
		rtn += 0.00000000432 * (0.68132398291 +   116.42609634290 * t).Cos();
		rtn += 0.00000000431 * (4.39380503963 +   353.30106501700 * t).Cos();
		rtn += 0.00000000429 * (3.26903461513 +   144.14657116320 * t).Cos();
		rtn += 0.00000000421 * (5.57377685121 +   430.79097657000 * t).Cos();
		rtn += 0.00000000421 * (4.65837340438 +   543.02428721890 * t).Cos();
		rtn += 0.00000000416 * (4.36391909218 +   113.38771495710 * t).Cos();
		rtn += 0.00000000416 * (3.81986946256 +   429.51895218280 * t).Cos();
		rtn += 0.00000000405 * (2.91366762549 +  1891.23767093880 * t).Cos();
		rtn += 0.00000000405 * (1.87470341223 +   114.39910691340 * t).Cos();
		rtn += 0.00000000404 * (1.84249441289 +  9786.68735533500 * t).Cos();
		rtn += 0.00000000399 * (0.06301179341 +   206.70681329900 * t).Cos();
		rtn += 0.00000000398 * (6.03822674845 +   432.22726516850 * t).Cos();
		rtn += 0.00000000398 * (2.38329818919 +   299.12639426920 * t).Cos();
		rtn += 0.00000000398 * (2.08900381937 +     4.66586644600 * t).Cos();
		rtn += 0.00000000394 * (2.75496219113 +   425.84743135060 * t).Cos();
		rtn += 0.00000000393 * (0.56487847337 +   128.95626931510 * t).Cos();
		rtn += 0.00000000382 * (4.24995364794 +   387.24131496080 * t).Cos();
		rtn += 0.00000000375 * (2.67828133567 +   319.57326339430 * t).Cos();
		rtn += 0.00000000371 * (5.83382962844 +  2008.55753915900 * t).Cos();
		rtn += 0.00000000359 * (5.62797136991 +    78.71375183040 * t).Cos();
		rtn += 0.00000000359 * (3.54801032661 +   421.18156490460 * t).Cos();
		rtn += 0.00000000358 * (1.11857595997 +  1044.40407666220 * t).Cos();
		rtn += 0.00000000353 * (5.50209003460 +   305.34616939270 * t).Cos();
		rtn += 0.00000000352 * (1.65610545221 +   963.40270297140 * t).Cos();
		rtn += 0.00000000345 * (5.37083374878 +   428.08266358430 * t).Cos();
		rtn += 0.00000000340 * (1.29378813067 +   329.72519178090 * t).Cos();
		rtn += 0.00000000339 * (5.19074405462 +    69.15252427480 * t).Cos();
		rtn += 0.00000000339 * (1.03883773894 +    32.24332891440 * t).Cos();
		rtn += 0.00000000334 * (1.84260994740 +  1361.54670584420 * t).Cos();
		rtn += 0.00000000328 * (6.07106596408 +   710.74673161820 * t).Cos();
		rtn += 0.00000000328 * (1.48618893585 +  2420.92863603340 * t).Cos();
		rtn += 0.00000000326 * (1.62373774313 +     5.62907429250 * t).Cos();
		rtn += 0.00000000323 * (1.17502395659 +   815.06334611420 * t).Cos();
		rtn += 0.00000000315 * (6.24003908326 +   465.95506679120 * t).Cos();
		rtn += 0.00000000312 * (5.29291124448 +   347.88443904560 * t).Cos();
		rtn += 0.00000000310 * (0.31232452686 +   427.34895040140 * t).Cos();
		rtn += 0.00000000308 * (2.84912656825 +   487.36514376280 * t).Cos();
		rtn += 0.00000000303 * (4.93962873690 +   373.90799283650 * t).Cos();
		rtn += 0.00000000303 * (3.96772261614 +   934.94851496820 * t).Cos();
		rtn += 0.00000000296 * (3.04457317761 +   211.60217440860 * t).Cos();
		rtn += 0.00000000296 * (0.30332524090 +  1055.44977692610 * t).Cos();
		rtn += 0.00000000294 * (4.29399534634 +     4.19278569400 * t).Cos();
		rtn += 0.00000000293 * (5.91401607974 +    14.97785352700 * t).Cos();
		rtn += 0.00000000293 * (1.32452002382 +   159.12442469020 * t).Cos();
		rtn += 0.00000000291 * (3.25977762780 +   494.26624244250 * t).Cos();
		rtn += 0.00000000289 * (2.83591185309 +   212.07525516060 * t).Cos();
		rtn += 0.00000000289 * (2.05371431350 +   214.52293571540 * t).Cos();
		rtn += 0.00000000288 * (6.16001418475 +   969.62247809490 * t).Cos();
		rtn += 0.00000000285 * (5.69474711283 +   220.93390730060 * t).Cos();
		rtn += 0.00000000285 * (4.76303256917 +    54.17467074780 * t).Cos();
		rtn += 0.00000000280 * (5.41630221077 +  1493.09366806600 * t).Cos();
		rtn += 0.00000000280 * (1.29728455136 +   241.61027108930 * t).Cos();
		rtn += 0.00000000278 * (2.81667003542 +    87.31177153950 * t).Cos();
		rtn += 0.00000000275 * (0.91628212149 +   849.26422848890 * t).Cos();
		rtn += 0.00000000274 * (5.03981944861 +   458.84151979040 * t).Cos();
		rtn += 0.00000000274 * (2.72607352851 +   145.63104387150 * t).Cos();
		rtn += 0.00000000263 * (6.11559198968 +  2428.04218303420 * t).Cos();
		rtn += 0.00000000260 * (5.99216785208 +    20.60692781950 * t).Cos();
		rtn += 0.00000000258 * (0.43205106363 +  2634.22773147140 * t).Cos();
		rtn += 0.00000000246 * (3.55891849574 +  1251.34038462480 * t).Cos();
		rtn += 0.00000000246 * (1.83689902078 +   214.99601646740 * t).Cos();
		rtn += 0.00000000244 * (3.52504227332 +   184.98791978670 * t).Cos();
		rtn += 0.00000000243 * (3.13047989401 +   525.75881183150 * t).Cos();
		rtn += 0.00000000242 * (0.98744748894 +   282.45161971280 * t).Cos();
		rtn += 0.00000000239 * (2.09516779457 +   292.01284726840 * t).Cos();
		rtn += 0.00000000238 * (3.52738705554 +   267.47376618580 * t).Cos();
		rtn += 0.00000000237 * (5.05443109284 +   254.94359321360 * t).Cos();
		rtn += 0.00000000236 * (5.79560286324 +   280.96714700450 * t).Cos();
		rtn += 0.00000000235 * (0.29884419224 +    14.01464568050 * t).Cos();
		rtn += 0.00000000232 * (1.86083014117 +   221.16340196420 * t).Cos();
		rtn += 0.00000000229 * (3.91975580405 +   182.27960680100 * t).Cos();
		rtn += 0.00000000225 * (0.14271906959 +   131.40394986990 * t).Cos();
		rtn += 0.00000000223 * (2.49651288358 +  1464.63948006280 * t).Cos();
		rtn += 0.00000000222 * (2.90133577623 +   205.43478891180 * t).Cos();
		rtn += 0.00000000221 * (0.48302467341 +   153.49535039770 * t).Cos();
		rtn += 0.00000000219 * (3.46267185338 +  1182.92157353290 * t).Cos();
		rtn += 0.00000000218 * (1.71859101510 +     0.96320784650 * t).Cos();
		rtn += 0.00000000218 * (1.46057992688 +  2531.13495725280 * t).Cos();
		rtn += 0.00000000217 * (4.03234048538 +   835.03713448730 * t).Cos();
		rtn += 0.00000000217 * (3.96328561940 +   894.84087952760 * t).Cos();
		rtn += 0.00000000217 * (2.64509967170 +  2207.62954059540 * t).Cos();
		rtn += 0.00000000215 * (4.52373060846 +  3060.82592234740 * t).Cos();
		rtn += 0.00000000210 * (2.87823761610 +   214.73538403650 * t).Cos();
		rtn += 0.00000000210 * (2.56849303008 +   593.42686339800 * t).Cos();
		rtn += 0.00000000210 * (2.01138855049 +   211.86280683950 * t).Cos();
		rtn += 0.00000000209 * (2.97542058241 +   273.10284047830 * t).Cos();
		rtn += 0.00000000208 * (4.50537355579 +    24.37902238820 * t).Cos();
		rtn += 0.00000000205 * (1.98151360584 +   199.28444975750 * t).Cos();
		rtn += 0.00000000199 * (3.53454927143 +   219.66188291340 * t).Cos();
		rtn += 0.00000000199 * (2.56046317223 +   264.50482076920 * t).Cos();
		rtn += 0.00000000199 * (2.03508708900 +   757.21715453420 * t).Cos();
		rtn += 0.00000000198 * (3.54289000289 +   533.62311835770 * t).Cos();
		rtn += 0.00000000197 * (2.65338829617 +   864.24208201590 * t).Cos();
		rtn += 0.00000000192 * (3.98017256784 +   212.40532356070 * t).Cos();
		rtn += 0.00000000192 * (1.67985944172 +  1677.93857550080 * t).Cos();
		rtn += 0.00000000192 * (0.90945359875 +   214.19286731530 * t).Cos();
		rtn += 0.00000000191 * (4.20221553993 +   556.51766803760 * t).Cos();
		rtn += 0.00000000191 * (2.07106909876 +   756.32338265690 * t).Cos();
		rtn += 0.00000000191 * (1.05067348453 +   702.14871190910 * t).Cos();
		rtn += 0.00000000189 * (1.27260556263 +   192.69216761850 * t).Cos();
		rtn += 0.00000000188 * (2.92836809840 +   227.31374111850 * t).Cos();
		rtn += 0.00000000186 * (2.81416016738 +   569.04784100980 * t).Cos();
		rtn += 0.00000000185 * (5.49802440713 +   205.66428357540 * t).Cos();
		rtn += 0.00000000181 * (3.62483757675 +   233.90602325750 * t).Cos();
		rtn += 0.00000000181 * (1.89151852263 +     6.15033915430 * t).Cos();
		rtn += 0.00000000181 * (1.25381796494 +  2737.32050569000 * t).Cos();
		rtn += 0.00000000179 * (6.15189171649 +     2.92076130680 * t).Cos();
		rtn += 0.00000000178 * (4.55557913565 +    46.47042291600 * t).Cos();
		rtn += 0.00000000178 * (2.01622328964 +   705.11765732570 * t).Cos();
		rtn += 0.00000000177 * (0.43196690516 +   140.00196957900 * t).Cos();
		rtn += 0.00000000175 * (4.95121713507 +  1905.46476494040 * t).Cos();
		rtn += 0.00000000172 * (4.15145223592 +     2.96894541660 * t).Cos();
		rtn += 0.00000000166 * (5.85452227121 +   637.44960575920 * t).Cos();
		rtn += 0.00000000165 * (1.94881873062 +   107.02492748170 * t).Cos();
		rtn += 0.00000000164 * (3.50682537694 +  1382.88734684660 * t).Cos();
		rtn += 0.00000000161 * (4.98020340619 +  2648.45482547300 * t).Cos();
		rtn += 0.00000000160 * (4.18196878816 +  3340.61242669980 * t).Cos();
		rtn += 0.00000000160 * (2.85370771355 +   209.15449385380 * t).Cos();
		rtn += 0.00000000160 * (2.51522796187 +  3127.31333126180 * t).Cos();
		rtn += 0.00000000160 * (0.13309484488 +   431.26405732200 * t).Cos();
		rtn += 0.00000000158 * (5.92242110049 +    96.87299909510 * t).Cos();
		rtn += 0.00000000157 * (1.35908014451 +    51.20572533120 * t).Cos();
		rtn += 0.00000000156 * (2.03601440129 +   217.44369702220 * t).Cos();
		rtn += 0.00000000155 * (6.24092514222 +   464.73122651380 * t).Cos();
		rtn += 0.00000000155 * (6.02684189458 +  1286.90811962880 * t).Cos();
		rtn += 0.00000000155 * (1.36669731999 +   206.93630796260 * t).Cos();
		rtn += 0.00000000153 * (6.06094547271 +   561.18353448360 * t).Cos();
		rtn += 0.00000000153 * (3.07590434707 +  3480.31056622260 * t).Cos();
		rtn += 0.00000000152 * (4.29475572258 +   555.55446019110 * t).Cos();
		rtn += 0.00000000152 * (1.01453902153 +  2840.41327990860 * t).Cos();
		rtn += 0.00000000152 * (0.85558875667 +   570.74476203920 * t).Cos();
		rtn += 0.00000000151 * (2.39413061881 +  2524.02141025200 * t).Cos();
		rtn += 0.00000000147 * (4.98199291770 +   850.01498801430 * t).Cos();
		rtn += 0.00000000147 * (1.52324472511 +   552.58551477450 * t).Cos();
		rtn += 0.00000000146 * (5.26789260159 +     7.06536289100 * t).Cos();
		rtn += 0.00000000146 * (3.71232877850 +   546.95644048200 * t).Cos();
		rtn += 0.00000000145 * (0.93414637377 +  1994.33044515740 * t).Cos();
		rtn += 0.00000000144 * (3.95680110579 +   300.61086697750 * t).Cos();
		rtn += 0.00000000143 * (4.15264164139 +    31.01948863700 * t).Cos();
		rtn += 0.00000000141 * (5.66801998888 +   120.35824960600 * t).Cos();
		rtn += 0.00000000141 * (3.88995778619 +   454.90936652730 * t).Cos();
		rtn += 0.00000000139 * (0.79924371385 +   166.82867252200 * t).Cos();
		rtn += 0.00000000138 * (4.20096561019 +   731.94436026870 * t).Cos();
		rtn += 0.00000000137 * (2.20269111622 +     7.16173111060 * t).Cos();
		rtn += 0.00000000135 * (1.27192121638 +    92.94084583200 * t).Cos();
		rtn += 0.00000000129 * (5.42665311725 +  2538.24850425360 * t).Cos();
		rtn += 0.00000000129 * (4.67730374872 +   913.96333463880 * t).Cos();
		rtn += 0.00000000129 * (2.75851443754 +   480.77286162380 * t).Cos();
		rtn += 0.00000000128 * (5.83700968658 +  2324.94940881560 * t).Cos();
		rtn += 0.00000000127 * (6.19372294369 +    59.80374504030 * t).Cos();
		rtn += 0.00000000127 * (0.47350572907 +     6.59228213900 * t).Cos();
		rtn += 0.00000000125 * (3.41796878361 +  1802.37199072180 * t).Cos();
		rtn += 0.00000000123 * (5.98484393970 +   477.80391620720 * t).Cos();
		rtn += 0.00000000122 * (5.82973501131 +   990.22940591440 * t).Cos();
		rtn += 0.00000000122 * (4.96246567897 +   638.93407846750 * t).Cos();
		rtn += 0.00000000122 * (4.75728514255 +  2854.64037391020 * t).Cos();
		rtn += 0.00000000121 * (1.19957548726 +   572.22923474750 * t).Cos();
		rtn += 0.00000000120 * (4.59083886034 +   339.28641933650 * t).Cos();
		rtn += 0.00000000118 * (5.47495367121 +  2957.73314812880 * t).Cos();
		rtn += 0.00000000116 * (4.71488890981 +  1130.23137549340 * t).Cos();
		rtn += 0.00000000116 * (2.82742160564 +   450.97721326420 * t).Cos();
		rtn += 0.00000000115 * (5.22953781515 +  1119.18567522950 * t).Cos();
		rtn += 0.00000000115 * (2.26043201622 +  1781.03134971940 * t).Cos();
		rtn += 0.00000000114 * (2.06120434865 +   952.09637027660 * t).Cos();
		rtn += 0.00000000113 * (2.57036693965 +   462.02291352810 * t).Cos();
		rtn += 0.00000000112 * (5.53802838779 +   381.35160823740 * t).Cos();
		rtn += 0.00000000112 * (4.14736642579 +   422.40540518200 * t).Cos();
		rtn += 0.00000000112 * (2.20667724213 +   395.57870223900 * t).Cos();
		rtn += 0.00000000111 * (5.53230411085 +   857.12853501510 * t).Cos();
		rtn += 0.00000000111 * (4.51520219898 +  1699.27921650320 * t).Cos();
		rtn += 0.00000000110 * (4.86686492403 +  2914.01423582380 * t).Cos();
		rtn += 0.00000000110 * (2.03622569317 +   642.34496686880 * t).Cos();
		rtn += 0.00000000109 * (4.43848727280 +   405.99126305650 * t).Cos();
		rtn += 0.00000000109 * (3.00005651288 +   420.44785172170 * t).Cos();
		rtn += 0.00000000109 * (2.82817225044 +   468.24268865160 * t).Cos();
		rtn += 0.00000000107 * (4.38879925113 +   412.58354519550 * t).Cos();
		rtn += 0.00000000106 * (4.19443004843 +   486.40193591630 * t).Cos();
		rtn += 0.00000000105 * (2.66415710279 +   460.53844081980 * t).Cos();
		rtn += 0.00000000104 * (1.91139383428 +   472.17484191470 * t).Cos();
		rtn += 0.00000000102 * (5.90112611078 +    99.91138048090 * t).Cos();
		rtn += 0.00000000101 * (2.53392410330 +   640.86049416050 * t).Cos();
		rtn += 0.00000000100 * (5.21941099517 +   426.48631629140 * t).Cos();
		rtn += 0.00000000100 * (3.62925349363 +   426.71006546060 * t).Cos();
		rtn += 0.00000000099 * (5.92199927896 +   411.62033734900 * t).Cos();
		rtn += 0.00000000098 * (5.27107833435 +   639.94547042380 * t).Cos();
		rtn += 0.00000000098 * (2.07334671974 +   639.84910220420 * t).Cos();
		rtn += 0.00000000097 * (5.09373549436 +    92.04707395470 * t).Cos();
		rtn += 0.00000000097 * (1.27914551364 +  2847.52682690940 * t).Cos();
		rtn += 0.00000000096 * (0.59816870672 +   714.67888488130 * t).Cos();
		rtn += 0.00000000095 * (4.26135357007 +   540.73666535850 * t).Cos();
		rtn += 0.00000000094 * (4.30151510535 +  3377.21779200400 * t).Cos();
		rtn += 0.00000000094 * (1.16749092536 +  5643.17856367740 * t).Cos();
		rtn += 0.00000000094 * (0.54205024076 +   423.62924545940 * t).Cos();
		rtn += 0.00000000093 * (5.35954173624 +   334.55111692130 * t).Cos();
		rtn += 0.00000000093 * (5.32943472274 +   432.01481684740 * t).Cos();
		rtn += 0.00000000086 * (1.51247258028 +   760.25553592000 * t).Cos();
		rtn += 0.00000000085 * (5.20920130934 +   562.14674233010 * t).Cos();
		rtn += 0.00000000085 * (4.28770375688 +   135.54855145410 * t).Cos();
		rtn += 0.00000000084 * (5.83905303748 +   426.38574255490 * t).Cos();
		rtn += 0.00000000084 * (3.00961145133 +   426.81063919710 * t).Cos();
		rtn += 0.00000000084 * (2.20217125255 +   909.81873305460 * t).Cos();
		rtn += 0.00000000084 * (0.14646013561 +   681.54178408960 * t).Cos();
		rtn += 0.00000000083 * (6.12100285205 +   380.12776796000 * t).Cos();
		rtn += 0.00000000083 * (0.11133738383 +   402.21916848780 * t).Cos();
		rtn += 0.00000000080 * (5.71035549752 +   361.37781986430 * t).Cos();
		rtn += 0.00000000080 * (4.11576173565 +   774.48262992160 * t).Cos();
		rtn += 0.00000000080 * (3.03551986945 +   409.92341631960 * t).Cos();
		rtn += 0.00000000080 * (0.88468467902 +   856.37777548970 * t).Cos();
		rtn += 0.00000000075 * (2.89122656610 +   806.72595883600 * t).Cos();
		rtn += 0.00000000072 * (4.85259171933 +   392.65794093220 * t).Cos();
		return rtn;
	}

	// MSaturn.B1(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 1. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 1. Ordnung.</returns>
	private static double B1(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.00397554998 * (5.33289992556 +  213.29909543800 * t).Cos();
		if(value == EPrecision.Low)
			return rtn;
		rtn += 0.00049478641 * (3.14159265359 +    0.00000000000 * t).Cos();
		rtn += 0.00018571607 * (6.09919206378 +  426.59819087600 * t).Cos();
		rtn += 0.00014800587 * (2.30586060520 +  206.18554843720 * t).Cos();
		rtn += 0.00009643981 * (1.69674660120 +  220.41264243880 * t).Cos();
		rtn += 0.00003757161 * (1.25429514018 +  419.48464387520 * t).Cos();
		rtn += 0.00002716647 * (5.91166664787 +  639.89728631400 * t).Cos();
		rtn += 0.00001455309 * (0.85161616532 +  433.71173787680 * t).Cos();
		rtn += 0.00001290595 * (2.91770857090 +    7.11354700080 * t).Cos();
		rtn += 0.00000852630 * (0.43572078997 +  316.39186965660 * t).Cos();
		rtn += 0.00000297726 * (0.91909206723 +  632.78373931320 * t).Cos();
		rtn += 0.00000292185 * (5.31574251270 +  853.19638175200 * t).Cos();
		rtn += 0.00000284386 * (1.61881754773 +  227.52618943960 * t).Cos();
		rtn += 0.00000275090 * (3.88864137336 +  103.09277421860 * t).Cos();
		rtn += 0.00000172359 * (0.05215146556 +  647.01083331480 * t).Cos();
		rtn += 0.00000166237 * (2.44351613165 +  199.07200143640 * t).Cos();
		rtn += 0.00000158220 * (5.20850125766 +  110.20632121940 * t).Cos();
		rtn += 0.00000127731 * (1.20711452525 +  529.69096509460 * t).Cos();
		rtn += 0.00000109839 * (2.45695551627 +  217.23124870110 * t).Cos();
		rtn += 0.00000081759 * (2.75839171353 +  210.11770170030 * t).Cos();
		rtn += 0.00000081010 * (2.86038377187 +   14.22709400160 * t).Cos();
		rtn += 0.00000068658 * (1.65537623146 +  202.25339517410 * t).Cos();
		rtn += 0.00000065161 * (1.25527521313 +  216.48048917570 * t).Cos();
		rtn += 0.00000061024 * (1.25273412095 +  209.36694217490 * t).Cos();
		rtn += 0.00000059281 * (1.82410768234 +  323.50541665740 * t).Cos();
		if(value == EPrecision.Medium)
			return rtn;
		rtn += 0.00000046386 * (0.81534705304 +  440.82528487760 * t).Cos();
		rtn += 0.00000036163 * (1.81851057689 +  224.34479570190 * t).Cos();
		rtn += 0.00000034041 * (2.83971297997 +  117.31986822020 * t).Cos();
		rtn += 0.00000033114 * (1.30557080010 +  412.37109687440 * t).Cos();
		rtn += 0.00000032164 * (1.18676132343 +  846.08283475120 * t).Cos();
		rtn += 0.00000027282 * (4.64744847591 + 1066.49547719000 * t).Cos();
		rtn += 0.00000027128 * (4.44228739187 +   11.04570026390 * t).Cos();
		rtn += 0.00000022805 * (4.12923703368 +  415.55249061210 * t).Cos();
		rtn += 0.00000020851 * (1.40999273740 +  309.27832265580 * t).Cos();
		rtn += 0.00000018100 * (5.56392353608 +  860.30992875280 * t).Cos();
		rtn += 0.00000015316 * (1.22393617996 +   63.73589830340 * t).Cos();
		rtn += 0.00000014947 * (1.34302610607 +   95.97922721780 * t).Cos();
		rtn += 0.00000014601 * (1.00753704970 +  536.80451209540 * t).Cos();
		rtn += 0.00000013137 * (2.45991904379 +  490.33408917940 * t).Cos();
		rtn += 0.00000013027 * (3.21731634178 +  277.03499374140 * t).Cos();
		rtn += 0.00000012842 * (2.27059911053 +  742.99006053260 * t).Cos();
		rtn += 0.00000012832 * (4.88898877901 +  522.57741809380 * t).Cos();
		rtn += 0.00000012710 * (0.29501589197 +  422.66603761290 * t).Cos();
		rtn += 0.00000011883 * (1.87308666696 +  423.41679713830 * t).Cos();
		rtn += 0.00000009946 * (3.11650057543 +  625.67019231240 * t).Cos();
		rtn += 0.00000009644 * (1.74586356703 +  330.61896365820 * t).Cos();
		rtn += 0.00000008958 * (0.46482448501 +  429.77958461370 * t).Cos();
		rtn += 0.00000008245 * (4.68121931659 +  215.74677599280 * t).Cos();
		rtn += 0.00000008079 * (2.41931187953 +  430.53034413910 * t).Cos();
		rtn += 0.00000007251 * (5.97098186912 +  149.56319713460 * t).Cos();
		rtn += 0.00000006824 * (1.52456408861 +  437.64389113990 * t).Cos();
		rtn += 0.00000006647 * (3.90879134581 +  351.81659230870 * t).Cos();
		rtn += 0.00000006547 * (3.01351967549 +  949.17560896980 * t).Cos();
		rtn += 0.00000006056 * (1.49115011100 +  234.63973644040 * t).Cos();
		rtn += 0.00000005994 * (0.02442871989 +  654.12438031560 * t).Cos();
		rtn += 0.00000005791 * (5.36720639912 +  735.87651353180 * t).Cos();
		rtn += 0.00000005134 * (3.81149834833 +   74.78159856730 * t).Cos();
		rtn += 0.00000004568 * (4.33599514584 +  628.85158605010 * t).Cos();
		rtn += 0.00000003959 * (5.63505813057 +  210.85141488320 * t).Cos();
		rtn += 0.00000003811 * (2.63992803111 +    3.18139373770 * t).Cos();
		rtn += 0.00000003643 * (1.73267151007 + 1059.38193018920 * t).Cos();
		rtn += 0.00000003554 * (4.98621474362 +    3.93215326310 * t).Cos();
		rtn += 0.00000003522 * (1.16093567319 +  223.59403617650 * t).Cos();
		rtn += 0.00000003145 * (2.51404811765 + 1162.47470440780 * t).Cos();
		rtn += 0.00000002992 * (5.06312015437 +  515.46387109300 * t).Cos();
		rtn += 0.00000002933 * (2.06057834252 +  956.28915597060 * t).Cos();
		rtn += 0.00000002644 * (5.62559379305 +  203.73786788240 * t).Cos();
		rtn += 0.00000002398 * (3.99421633537 + 1279.79457262800 * t).Cos();
		rtn += 0.00000002304 * (2.73123930535 +   21.34064100240 * t).Cos();
		rtn += 0.00000002202 * (5.93027042684 + 1052.26838318840 * t).Cos();
		rtn += 0.00000002168 * (2.91805928238 +  203.00415469950 * t).Cos();
		rtn += 0.00000002146 * (0.87500689888 +  408.43894361130 * t).Cos();
		rtn += 0.00000002088 * (1.85721384366 +  138.51749687070 * t).Cos();
		rtn += 0.00000002074 * (1.65731069687 +  137.03302416240 * t).Cos();
		rtn += 0.00000001920 * (3.77935901504 +  350.33211960040 * t).Cos();
		rtn += 0.00000001890 * (0.41025631859 +  127.47179660680 * t).Cos();
		rtn += 0.00000001851 * (2.45470409290 +  340.77089204480 * t).Cos();
		rtn += 0.00000001843 * (0.22126910774 +  750.10360753340 * t).Cos();
		rtn += 0.00000001797 * (1.56879308343 +  124.43341522100 * t).Cos();
		rtn += 0.00000001786 * (5.78644477326 +  635.96513305090 * t).Cos();
		rtn += 0.00000001769 * (4.82294294946 + 1073.60902419080 * t).Cos();
		rtn += 0.00000001645 * (5.59115773632 +  483.22054217860 * t).Cos();
		rtn += 0.00000001635 * (1.20387813348 +   88.86568021700 * t).Cos();
		rtn += 0.00000001583 * (3.46882532865 +   38.13303563780 * t).Cos();
		rtn += 0.00000001582 * (5.63360832372 +  214.26230328450 * t).Cos();
		rtn += 0.00000001577 * (4.02973226017 +  388.46515523820 * t).Cos();
		rtn += 0.00000001568 * (1.89939852487 +  212.33588759150 * t).Cos();
		rtn += 0.00000001563 * (4.88438049382 +  208.63322899200 * t).Cos();
		rtn += 0.00000001498 * (5.87094430469 +  362.86229257260 * t).Cos();
		rtn += 0.00000001497 * (3.13026893210 +  703.63318461740 * t).Cos();
		rtn += 0.00000001483 * (0.91111666841 +  543.91805909620 * t).Cos();
		rtn += 0.00000001449 * (4.00934078371 +  195.13984817330 * t).Cos();
		rtn += 0.00000001406 * (0.34582712649 +   85.82729883120 * t).Cos();
		rtn += 0.00000001405 * (4.07880624509 +  728.76296653100 * t).Cos();
		rtn += 0.00000001321 * (2.91534782718 + 1265.56747862640 * t).Cos();
		rtn += 0.00000001317 * (2.22386203585 +  213.34727954780 * t).Cos();
		rtn += 0.00000001316 * (5.30963570131 +  213.25091132820 * t).Cos();
		rtn += 0.00000001307 * (5.41748323885 +  217.96496188400 * t).Cos();
		rtn += 0.00000001295 * (2.46089213219 +  200.76892246580 * t).Cos();
		rtn += 0.00000001291 * (2.62333801070 +  554.06998748280 * t).Cos();
		rtn += 0.00000001287 * (2.82247279651 +  231.45834270270 * t).Cos();
		rtn += 0.00000001251 * (1.46674521697 +  218.71572140940 * t).Cos();
		rtn += 0.00000001236 * (3.03659580871 +  838.96928775040 * t).Cos();
		rtn += 0.00000001164 * (1.39531381032 +  210.37833413120 * t).Cos();
		rtn += 0.00000001163 * (6.00108996618 +  191.20769491020 * t).Cos();
		rtn += 0.00000001111 * (0.70962013461 +  447.93883187840 * t).Cos();
		rtn += 0.00000001067 * (5.34734443894 +  207.67002114550 * t).Cos();
		rtn += 0.00000001012 * (5.97140626297 +  643.07868005170 * t).Cos();
		rtn += 0.00000001012 * (1.37217220640 +  636.71589257630 * t).Cos();
		rtn += 0.00000001005 * (2.72373040634 + 1478.86657406440 * t).Cos();
		rtn += 0.00000000971 * (2.89404568581 +  563.63121503840 * t).Cos();
		rtn += 0.00000000946 * (5.72987725592 + 1368.66025284500 * t).Cos();
		rtn += 0.00000000924 * (3.64210508536 +  222.86032299360 * t).Cos();
		rtn += 0.00000000911 * (1.06795057723 +  650.94298657790 * t).Cos();
		rtn += 0.00000000887 * (2.84483069917 +  191.95845443560 * t).Cos();
		rtn += 0.00000000879 * (1.19585734916 +  417.03696332040 * t).Cos();
		rtn += 0.00000000878 * (6.24981924813 +  265.98929347750 * t).Cos();
		rtn += 0.00000000841 * (2.46995220838 + 1375.77379984580 * t).Cos();
		rtn += 0.00000000838 * (4.68035046143 +  288.08069400530 * t).Cos();
		rtn += 0.00000000834 * (6.12384852532 +  209.10630974400 * t).Cos();
		rtn += 0.00000000829 * (4.94182950387 +  497.44763618020 * t).Cos();
		rtn += 0.00000000795 * (5.54574074566 +   76.26607127560 * t).Cos();
		rtn += 0.00000000781 * (4.61973017912 +  424.15051032120 * t).Cos();
		rtn += 0.00000000769 * (4.47368582271 +   52.69019803950 * t).Cos();
		rtn += 0.00000000757 * (2.15030650611 +  207.88246946660 * t).Cos();
		rtn += 0.00000000731 * (0.81660632103 +  142.44965013380 * t).Cos();
		rtn += 0.00000000726 * (4.52598413209 +  565.11568774670 * t).Cos();
		rtn += 0.00000000722 * (0.04119071457 +  269.92144674060 * t).Cos();
		rtn += 0.00000000703 * (2.41479303782 +   10.29494073850 * t).Cos();
		rtn += 0.00000000701 * (1.20410854661 +  479.28838891550 * t).Cos();
		rtn += 0.00000000695 * (1.32062509205 + 1169.58825140860 * t).Cos();
		rtn += 0.00000000695 * (0.37889317398 +  212.77783057620 * t).Cos();
		rtn += 0.00000000692 * (0.87072324976 +  213.82036029980 * t).Cos();
		rtn += 0.00000000691 * (2.31682364985 +  160.60889739850 * t).Cos();
		rtn += 0.00000000676 * (4.43606270900 +  842.15068148810 * t).Cos();
		rtn += 0.00000000674 * (5.63961963995 +  867.42347575360 * t).Cos();
		rtn += 0.00000000658 * (0.32331118921 +  621.73803904930 * t).Cos();
		rtn += 0.00000000644 * (2.10955154583 + 1272.68102562720 * t).Cos();
		rtn += 0.00000000635 * (4.76109030475 +  831.85574074960 * t).Cos();
		rtn += 0.00000000633 * (3.46145143241 +   18.15924726470 * t).Cos();
		rtn += 0.00000000624 * (2.30585779534 +  643.82943957710 * t).Cos();
		rtn += 0.00000000602 * (0.85288769518 +  225.82926841020 * t).Cos();
		rtn += 0.00000000582 * (0.18811617696 +    1.48447270830 * t).Cos();
		rtn += 0.00000000566 * (4.44740324446 +  429.04587143080 * t).Cos();
		rtn += 0.00000000536 * (1.08779067908 +  344.70304530790 * t).Cos();
		rtn += 0.00000000520 * (1.15131866397 +  337.73251065900 * t).Cos();
		rtn += 0.00000000519 * (0.61616177345 +  436.89313161450 * t).Cos();
		rtn += 0.00000000517 * (3.44547026103 +   12.53017297220 * t).Cos();
		rtn += 0.00000000513 * (2.56525967840 +  404.50679034820 * t).Cos();
		rtn += 0.00000000502 * (4.97423814367 +  212.54833591260 * t).Cos();
		rtn += 0.00000000477 * (2.42483193385 +  216.21985674480 * t).Cos();
		rtn += 0.00000000476 * (4.78513362967 +  218.92816973050 * t).Cos();
		rtn += 0.00000000469 * (5.22622034028 +  942.06206196900 * t).Cos();
		rtn += 0.00000000467 * (4.47217820662 +  235.39049596580 * t).Cos();
		rtn += 0.00000000448 * (0.57491120802 +   22.09140052780 * t).Cos();
		rtn += 0.00000000443 * (1.11051326413 +  425.11371816770 * t).Cos();
		rtn += 0.00000000442 * (2.10204008144 +  416.30325013750 * t).Cos();
		rtn += 0.00000000405 * (5.93402105921 +  173.94221952280 * t).Cos();
		rtn += 0.00000000400 * (5.17216478470 +  414.06801790380 * t).Cos();
		rtn += 0.00000000392 * (0.41137926465 +  302.16477565500 * t).Cos();
		rtn += 0.00000000391 * (2.59385552893 + 1795.25844372100 * t).Cos();
		rtn += 0.00000000383 * (3.58419227076 + 1045.15483618760 * t).Cos();
		rtn += 0.00000000369 * (1.60095273908 +   56.62235130260 * t).Cos();
		rtn += 0.00000000355 * (5.44570491928 + 1685.05212250160 * t).Cos();
		rtn += 0.00000000354 * (2.79123486392 + 1581.95934828300 * t).Cos();
		rtn += 0.00000000348 * (0.98872551635 +   70.84944530420 * t).Cos();
		rtn += 0.00000000331 * (5.62133883922 +    9.56122755560 * t).Cos();
		rtn += 0.00000000330 * (0.62529198264 +  358.93013930950 * t).Cos();
		rtn += 0.00000000319 * (4.68828119248 + 1155.36115740700 * t).Cos();
		rtn += 0.00000000319 * (4.31850876624 +  219.44943459230 * t).Cos();
		rtn += 0.00000000311 * (6.27145060602 +  207.14875628370 * t).Cos();
		rtn += 0.00000000305 * (2.65927043884 +  355.74874557180 * t).Cos();
		rtn += 0.00000000305 * (0.82404423420 + 1485.98012106520 * t).Cos();
		rtn += 0.00000000294 * (2.18552193901 +  444.75743814070 * t).Cos();
		rtn += 0.00000000291 * (3.12019266878 +  217.49188113200 * t).Cos();
		rtn += 0.00000000287 * (2.60486363576 +  113.38771495710 * t).Cos();
		rtn += 0.00000000281 * (0.77791302266 +  757.21715453420 * t).Cos();
		rtn += 0.00000000269 * (6.00323720265 +  934.94851496820 * t).Cos();
		rtn += 0.00000000267 * (4.72606312146 +  696.51963761660 * t).Cos();
		rtn += 0.00000000255 * (4.14086605030 +  284.14854074220 * t).Cos();
		rtn += 0.00000000254 * (4.51652534648 + 1148.24761040620 * t).Cos();
		rtn += 0.00000000253 * (2.08074949572 +  252.65597135320 * t).Cos();
		rtn += 0.00000000252 * (5.10097595426 + 1258.45393162560 * t).Cos();
		rtn += 0.00000000244 * (5.36327976010 +  245.54242435240 * t).Cos();
		rtn += 0.00000000240 * (2.93712394928 +  916.93228005540 * t).Cos();
		rtn += 0.00000000234 * (2.43423283339 + 1692.16566950240 * t).Cos();
		rtn += 0.00000000230 * (5.93560798508 +  618.55664531160 * t).Cos();
		rtn += 0.00000000230 * (4.63171743406 +  107.02492748170 * t).Cos();
		rtn += 0.00000000228 * (5.00073557208 + 1574.84580128220 * t).Cos();
		rtn += 0.00000000228 * (1.19253095837 + 1589.07289528380 * t).Cos();
		rtn += 0.00000000227 * (3.10352674343 + 1361.54670584420 * t).Cos();
		rtn += 0.00000000224 * (4.42406538277 +  251.43213107580 * t).Cos();
		rtn += 0.00000000223 * (2.34400676548 + 1677.93857550080 * t).Cos();
		rtn += 0.00000000218 * (2.16069250901 +  177.87437278590 * t).Cos();
		rtn += 0.00000000211 * (2.82699627326 +  106.27416795630 * t).Cos();
		rtn += 0.00000000201 * (4.52152562223 +  508.35032409220 * t).Cos();
		rtn += 0.00000000200 * (1.89409546254 + 2420.92863603340 * t).Cos();
		rtn += 0.00000000196 * (2.73629728926 +  214.04985496340 * t).Cos();
		rtn += 0.00000000196 * (1.01284131123 +  114.39910691340 * t).Cos();
		rtn += 0.00000000191 * (2.28724146195 + 2435.15573003500 * t).Cos();
		rtn += 0.00000000191 * (1.51642829677 + 6069.77675455340 * t).Cos();
		rtn += 0.00000000188 * (4.29343910228 + 1471.75302706360 * t).Cos();
		rtn += 0.00000000185 * (3.73859309582 +  114.13847448250 * t).Cos();
		rtn += 0.00000000183 * (5.09056895026 +  220.46082654860 * t).Cos();
		rtn += 0.00000000178 * (6.05669760153 +  206.13736432740 * t).Cos();
		rtn += 0.00000000174 * (2.80423114755 + 1781.03134971940 * t).Cos();
		rtn += 0.00000000168 * (4.63122081226 + 1891.23767093880 * t).Cos();
		rtn += 0.00000000167 * (1.97508934614 +   62.25142559510 * t).Cos();
		rtn += 0.00000000166 * (5.32531835813 + 2001.44399215820 * t).Cos();
		rtn += 0.00000000165 * (2.62993712087 +  525.49817940060 * t).Cos();
		rtn += 0.00000000161 * (5.83368523750 +  181.05576652360 * t).Cos();
		rtn += 0.00000000158 * (2.78517362162 + 2008.55753915900 * t).Cos();
		rtn += 0.00000000157 * (3.22870773657 + 1493.09366806600 * t).Cos();
		rtn += 0.00000000155 * (5.35194123420 +  576.16138801060 * t).Cos();
		rtn += 0.00000000146 * (3.95687956474 +  421.93232443000 * t).Cos();
		rtn += 0.00000000144 * (4.61003572124 +  121.25202148330 * t).Cos();
		rtn += 0.00000000144 * (0.96056164245 +  214.78356814630 * t).Cos();
		rtn += 0.00000000141 * (4.73916921092 +  501.37978944330 * t).Cos();
		rtn += 0.00000000138 * (1.03080573610 +    4.66586644600 * t).Cos();
		rtn += 0.00000000137 * (1.45135867137 +  131.54696222180 * t).Cos();
		rtn += 0.00000000136 * (4.20279658293 +  710.74673161820 * t).Cos();
		rtn += 0.00000000134 * (3.49720535944 +  488.84961647110 * t).Cos();
		rtn += 0.00000000133 * (2.38290634070 + 2111.65031337760 * t).Cos();
		rtn += 0.00000000131 * (5.85409245557 +  175.16605980020 * t).Cos();
		rtn += 0.00000000129 * (5.13936946160 +  849.26422848890 * t).Cos();
		rtn += 0.00000000129 * (0.05327999225 +  211.81462272970 * t).Cos();
		rtn += 0.00000000127 * (3.88189432056 +   98.89998852460 * t).Cos();
		rtn += 0.00000000125 * (5.87007326241 +  963.40270297140 * t).Cos();
		rtn += 0.00000000125 * (4.50999471095 + 2317.83586181480 * t).Cos();
		rtn += 0.00000000123 * (2.28640485589 + 1898.35121793960 * t).Cos();
		rtn += 0.00000000122 * (4.40757611742 +  778.41478318470 * t).Cos();
		rtn += 0.00000000120 * (0.70795300239 +   81.75213321620 * t).Cos();
		rtn += 0.00000000119 * (3.62785705509 +  248.72381809010 * t).Cos();
		rtn += 0.00000000117 * (4.78666549046 +  601.76425067620 * t).Cos();
		rtn += 0.00000000117 * (3.43819501459 +  436.15941843160 * t).Cos();
		rtn += 0.00000000116 * (6.11600926571 +  558.00214074590 * t).Cos();
		rtn += 0.00000000113 * (4.05600865495 + 1286.90811962880 * t).Cos();
		rtn += 0.00000000111 * (1.44669239244 + 2531.13495725280 * t).Cos();
		rtn += 0.00000000109 * (6.14289264597 +  151.04766984290 * t).Cos();
		rtn += 0.00000000108 * (0.45464469172 + 1802.37199072180 * t).Cos();
		rtn += 0.00000000103 * (3.20558404998 +  312.19908396260 * t).Cos();
		rtn += 0.00000000103 * (1.88058957173 +   99.16062095550 * t).Cos();
		rtn += 0.00000000099 * (3.60670326134 +  776.93031047640 * t).Cos();
		rtn += 0.00000000095 * (1.66925524906 +  213.18722085340 * t).Cos();
		rtn += 0.00000000095 * (0.07909774752 +  213.41097002260 * t).Cos();
		rtn += 0.00000000092 * (5.48700119144 +  767.36908292080 * t).Cos();
		rtn += 0.00000000091 * (5.97938003596 +  556.51766803760 * t).Cos();
		rtn += 0.00000000090 * (4.63029999228 +  228.27694896500 * t).Cos();
		rtn += 0.00000000089 * (6.24541644164 +  661.23792731640 * t).Cos();
		rtn += 0.00000000089 * (4.61331934339 +  431.26405732200 * t).Cos();
		rtn += 0.00000000088 * (3.81144552178 + 1788.14489672020 * t).Cos();
		rtn += 0.00000000087 * (2.71469794199 +  617.80588578620 * t).Cos();
		rtn += 0.00000000085 * (4.93878023673 +    2.44768055480 * t).Cos();
		rtn += 0.00000000085 * (0.45896349060 + 1382.88734684660 * t).Cos();
		rtn += 0.00000000082 * (3.23546757052 +  198.32124191100 * t).Cos();
		rtn += 0.00000000080 * (5.74264101239 +  213.51154375910 * t).Cos();
		rtn += 0.00000000080 * (2.28889729136 +  213.08664711690 * t).Cos();
		rtn += 0.00000000080 * (0.22601918692 +  427.56139872250 * t).Cos();
		rtn += 0.00000000078 * (6.03841191050 +  835.03713448730 * t).Cos();
		rtn += 0.00000000072 * (2.05164614795 + 2634.22773147140 * t).Cos();
		return rtn;
	}

	// MSaturn.B2(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 2. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 2. Ordnung.</returns>
	private static double B2(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)
			return rtn;

		// Terme aufsummieren
		rtn += 0.00020629977 * (0.50482422817 +  213.29909543800 * t).Cos();
		rtn += 0.00003719555 * (3.99833475829 +  206.18554843720 * t).Cos();
		rtn += 0.00001627158 * (6.18189939500 +  220.41264243880 * t).Cos();
		rtn += 0.00001346067 * (0.00000000000 +    0.00000000000 * t).Cos();
		rtn += 0.00000705842 * (3.03914308836 +  419.48464387520 * t).Cos();
		rtn += 0.00000365042 * (5.09928680706 +  426.59819087600 * t).Cos();
		rtn += 0.00000329632 * (5.27899210039 +  433.71173787680 * t).Cos();
		rtn += 0.00000219335 * (3.82841533795 +  639.89728631400 * t).Cos();
		rtn += 0.00000139393 * (1.04272623499 +    7.11354700080 * t).Cos();
		rtn += 0.00000103980 * (6.15730992966 +  227.52618943960 * t).Cos();
		rtn += 0.00000092961 * (1.97994412845 +  316.39186965660 * t).Cos();
		rtn += 0.00000071242 * (4.14754353431 +  199.07200143640 * t).Cos();
		rtn += 0.00000051927 * (2.88364833898 +  632.78373931320 * t).Cos();
		if(value == EPrecision.Medium)
			return rtn;
		rtn += 0.00000048961 * (4.43390206741 +  647.01083331480 * t).Cos();
		rtn += 0.00000041373 * (3.15927770079 +  853.19638175200 * t).Cos();
		rtn += 0.00000028602 * (4.52978327558 +  210.11770170030 * t).Cos();
		rtn += 0.00000023969 * (1.11595912146 +   14.22709400160 * t).Cos();
		rtn += 0.00000020511 * (4.35095844197 +  217.23124870110 * t).Cos();
		rtn += 0.00000019532 * (5.30779711223 +  440.82528487760 * t).Cos();
		rtn += 0.00000018263 * (0.85391476786 +  110.20632121940 * t).Cos();
		rtn += 0.00000016840 * (5.68112084135 +  216.48048917570 * t).Cos();
		rtn += 0.00000015742 * (4.25767226302 +  103.09277421860 * t).Cos();
		rtn += 0.00000013613 * (2.99904334066 +  412.37109687440 * t).Cos();
		rtn += 0.00000011567 * (2.52679928410 +  529.69096509460 * t).Cos();
		rtn += 0.00000007963 * (3.31512423920 +  202.25339517410 * t).Cos();
		rtn += 0.00000006648 * (5.55714129949 +  209.36694217490 * t).Cos();
		rtn += 0.00000006599 * (0.28766025146 +  323.50541665740 * t).Cos();
		rtn += 0.00000006312 * (1.16121321336 +  117.31986822020 * t).Cos();
		rtn += 0.00000006192 * (3.61231886519 +  860.30992875280 * t).Cos();
		rtn += 0.00000005891 * (3.58260177246 +  309.27832265580 * t).Cos();
		rtn += 0.00000005590 * (2.47783944511 + 1066.49547719000 * t).Cos();
		rtn += 0.00000004231 * (3.02212363572 +  846.08283475120 * t).Cos();
		rtn += 0.00000003612 * (4.79935735435 +  625.67019231240 * t).Cos();
		rtn += 0.00000003398 * (3.76732731354 +  423.41679713830 * t).Cos();
		rtn += 0.00000003387 * (6.04222745633 +  234.63973644040 * t).Cos();
		rtn += 0.00000002831 * (4.81642822334 +  429.77958461370 * t).Cos();
		rtn += 0.00000002817 * (4.47516563908 +  654.12438031560 * t).Cos();
		rtn += 0.00000002610 * (3.29126967191 +   95.97922721780 * t).Cos();
		rtn += 0.00000002578 * (5.63610668746 +  735.87651353180 * t).Cos();
		rtn += 0.00000002573 * (0.22467245054 +  522.57741809380 * t).Cos();
		rtn += 0.00000002419 * (0.02986335489 +  415.55249061210 * t).Cos();
		rtn += 0.00000002304 * (6.25081073546 +  330.61896365820 * t).Cos();
		rtn += 0.00000002112 * (4.55964179603 +  422.66603761290 * t).Cos();
		rtn += 0.00000001814 * (5.05675881426 +  277.03499374140 * t).Cos();
		rtn += 0.00000001758 * (5.53430456858 +  536.80451209540 * t).Cos();
		rtn += 0.00000001607 * (5.53599550100 +  224.34479570190 * t).Cos();
		rtn += 0.00000001550 * (5.60375604692 +  223.59403617650 * t).Cos();
		rtn += 0.00000001457 * (4.47767649852 +  430.53034413910 * t).Cos();
		rtn += 0.00000001231 * (0.25115931880 +    3.93215326310 * t).Cos();
		rtn += 0.00000001172 * (4.71017775994 +  203.00415469950 * t).Cos();
		rtn += 0.00000001105 * (1.01595427676 +   21.34064100240 * t).Cos();
		rtn += 0.00000000939 * (1.35429452093 +  742.99006053260 * t).Cos();
		rtn += 0.00000000868 * (4.84623483952 +  949.17560896980 * t).Cos();
		rtn += 0.00000000810 * (0.46198177342 +  515.46387109300 * t).Cos();
		rtn += 0.00000000712 * (6.05964117622 +   11.04570026390 * t).Cos();
		rtn += 0.00000000712 * (4.45550701473 +  191.95845443560 * t).Cos();
		rtn += 0.00000000698 * (2.91371419321 + 1073.60902419080 * t).Cos();
		rtn += 0.00000000694 * (5.23748122403 +  447.93883187840 * t).Cos();
		rtn += 0.00000000693 * (6.03599130692 +  124.43341522100 * t).Cos();
		rtn += 0.00000000690 * (5.44243765037 +  437.64389113990 * t).Cos();
		rtn += 0.00000000669 * (0.08457977809 +  215.74677599280 * t).Cos();
		rtn += 0.00000000604 * (2.95749705544 +   88.86568021700 * t).Cos();
		rtn += 0.00000000589 * (5.79268515755 +   63.73589830340 * t).Cos();
		rtn += 0.00000000579 * (0.65329445948 +    3.18139373770 * t).Cos();
		rtn += 0.00000000526 * (2.24947851818 + 1059.38193018920 * t).Cos();
		rtn += 0.00000000519 * (1.76641574095 + 1279.79457262800 * t).Cos();
		rtn += 0.00000000511 * (2.86838724347 +  408.43894361130 * t).Cos();
		rtn += 0.00000000503 * (5.73762297081 +  728.76296653100 * t).Cos();
		rtn += 0.00000000494 * (4.04363805503 +  490.33408917940 * t).Cos();
		rtn += 0.00000000482 * (4.68234512154 +  838.96928775040 * t).Cos();
		rtn += 0.00000000458 * (1.17998315936 +  210.85141488320 * t).Cos();
		rtn += 0.00000000404 * (4.58953258519 +  302.16477565500 * t).Cos();
		rtn += 0.00000000380 * (5.28045750432 + 1052.26838318840 * t).Cos();
		rtn += 0.00000000377 * (5.20131800999 +   74.78159856730 * t).Cos();
		rtn += 0.00000000328 * (0.11893501088 +  956.28915597060 * t).Cos();
		rtn += 0.00000000309 * (5.44921175960 +  543.91805909620 * t).Cos();
		rtn += 0.00000000290 * (3.99300398632 + 1162.47470440780 * t).Cos();
		rtn += 0.00000000288 * (1.32449995239 +  203.73786788240 * t).Cos();
		rtn += 0.00000000262 * (2.04320741578 + 1471.75302706360 * t).Cos();
		rtn += 0.00000000259 * (3.76206113036 +  635.96513305090 * t).Cos();
		rtn += 0.00000000257 * (3.69107889837 +  867.42347575360 * t).Cos();
		rtn += 0.00000000254 * (0.16694559092 +  195.13984817330 * t).Cos();
		rtn += 0.00000000246 * (5.62469599682 +  351.81659230870 * t).Cos();
		rtn += 0.00000000238 * (4.02925601887 +  643.07868005170 * t).Cos();
		rtn += 0.00000000238 * (0.49997895983 +   10.29494073850 * t).Cos();
		rtn += 0.00000000237 * (1.27761853769 +  231.45834270270 * t).Cos();
		rtn += 0.00000000229 * (4.19748765966 + 1265.56747862640 * t).Cos();
		rtn += 0.00000000220 * (1.03443668151 +  483.22054217860 * t).Cos();
		rtn += 0.00000000217 * (4.65210162713 +  750.10360753340 * t).Cos();
		rtn += 0.00000000191 * (0.17807919948 +  628.85158605010 * t).Cos();
		rtn += 0.00000000183 * (3.38184740572 +  636.71589257630 * t).Cos();
		rtn += 0.00000000172 * (3.83173494030 + 1581.95934828300 * t).Cos();
		rtn += 0.00000000150 * (5.71949902293 +  618.55664531160 * t).Cos();
		rtn += 0.00000000149 * (0.85459831932 + 1375.77379984580 * t).Cos();
		rtn += 0.00000000143 * (2.31969979791 +   18.15924726470 * t).Cos();
		rtn += 0.00000000137 * (5.50046852846 + 1169.58825140860 * t).Cos();
		rtn += 0.00000000136 * (3.38453909352 + 1155.36115740700 * t).Cos();
		rtn += 0.00000000131 * (0.11496484259 + 1898.35121793960 * t).Cos();
		rtn += 0.00000000125 * (4.82446274394 +  436.89313161450 * t).Cos();
		rtn += 0.00000000120 * (3.70151294359 +  416.30325013750 * t).Cos();
		rtn += 0.00000000120 * (3.26968058035 + 1478.86657406440 * t).Cos();
		rtn += 0.00000000111 * (0.11975665259 +  831.85574074960 * t).Cos();
		rtn += 0.00000000099 * (4.57241894541 +  643.82943957710 * t).Cos();
		rtn += 0.00000000095 * (4.92115458463 +  650.94298657790 * t).Cos();
		rtn += 0.00000000090 * (2.09300085806 +  621.73803904930 * t).Cos();
		rtn += 0.00000000089 * (2.54351587616 +   85.82729883120 * t).Cos();
		rtn += 0.00000000085 * (0.18997660997 + 1258.45393162560 * t).Cos();
		rtn += 0.00000000081 * (1.16732337173 +  217.96496188400 * t).Cos();
		rtn += 0.00000000080 * (5.09103451442 +  340.77089204480 * t).Cos();
		rtn += 0.00000000078 * (3.17395501851 +  497.44763618020 * t).Cos();
		rtn += 0.00000000072 * (5.47328223678 +  337.73251065900 * t).Cos();
		return rtn;
	}

	// MSaturn.B3(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 3. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 3. Ordnung.</returns>
	private static double B3(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)
			return rtn;

		// Terme aufsummieren
		rtn += 0.00000666252 * (1.99006340181 +  213.29909543800 * t).Cos();
		rtn += 0.00000632350 * (5.69778316807 +  206.18554843720 * t).Cos();
		rtn += 0.00000398051 * (0.00000000000 +    0.00000000000 * t).Cos();
		rtn += 0.00000187838 * (4.33779804809 +  220.41264243880 * t).Cos();
		rtn += 0.00000091884 * (4.84104208217 +  419.48464387520 * t).Cos();
		rtn += 0.00000051548 * (3.42149490328 +  433.71173787680 * t).Cos();
		if(value == EPrecision.Medium)
			return rtn;
		rtn += 0.00000042369 * (2.38073239056 +  426.59819087600 * t).Cos();
		rtn += 0.00000025661 * (4.40167213109 +  227.52618943960 * t).Cos();
		rtn += 0.00000020551 * (5.85313509872 +  199.07200143640 * t).Cos();
		rtn += 0.00000018081 * (1.99321433229 +  639.89728631400 * t).Cos();
		rtn += 0.00000010874 * (5.37344546547 +    7.11354700080 * t).Cos();
		rtn += 0.00000009590 * (2.54901825866 +  647.01083331480 * t).Cos();
		rtn += 0.00000007085 * (3.45518372721 +  316.39186965660 * t).Cos();
		rtn += 0.00000006002 * (4.80055225135 +  632.78373931320 * t).Cos();
		rtn += 0.00000005778 * (0.01680378777 +  210.11770170030 * t).Cos();
		rtn += 0.00000005542 * (3.51756747774 +  440.82528487760 * t).Cos();
		rtn += 0.00000004881 * (5.63719730884 +   14.22709400160 * t).Cos();
		rtn += 0.00000004501 * (1.22424419010 +  853.19638175200 * t).Cos();
		rtn += 0.00000003548 * (4.71299370890 +  412.37109687440 * t).Cos();
		rtn += 0.00000002851 * (0.62679207578 +  103.09277421860 * t).Cos();
		rtn += 0.00000002173 * (3.71982274459 +  216.48048917570 * t).Cos();
		rtn += 0.00000001991 * (6.10867071657 +  217.23124870110 * t).Cos();
		rtn += 0.00000001435 * (1.69177141453 +  860.30992875280 * t).Cos();
		rtn += 0.00000001217 * (4.30778838827 +  234.63973644040 * t).Cos();
		rtn += 0.00000001157 * (5.75027789902 +  309.27832265580 * t).Cos();
		rtn += 0.00000000897 * (2.65577866867 +  654.12438031560 * t).Cos();
		rtn += 0.00000000795 * (5.69026441157 +  117.31986822020 * t).Cos();
		rtn += 0.00000000773 * (5.48361981990 +  202.25339517410 * t).Cos();
		rtn += 0.00000000733 * (0.59842720676 + 1066.49547719000 * t).Cos();
		rtn += 0.00000000713 * (0.21700311697 +  625.67019231240 * t).Cos();
		rtn += 0.00000000509 * (2.86079833766 +  429.77958461370 * t).Cos();
		rtn += 0.00000000505 * (4.51905764563 +  323.50541665740 * t).Cos();
		rtn += 0.00000000462 * (4.17742567173 +  529.69096509460 * t).Cos();
		rtn += 0.00000000390 * (6.11288036049 +  191.95845443560 * t).Cos();
		rtn += 0.00000000384 * (4.48187414769 +  330.61896365820 * t).Cos();
		rtn += 0.00000000379 * (3.74436004151 +  223.59403617650 * t).Cos();
		rtn += 0.00000000377 * (5.25624813434 +   95.97922721780 * t).Cos();
		rtn += 0.00000000367 * (5.03190929680 +  846.08283475120 * t).Cos();
		rtn += 0.00000000332 * (5.49370890570 +   21.34064100240 * t).Cos();
		rtn += 0.00000000305 * (5.97746884029 +  302.16477565500 * t).Cos();
		rtn += 0.00000000284 * (0.66224572127 +  203.00415469950 * t).Cos();
		rtn += 0.00000000281 * (1.14133888637 +  735.87651353180 * t).Cos();
		rtn += 0.00000000258 * (3.69110118716 +  447.93883187840 * t).Cos();
		rtn += 0.00000000245 * (5.81618253250 +  423.41679713830 * t).Cos();
		rtn += 0.00000000241 * (1.70335120180 +  522.57741809380 * t).Cos();
		rtn += 0.00000000231 * (4.15697626494 +  110.20632121940 * t).Cos();
		rtn += 0.00000000204 * (1.54683820621 +  209.36694217490 * t).Cos();
		rtn += 0.00000000194 * (4.21193801453 +  124.43341522100 * t).Cos();
		rtn += 0.00000000151 * (3.82010884134 +  536.80451209540 * t).Cos();
		rtn += 0.00000000145 * (4.79689259614 +   88.86568021700 * t).Cos();
		rtn += 0.00000000110 * (2.21197473966 +  515.46387109300 * t).Cos();
		rtn += 0.00000000100 * (0.03596545368 +  949.17560896980 * t).Cos();
		rtn += 0.00000000097 * (0.91303450276 + 1073.60902419080 * t).Cos();
		rtn += 0.00000000085 * (5.11102520704 +    3.93215326310 * t).Cos();
		rtn += 0.00000000085 * (1.18898817378 +  728.76296653100 * t).Cos();
		rtn += 0.00000000084 * (4.10158366806 +  224.34479570190 * t).Cos();
		rtn += 0.00000000084 * (2.53842533109 +  422.66603761290 * t).Cos();
		rtn += 0.00000000077 * (6.04074586787 +  838.96928775040 * t).Cos();
		return rtn;
	}

	// MSaturn.B4(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 4. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 4. Ordnung.</returns>
	private static double B4(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)
			return rtn;

		// Terme aufsummieren
		rtn += 0.00000080384 * (1.11918414679 + 206.18554843720 * t).Cos();
		if(value == EPrecision.Medium)
			return rtn;
		rtn += 0.00000031660 * (3.12218745098 + 213.29909543800 * t).Cos();
		rtn += 0.00000017143 * (2.48073200414 + 220.41264243880 * t).Cos();
		rtn += 0.00000011844 * (3.14159265359 +   0.00000000000 * t).Cos();
		rtn += 0.00000009005 * (0.38441424927 + 419.48464387520 * t).Cos();
		rtn += 0.00000006164 * (1.56186379537 + 433.71173787680 * t).Cos();
		rtn += 0.00000004775 * (2.63498295487 + 227.52618943960 * t).Cos();
		rtn += 0.00000004660 * (1.28235639570 + 199.07200143640 * t).Cos();
		rtn += 0.00000001487 * (1.43096671616 + 426.59819087600 * t).Cos();
		rtn += 0.00000001424 * (0.66988083613 + 647.01083331480 * t).Cos();
		rtn += 0.00000001145 * (1.72041928134 + 440.82528487760 * t).Cos();
		rtn += 0.00000001075 * (6.18092274059 + 639.89728631400 * t).Cos();
		rtn += 0.00000000682 * (3.84841098180 +  14.22709400160 * t).Cos();
		rtn += 0.00000000655 * (3.49486258327 +   7.11354700080 * t).Cos();
		rtn += 0.00000000509 * (0.31432285584 + 412.37109687440 * t).Cos();
		rtn += 0.00000000456 * (0.47338193402 + 632.78373931320 * t).Cos();
		rtn += 0.00000000343 * (5.86413875355 + 853.19638175200 * t).Cos();
		rtn += 0.00000000270 * (2.50125594913 + 234.63973644040 * t).Cos();
		rtn += 0.00000000236 * (2.11084590211 + 210.11770170030 * t).Cos();
		rtn += 0.00000000197 * (5.39156324804 + 316.39186965660 * t).Cos();
		rtn += 0.00000000172 * (6.09682874401 + 860.30992875280 * t).Cos();
		rtn += 0.00000000159 * (5.95049154821 + 216.48048917570 * t).Cos();
		rtn += 0.00000000115 * (5.03884718594 + 117.31986822020 * t).Cos();
		rtn += 0.00000000115 * (0.44589613974 + 110.20632121940 * t).Cos();
		rtn += 0.00000000112 * (0.85526419268 + 654.12438031560 * t).Cos();
		rtn += 0.00000000100 * (1.98534903594 + 625.67019231240 * t).Cos();
		return rtn;
	}

	// MSaturn.B5(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 5. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 5. Ordnung.</returns>
	private static double B5(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)
			return rtn;
		if(value == EPrecision.Medium)
			return rtn;

		// Terme aufsummieren
		rtn += 0.00000007895 * (2.81927558645 + 206.18554843720 * t).Cos();
		rtn += 0.00000001014 * (0.51187210270 + 220.41264243880 * t).Cos();
		rtn += 0.00000000967 * (3.14159265359 +   0.00000000000 * t).Cos();
		rtn += 0.00000000772 * (2.99484124049 + 199.07200143640 * t).Cos();
		rtn += 0.00000000588 * (0.78008666397 + 227.52618943960 * t).Cos();
		rtn += 0.00000000583 * (5.96456944075 + 433.71173787680 * t).Cos();
		rtn += 0.00000000445 * (2.38630799074 + 419.48464387520 * t).Cos();
		rtn += 0.00000000098 * (5.10622131539 + 647.01083331480 * t).Cos();
		rtn += 0.00000000091 * (5.81659714144 +   7.11354700080 * t).Cos();
		rtn += 0.00000000089 * (0.58396864530 + 213.29909543800 * t).Cos();
		rtn += 0.00000000088 * (6.17828532308 + 440.82528487760 * t).Cos();
		return rtn;
	}

	// MSaturn.Latitude(EPrecision)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.</returns>
	public static double Latitude(EPrecision value)
	{
		// Lokale Felder einrichten
		double jd = DateTime.Now.ToJdn();
		return MSaturn.Latitude(value, jd);
	}

	// MSaturn.Latitude(EPrecision, double)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="jd">Julianische Tageszahl.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.</returns>
	public static double Latitude(EPrecision value, double jd)
	{
		// Lokale Felder einrichten
		double t  = (jd - MCalendar.Jdn20000101) / 365250.0; // Jahrhundertbruchteil
		double b0 = MSaturn.B0(value, t);
		double b1 = MSaturn.B1(value, t);
		double b2 = MSaturn.B2(value, t);
		double b3 = MSaturn.B3(value, t);
		double b4 = MSaturn.B4(value, t);
		double b5 = MSaturn.B5(value, t);

		// Breite berechnen
		return MMath.Polynome(t, b0, b1, b2, b3, b4, b5);
	}
}
