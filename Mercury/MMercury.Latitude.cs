using Acamat.LCore;
using Acamat.LMath;
using System;

namespace Acamat.LCalendar;

/// <summary>
/// Bündelt Berechnungen zum Merkur.
/// </summary>
public static partial class MMercury
{
	// ------------------- //
	// Felder und Methoden //
	// ------------------- //
	// MMercury.B0(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 0. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 0. Ordnung.</returns>
	private static double B0(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.11737528962 * (1.98357498767 +  26087.90314157420 * t).Cos();
		rtn += 0.02388076996 * (5.03738959685 +  52175.80628314840 * t).Cos();
		rtn += 0.01222839532 * (3.14159265359 +      0.00000000000 * t).Cos();
		rtn += 0.00543251810 * (1.79644363963 +  78263.70942472259 * t).Cos();
		rtn += 0.00129778770 * (4.83232503961 + 104351.61256629678 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00031866927 * (1.58088495667 + 130439.51570787099 * t).Cos();
		rtn += 0.00007963301 * (4.60972126348 + 156527.41884944518 * t).Cos();
		rtn += 0.00002014189 * (1.35324164694 + 182615.32199101939 * t).Cos();
		rtn += 0.00000513953 * (4.37835409309 + 208703.22513259358 * t).Cos();
		rtn += 0.00000208584 * (2.02020294153 +  24978.52458948080 * t).Cos();
		rtn += 0.00000207674 * (4.91772564073 +  27197.28169366760 * t).Cos();
		rtn += 0.00000132013 * (1.11908492283 + 234791.12827416777 * t).Cos();
		rtn += 0.00000121395 * (1.81271752059 +  53285.18483524180 * t).Cos();
		rtn += 0.00000100454 * (5.65684734206 +  20426.57109242200 * t).Cos();
		rtn += 0.00000099214 * (0.09391887097 +  51116.42435295920 * t).Cos();
		rtn += 0.00000094574 * (1.24184909234 +  31749.23519072640 * t).Cos();
		rtn += 0.00000091566 * (2.28163128692 +  25028.52121138500 * t).Cos();
		rtn += 0.00000084264 * (5.08510388314 +  51066.42773105500 * t).Cos();
		rtn += 0.00000078785 * (4.40725880000 +  57837.13833230060 * t).Cos();
		rtn += 0.00000077747 * (0.52557061749 +   1059.38193018920 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000049948 * (3.49752993688 +   5661.33204915220 * t).Cos();
		rtn += 0.00000046454 * (3.23739270829 +  77204.32749453338 * t).Cos();
		rtn += 0.00000044767 * (4.87849816734 +  79373.08797681599 * t).Cos();
		rtn += 0.00000040766 * (2.46558332165 +  46514.47423399620 * t).Cos();
		rtn += 0.00000037378 * (4.45768797944 +   4551.95349705880 * t).Cos();
		rtn += 0.00000035911 * (1.09057317869 +   1109.37855209340 * t).Cos();
		rtn += 0.00000034082 * (4.14209210575 + 260879.03141574195 * t).Cos();
		rtn += 0.00000031953 * (1.18516389747 +  83925.04147387479 * t).Cos();
		rtn += 0.00000031808 * (2.41474588439 +  47623.85278608960 * t).Cos();
		rtn += 0.00000030954 * (3.50328027210 +  21535.94964451540 * t).Cos();
		rtn += 0.00000028691 * (1.84828614269 +  77154.33087262919 * t).Cos();
		rtn += 0.00000025765 * (2.77593370583 +  27043.50288318280 * t).Cos();
		rtn += 0.00000025199 * (3.59062266460 +  27147.28507176339 * t).Cos();
		rtn += 0.00000020244 * (3.06833797229 +  51646.11531805379 * t).Cos();
		rtn += 0.00000020099 * (4.06593040301 +  25132.30339996560 * t).Cos();
		rtn += 0.00000018591 * (5.58427274440 +  73711.75592766379 * t).Cos();
		rtn += 0.00000017002 * (6.13739392193 +  41962.52073693740 * t).Cos();
		rtn += 0.00000016971 * (0.02791276551 + 103292.23063610759 * t).Cos();
		rtn += 0.00000015795 * (3.79629547258 +    529.69096509460 * t).Cos();
		rtn += 0.00000015577 * (6.07693643204 +  53131.40602475700 * t).Cos();
		rtn += 0.00000014984 * (1.64717994813 + 105460.99111839019 * t).Cos();
		rtn += 0.00000014186 * (0.33074185469 +  10213.28554621100 * t).Cos();
		rtn += 0.00000014011 * (5.52786452723 +  72602.37737557039 * t).Cos();
		rtn += 0.00000013044 * (3.48016433624 +  37410.56723987860 * t).Cos();
		rtn += 0.00000012866 * (4.81650804018 +  30639.85663863300 * t).Cos();
		rtn += 0.00000012448 * (4.05109331029 +  39609.65458316560 * t).Cos();
		rtn += 0.00000012309 * (3.16626298867 +  14765.23904326980 * t).Cos();
		rtn += 0.00000011261 * (0.11326534696 +  13521.75144159140 * t).Cos();
		rtn += 0.00000011152 * (0.55658461820 +  63498.47038145279 * t).Cos();
		rtn += 0.00000011047 * (5.79741510309 +  51749.20809227239 * t).Cos();
		rtn += 0.00000011042 * (4.23192662377 + 110012.94461544899 * t).Cos();
		rtn += 0.00000010717 * (1.53686240986 +  25661.30495069820 * t).Cos();
		rtn += 0.00000010460 * (5.82962163777 +  50586.73338786459 * t).Cos();
		rtn += 0.00000010213 * (2.87881017166 +  12566.15169998280 * t).Cos();
		rtn += 0.00000009924 * (0.94824584866 +  65697.55772473979 * t).Cos();
		rtn += 0.00000009774 * (1.66271762650 +  24498.83024629040 * t).Cos();
		rtn += 0.00000009412 * (1.82364886045 +  15874.61759536320 * t).Cos();
		rtn += 0.00000009175 * (6.16059719071 +  77734.01845962799 * t).Cos();
		rtn += 0.00000009123 * (4.88604394110 + 103242.23401420339 * t).Cos();
		rtn += 0.00000009011 * (1.04262074744 +    426.59819087600 * t).Cos();
		rtn += 0.00000008897 * (0.39691733779 +  53235.18821333759 * t).Cos();
		rtn += 0.00000008835 * (0.88128343813 + 286966.93455731616 * t).Cos();
		rtn += 0.00000008823 * (5.81343662067 +  11322.66409830440 * t).Cos();
		rtn += 0.00000008735 * (3.04132552652 +  68050.42387851159 * t).Cos();
		rtn += 0.00000008491 * (1.05130498445 +   1589.07289528380 * t).Cos();
		rtn += 0.00000008322 * (5.27157128800 +  25558.21217647960 * t).Cos();
		rtn += 0.00000008196 * (0.84015129448 +  51220.20654153979 * t).Cos();
		rtn += 0.00000007640 * (3.43584035231 +  36301.18868778519 * t).Cos();
		rtn += 0.00000007253 * (2.37179970828 +  99799.65906923798 * t).Cos();
		rtn += 0.00000007104 * (5.73557153523 +  26617.59410666880 * t).Cos();
		rtn += 0.00000006578 * (2.66741925057 +  52705.49724824299 * t).Cos();
		rtn += 0.00000005825 * (6.25072627414 +  33326.57873317420 * t).Cos();
		rtn += 0.00000005714 * (2.87339047644 +  79219.30916633119 * t).Cos();
		rtn += 0.00000005625 * (3.08030000230 + 129380.13377768178 * t).Cos();
		rtn += 0.00000005601 * (5.37190885150 +    955.59974160860 * t).Cos();
		rtn += 0.00000005468 * (1.43781223143 +  56727.75978020720 * t).Cos();
		rtn += 0.00000005295 * (1.35863387771 +  45892.73043315699 * t).Cos();
		rtn += 0.00000005116 * (2.67576280851 +  76674.63652943878 * t).Cos();
		rtn += 0.00000005035 * (2.66614676257 +  77837.11123384659 * t).Cos();
		rtn += 0.00000004965 * (3.47619946892 +  59414.48187474840 * t).Cos();
		rtn += 0.00000004762 * (4.68983196238 + 131548.89425996438 * t).Cos();
		rtn += 0.00000004475 * (2.28937952702 +  98690.28051714458 * t).Cos();
		rtn += 0.00000004247 * (6.23163402945 +  40853.14218484400 * t).Cos();
		rtn += 0.00000004080 * (4.01667499000 +  91785.46086631398 * t).Cos();
		rtn += 0.00000004064 * (1.46283079734 +  26107.57290247399 * t).Cos();
		rtn += 0.00000004063 * (5.64291749144 +  26068.23338067440 * t).Cos();
		rtn += 0.00000004047 * (5.95235957644 +  38654.05484155699 * t).Cos();
		rtn += 0.00000003971 * (5.44452771841 +   6283.07584999140 * t).Cos();
		rtn += 0.00000003877 * (3.60887633874 +  89586.37352302698 * t).Cos();
		rtn += 0.00000003694 * (2.75543227024 +   7238.67559160000 * t).Cos();
		rtn += 0.00000003681 * (0.47365215122 +  62389.09182935939 * t).Cos();
		rtn += 0.00000003558 * (0.98820289555 + 136100.84775702319 * t).Cos();
		rtn += 0.00000003348 * (5.91868911857 +  43071.89928903080 * t).Cos();
		rtn += 0.00000003290 * (2.93487892542 + 103821.92160120218 * t).Cos();
		rtn += 0.00000003285 * (0.39398081520 +  18849.22754997420 * t).Cos();
		rtn += 0.00000003215 * (6.11374633777 +  94138.32702008578 * t).Cos();
		rtn += 0.00000003115 * (0.74943919509 +  32858.61374281979 * t).Cos();
		rtn += 0.00000003100 * (3.35203735852 +  19804.82729158280 * t).Cos();
		rtn += 0.00000003048 * (0.67698362024 +   9103.90699411760 * t).Cos();
		rtn += 0.00000002908 * (4.06284172838 +  26514.50133245020 * t).Cos();
		rtn += 0.00000002877 * (3.45410696457 +  79323.09135491178 * t).Cos();
		rtn += 0.00000002800 * (3.88358619611 +  77308.10968311399 * t).Cos();
		rtn += 0.00000002799 * (1.63602212056 + 129330.13715577759 * t).Cos();
		rtn += 0.00000002791 * (2.76839978418 +  26091.78447693220 * t).Cos();
		rtn += 0.00000002787 * (4.34025817469 +  26084.02180621620 * t).Cos();
		rtn += 0.00000002767 * (4.12700796923 +  27676.97603685800 * t).Cos();
		rtn += 0.00000002747 * (5.75135788288 +  19317.19254032860 * t).Cos();
		rtn += 0.00000002710 * (4.31274902720 +  58946.51688439399 * t).Cos();
		rtn += 0.00000002680 * (4.48235268618 +  71980.63357473118 * t).Cos();
		rtn += 0.00000002676 * (5.73635682216 +  78793.40038981718 * t).Cos();
		rtn += 0.00000002663 * (1.70280488847 +  16983.99614745660 * t).Cos();
		rtn += 0.00000002535 * (3.05170623483 +  69159.80243060499 * t).Cos();
		rtn += 0.00000002484 * (5.42332204960 + 125887.56221081219 * t).Cos();
		rtn += 0.00000002297 * (3.90321251530 + 313054.83769889036 * t).Cos();
		rtn += 0.00000002265 * (3.34478937379 +  22645.32819660879 * t).Cos();
		rtn += 0.00000002211 * (4.65120210900 +  28306.66024576099 * t).Cos();
		rtn += 0.00000002097 * (2.09090732812 +  23869.14603738740 * t).Cos();
		rtn += 0.00000001961 * (5.94577427093 + 105307.21230790539 * t).Cos();
		rtn += 0.00000001922 * (4.43763124338 +  82815.66292178139 * t).Cos();
		rtn += 0.00000001912 * (5.78403850812 + 102762.53967101299 * t).Cos();
		rtn += 0.00000001817 * (5.74251490625 + 103925.01437542078 * t).Cos();
		rtn += 0.00000001771 * (6.12278757535 + 155468.03691925599 * t).Cos();
		rtn += 0.00000001680 * (3.42684715134 +   6770.71060124560 * t).Cos();
		rtn += 0.00000001667 * (4.51887419928 +  52195.47604404819 * t).Cos();
		rtn += 0.00000001653 * (2.41345886386 +  52156.13652224860 * t).Cos();
		rtn += 0.00000001604 * (4.52048871587 +   3442.57494496540 * t).Cos();
		rtn += 0.00000001585 * (0.23900687506 +  85502.38501632259 * t).Cos();
		rtn += 0.00000001515 * (1.72458115830 +  54394.56338733519 * t).Cos();
		rtn += 0.00000001477 * (4.73359545019 +  29530.47808653960 * t).Cos();
		rtn += 0.00000001469 * (1.44574704924 + 157636.79740153858 * t).Cos();
		rtn += 0.00000001443 * (2.73186009497 +  64741.95798313119 * t).Cos();
		rtn += 0.00000001433 * (3.03965981318 +  66941.04532641819 * t).Cos();
		rtn += 0.00000001430 * (0.78416943990 + 117873.36400788819 * t).Cos();
		rtn += 0.00000001377 * (0.59981573116 +  26080.78959457339 * t).Cos();
		rtn += 0.00000001375 * (5.32672767568 + 124778.18365871879 * t).Cos();
		rtn += 0.00000001370 * (3.45924813827 +  44937.13069154840 * t).Cos();
		rtn += 0.00000001357 * (3.17349203273 +  25874.60404613620 * t).Cos();
		rtn += 0.00000001345 * (0.31857167988 +  51535.90899683439 * t).Cos();
		rtn += 0.00000001325 * (3.57805811914 +  88476.99497093359 * t).Cos();
		rtn += 0.00000001250 * (2.33380858079 +  25448.00585526019 * t).Cos();
		rtn += 0.00000001196 * (2.09277609512 +  48733.23133818299 * t).Cos();
		rtn += 0.00000001194 * (0.36376300747 + 115674.27666460119 * t).Cos();
		rtn += 0.00000001146 * (5.40631829059 +    213.29909543800 * t).Cos();
		rtn += 0.00000001136 * (5.82023159264 +  52179.68761850640 * t).Cos();
		rtn += 0.00000001136 * (1.11057140999 +  52171.92494779040 * t).Cos();
		rtn += 0.00000001115 * (0.26092087309 +    639.89728631400 * t).Cos();
		rtn += 0.00000001100 * (4.02157761190 + 162188.75089859738 * t).Cos();
		rtn += 0.00000001096 * (5.01257889902 +      7.11354700080 * t).Cos();
		rtn += 0.00000001094 * (2.22755234371 +  32370.97899156560 * t).Cos();
		rtn += 0.00000001080 * (5.97835772937 + 129909.82474277639 * t).Cos();
		rtn += 0.00000001062 * (2.88132742088 + 120226.23016165999 * t).Cos();
		rtn += 0.00000001041 * (0.89365572198 +  52602.40447402440 * t).Cos();
		rtn += 0.00000001033 * (2.55563840213 +  45405.09568190280 * t).Cos();
		rtn += 0.00000001003 * (0.28769164324 +  25934.12433108940 * t).Cos();
		rtn += 0.00000001000 * (0.52457514920 +  26241.68195205900 * t).Cos();
		rtn += 0.00000000988 * (1.25815251981 +  98068.53671630539 * t).Cos();
		rtn += 0.00000000978 * (0.93067667928 +  53764.87917843220 * t).Cos();
		rtn += 0.00000000923 * (2.50170936928 + 104881.30353139139 * t).Cos();
		rtn += 0.00000000915 * (1.71247948367 +  51962.50718771040 * t).Cos();
		rtn += 0.00000000910 * (5.53568417425 +  58458.88213313979 * t).Cos();
		rtn += 0.00000000892 * (0.63710475446 + 103396.01282468818 * t).Cos();
		rtn += 0.00000000891 * (0.21542628779 + 105410.99449648599 * t).Cos();
		rtn += 0.00000000838 * (4.66556603681 + 155418.04029735178 * t).Cos();
		rtn += 0.00000000835 * (5.28205659749 +  50057.04242277000 * t).Cos();
		rtn += 0.00000000834 * (5.16159172473 +  49957.04917896160 * t).Cos();
		rtn += 0.00000000832 * (5.53506450006 +  74821.13447975718 * t).Cos();
		rtn += 0.00000000825 * (1.00561540075 +  85034.42002596818 * t).Cos();
		rtn += 0.00000000805 * (1.03425281191 +  23969.13928119580 * t).Cos();
		rtn += 0.00000000801 * (2.18220012579 + 151975.46535238638 * t).Cos();
		rtn += 0.00000000783 * (3.32304812554 +  26301.20223701220 * t).Cos();
		rtn += 0.00000000750 * (2.16183196338 +  52168.69273614759 * t).Cos();
		rtn += 0.00000000743 * (0.86945390288 +  52389.10537858640 * t).Cos();
		rtn += 0.00000000727 * (6.05394635764 +  95247.70557217918 * t).Cos();
		rtn += 0.00000000711 * (1.57780048955 +   2118.76386037840 * t).Cos();
		rtn += 0.00000000651 * (1.60040223342 +  26095.01668857500 * t).Cos();
		rtn += 0.00000000646 * (2.57803910757 + 128850.44281258718 * t).Cos();
		rtn += 0.00000000640 * (2.71738158564 + 131395.11544947959 * t).Cos();
		rtn += 0.00000000628 * (1.43868691098 +  55618.38122811380 * t).Cos();
		rtn += 0.00000000622 * (3.46102298068 +  77623.81213840858 * t).Cos();
		rtn += 0.00000000621 * (1.16576338077 + 108903.56606335558 * t).Cos();
		rtn += 0.00000000616 * (2.88990323867 +  52026.24308601380 * t).Cos();
		rtn += 0.00000000611 * (0.99677911598 +   2218.75710418680 * t).Cos();
		rtn += 0.00000000605 * (4.68164610499 +  52182.91983014920 * t).Cos();
		rtn += 0.00000000599 * (2.51123620954 + 130012.91751699499 * t).Cos();
		rtn += 0.00000000596 * (0.64492352990 + 339142.74084046457 * t).Cos();
		rtn += 0.00000000570 * (1.27714994259 +  78283.37918562238 * t).Cos();
		rtn += 0.00000000564 * (5.45416215614 +  78244.03966382280 * t).Cos();
		rtn += 0.00000000560 * (3.32834155275 +  51109.31080595839 * t).Cos();
		rtn += 0.00000000553 * (5.17654422678 +  25938.33994443960 * t).Cos();
		rtn += 0.00000000550 * (6.22077946049 +  51123.53789995999 * t).Cos();
		rtn += 0.00000000550 * (5.84636069235 +  25619.93815121980 * t).Cos();
		rtn += 0.00000000545 * (1.31029342517 +  26555.86813192860 * t).Cos();
		rtn += 0.00000000540 * (2.87570725847 + 181555.94006083018 * t).Cos();
		rtn += 0.00000000538 * (4.74592892110 +  80482.46652890938 * t).Cos();
		rtn += 0.00000000514 * (5.52495783925 +  25021.40766438420 * t).Cos();
		rtn += 0.00000000512 * (2.12021253064 +  25035.63475838580 * t).Cos();
		rtn += 0.00000000484 * (3.16177806139 +  38519.94579197200 * t).Cos();
		rtn += 0.00000000477 * (0.22606306742 +  71025.03383312259 * t).Cos();
		rtn += 0.00000000475 * (4.05390077061 +    149.56319713460 * t).Cos();
		rtn += 0.00000000472 * (3.35508518254 +  35191.81013569180 * t).Cos();
		rtn += 0.00000000467 * (5.77388878977 +  90829.86112470538 * t).Cos();
		rtn += 0.00000000464 * (3.26222495894 + 111590.28815789679 * t).Cos();
		rtn += 0.00000000461 * (3.82361162048 + 143961.26714946238 * t).Cos();
		rtn += 0.00000000460 * (5.34048307893 +  46848.33017476560 * t).Cos();
		rtn += 0.00000000450 * (6.09063658976 +  93028.94846799239 * t).Cos();
		rtn += 0.00000000447 * (3.57688571640 +   1066.49547719000 * t).Cos();
		rtn += 0.00000000441 * (4.91196768491 +  78050.41032928458 * t).Cos();
		rtn += 0.00000000441 * (0.67395966884 +   1052.26838318840 * t).Cos();
		rtn += 0.00000000440 * (4.47866581814 + 183724.70054311278 * t).Cos();
		rtn += 0.00000000435 * (5.12507754577 +  26081.27458267419 * t).Cos();
		rtn += 0.00000000435 * (1.98197259533 +  26094.53170047421 * t).Cos();
		rtn += 0.00000000435 * (0.36408526333 + 114564.89811250778 * t).Cos();
		rtn += 0.00000000433 * (1.55185163390 +  20760.42703319140 * t).Cos();
		rtn += 0.00000000423 * (2.08215220948 +  76144.94556434419 * t).Cos();
		rtn += 0.00000000418 * (3.57908956341 +  52329.58509363319 * t).Cos();
		rtn += 0.00000000412 * (2.07516355558 + 150866.08680029298 * t).Cos();
		rtn += 0.00000000409 * (0.56822912556 +  64607.84893354619 * t).Cos();
		rtn += 0.00000000408 * (3.34314470563 +  52022.02747266360 * t).Cos();
		rtn += 0.00000000393 * (3.23715146834 +  13655.86049117640 * t).Cos();
		rtn += 0.00000000390 * (2.58800166779 +  78267.59076008058 * t).Cos();
		rtn += 0.00000000388 * (4.16039183226 +  78259.82808936459 * t).Cos();
		rtn += 0.00000000375 * (5.33297275541 +  26011.63707029860 * t).Cos();
		rtn += 0.00000000365 * (3.19925143022 +  52099.54021187280 * t).Cos();
		rtn += 0.00000000364 * (2.32771554672 +  84546.78527471398 * t).Cos();
		rtn += 0.00000000352 * (3.27694758804 +  26727.80042788820 * t).Cos();
		rtn += 0.00000000350 * (5.62301652558 +  71492.99882347698 * t).Cos();
		rtn += 0.00000000350 * (3.39302729957 + 141762.17980617538 * t).Cos();
		rtn += 0.00000000346 * (4.14121333484 + 111122.32316754239 * t).Cos();
		rtn += 0.00000000344 * (5.02616143626 +  78256.59587772179 * t).Cos();
		rtn += 0.00000000339 * (1.58088572820 +  45494.58142974879 * t).Cos();
		rtn += 0.00000000338 * (3.95823396010 +  78690.30761559859 * t).Cos();
		rtn += 0.00000000338 * (2.73161573173 + 155997.72788435058 * t).Cos();
		rtn += 0.00000000335 * (5.92048177497 + 146314.13330323418 * t).Cos();
		rtn += 0.00000000331 * (0.76882559900 + 188276.65404017158 * t).Cos();
		rtn += 0.00000000327 * (5.69228054184 +  12432.04265039780 * t).Cos();
		rtn += 0.00000000325 * (4.30412080460 + 124156.43985787958 * t).Cos();
		rtn += 0.00000000317 * (3.98138369220 +  79852.78232000639 * t).Cos();
		rtn += 0.00000000315 * (4.00061444247 +  78477.00852016058 * t).Cos();
		rtn += 0.00000000295 * (5.53951004419 + 130969.20667296558 * t).Cos();
		rtn += 0.00000000286 * (5.40513646014 +   6681.22485339960 * t).Cos();
		rtn += 0.00000000284 * (1.93848296863 +  76044.95232053580 * t).Cos();
		rtn += 0.00000000283 * (3.65516534367 +     76.26607127560 * t).Cos();
		rtn += 0.00000000273 * (3.66726180240 + 129483.91596626239 * t).Cos();
		rtn += 0.00000000270 * (6.02010732963 +  78114.14622758799 * t).Cos();
		rtn += 0.00000000268 * (3.25051884036 + 131498.89763806018 * t).Cos();
		rtn += 0.00000000267 * (3.81778097058 +  19406.67828817460 * t).Cos();
		rtn += 0.00000000263 * (0.18743596408 +  77197.21394753258 * t).Cos();
		rtn += 0.00000000259 * (3.08241704780 +  77211.44104153418 * t).Cos();
		rtn += 0.00000000254 * (1.43735157085 +   5327.47610838280 * t).Cos();
		rtn += 0.00000000253 * (2.86398164134 + 121335.60871375339 * t).Cos();
		rtn += 0.00000000253 * (2.47481215159 +  72936.23331633979 * t).Cos();
		rtn += 0.00000000247 * (1.40414696612 + 181505.94343892598 * t).Cos();
		rtn += 0.00000000246 * (5.21552773120 + 178063.36849396059 * t).Cos();
		rtn += 0.00000000246 * (1.45343047775 +  78270.82297172339 * t).Cos();
		rtn += 0.00000000234 * (2.18979921440 + 100909.03762133139 * t).Cos();
		rtn += 0.00000000232 * (4.66776441683 +  28206.66700195260 * t).Cos();
		rtn += 0.00000000228 * (0.25677390582 + 103711.71527998279 * t).Cos();
		rtn += 0.00000000222 * (4.35573235377 +  52643.77127350280 * t).Cos();
		rtn += 0.00000000221 * (4.46394113791 +  81706.28436968799 * t).Cos();
		rtn += 0.00000000219 * (4.69799359762 +  71582.48457132299 * t).Cos();
		rtn += 0.00000000206 * (1.62004139707 + 106570.36967048359 * t).Cos();
		rtn += 0.00000000205 * (5.64507146979 + 154938.34595416138 * t).Cos();
		rtn += 0.00000000199 * (5.76674433704 + 157483.01859105378 * t).Cos();
		rtn += 0.00000000191 * (4.17749403686 + 134991.46920492979 * t).Cos();
		rtn += 0.00000000188 * (5.55333225508 + 156100.82065856918 * t).Cos();
		rtn += 0.00000000188 * (2.58568452037 +  51707.84129279399 * t).Cos();
		rtn += 0.00000000182 * (4.31488794636 + 104371.28232719658 * t).Cos();
		rtn += 0.00000000179 * (2.20248310353 + 104331.94280539699 * t).Cos();
		rtn += 0.00000000177 * (1.89461095130 +  52169.17772424839 * t).Cos();
		rtn += 0.00000000176 * (5.03409571975 +  52182.43484204840 * t).Cos();
		rtn += 0.00000000176 * (3.58325574282 +  48835.19385644859 * t).Cos();
		rtn += 0.00000000169 * (5.25194313253 + 102232.84870591838 * t).Cos();
		rtn += 0.00000000168 * (3.01264496377 +  23754.70674870219 * t).Cos();
		rtn += 0.00000000167 * (4.43520444137 +  25668.41849769900 * t).Cos();
		rtn += 0.00000000163 * (1.72109994467 + 104138.31347085879 * t).Cos();
		rtn += 0.00000000161 * (5.91020381915 + 207643.84320240439 * t).Cos();
		rtn += 0.00000000161 * (0.06514575292 +  78187.44335344699 * t).Cos();
		rtn += 0.00000000157 * (5.91615237188 +  51742.09454527159 * t).Cos();
		rtn += 0.00000000155 * (3.65976494728 + 365230.64398203876 * t).Cos();
		rtn += 0.00000000155 * (3.29540644622 +  97112.93697469679 * t).Cos();
		rtn += 0.00000000155 * (2.30861381490 +  51756.32163927320 * t).Cos();
		rtn += 0.00000000152 * (1.66425291176 +  25654.19140369739 * t).Cos();
		rtn += 0.00000000151 * (0.84016182050 +  26237.46633870879 * t).Cos();
		rtn += 0.00000000146 * (3.25675289634 +   3340.61242669980 * t).Cos();
		rtn += 0.00000000145 * (3.74606280935 +  27140.17152476259 * t).Cos();
		rtn += 0.00000000145 * (2.53141564902 + 116917.76426627958 * t).Cos();
		rtn += 0.00000000145 * (0.34814763869 +  78417.48823520739 * t).Cos();
		rtn += 0.00000000144 * (4.56326656247 +    419.48464387520 * t).Cos();
		rtn += 0.00000000143 * (0.57659923971 + 170049.17029103659 * t).Cos();
		rtn += 0.00000000143 * (0.36102957131 +  27154.39861876420 * t).Cos();
		rtn += 0.00000000142 * (5.87490895177 +  26037.90651966999 * t).Cos();
		rtn += 0.00000000141 * (4.76875897743 +  28421.09953444620 * t).Cos();
		rtn += 0.00000000140 * (1.22522976768 +  26137.89976347840 * t).Cos();
		rtn += 0.00000000140 * (0.11287334170 +  78109.93061423779 * t).Cos();
		rtn += 0.00000000137 * (2.85089329350 + 119116.85160956658 * t).Cos();
		rtn += 0.00000000136 * (3.41914767255 + 140652.80125408198 * t).Cos();
		rtn += 0.00000000130 * (6.26801612444 + 137678.19129947099 * t).Cos();
		rtn += 0.00000000130 * (1.22267912068 + 209812.60368468695 * t).Cos();
		rtn += 0.00000000130 * (0.93376066695 +    433.71173787680 * t).Cos();
		rtn += 0.00000000127 * (5.69552946334 +  44181.27784112419 * t).Cos();
		rtn += 0.00000000127 * (5.39590556187 + 110634.68841628819 * t).Cos();
		rtn += 0.00000000126 * (1.13823138141 +  51322.60990139639 * t).Cos();
		rtn += 0.00000000126 * (0.12477487369 +  52815.70356946240 * t).Cos();
		rtn += 0.00000000125 * (5.63666753628 + 104355.49390165479 * t).Cos();
		rtn += 0.00000000125 * (1.72822604057 + 104344.49901929598 * t).Cos();
		rtn += 0.00000000124 * (0.92716868075 + 104347.73123093879 * t).Cos();
		rtn += 0.00000000122 * (5.10611624534 + 176953.98994186718 * t).Cos();
		rtn += 0.00000000121 * (0.68099507149 +  50483.64061364600 * t).Cos();
		rtn += 0.00000000118 * (0.87294905519 + 137210.22630911658 * t).Cos();
		rtn += 0.00000000117 * (0.17401840597 +  61279.71327726600 * t).Cos();
		rtn += 0.00000000115 * (6.25299482333 +  39743.76363275060 * t).Cos();
		rtn += 0.00000000113 * (0.79353194356 +   7994.52844202420 * t).Cos();
		rtn += 0.00000000112 * (2.41390426449 +  97580.90196505119 * t).Cos();
		rtn += 0.00000000112 * (1.53691309669 +  18093.37469954999 * t).Cos();
		rtn += 0.00000000110 * (3.15687226733 +  25234.70675982219 * t).Cos();
		rtn += 0.00000000110 * (0.79294568581 + 104564.91166173479 * t).Cos();
		rtn += 0.00000000109 * (2.85465805569 +  24395.73747207180 * t).Cos();
		rtn += 0.00000000108 * (5.73587160710 +    853.19638175200 * t).Cos();
		rtn += 0.00000000108 * (0.78147749534 +  42153.96900304900 * t).Cos();
		rtn += 0.00000000105 * (0.73008875321 + 104778.21075717278 * t).Cos();
		rtn += 0.00000000104 * (6.08692240129 +  10021.83728009940 * t).Cos();
		rtn += 0.00000000104 * (5.35405285854 + 126996.94076290558 * t).Cos();
		rtn += 0.00000000103 * (5.77115680934 + 182085.63102592478 * t).Cos();
		rtn += 0.00000000103 * (2.67784306575 + 172402.03644480839 * t).Cos();
		rtn += 0.00000000102 * (2.16777222106 +  32769.12799497380 * t).Cos();
		rtn += 0.00000000102 * (1.11648927836 + 150244.34299945379 * t).Cos();
		rtn += 0.00000000101 * (6.24176236571 +   1692.16566950240 * t).Cos();
		rtn += 0.00000000101 * (1.49832461293 +  40565.25432477420 * t).Cos();
		rtn += 0.00000000100 * (6.03656277681 + 147423.51185532758 * t).Cos();
		rtn += 0.00000000099 * (3.80154992347 + 214364.55718174578 * t).Cos();
		rtn += 0.00000000099 * (0.11817727117 + 167850.08294774959 * t).Cos();
		rtn += 0.00000000098 * (3.04617186486 +  16066.06586147480 * t).Cos();
		rtn += 0.00000000098 * (0.74967522191 + 105940.68546158058 * t).Cos();
		rtn += 0.00000000098 * (0.55393078868 +  33967.99229491319 * t).Cos();
		rtn += 0.00000000096 * (3.26682732105 + 103285.11708910679 * t).Cos();
		rtn += 0.00000000096 * (2.81662615895 + 104202.04936916218 * t).Cos();
		rtn += 0.00000000095 * (3.08582674985 +  70269.18098269838 * t).Cos();
		rtn += 0.00000000094 * (6.16378269144 + 103299.34418310839 * t).Cos();
		rtn += 0.00000000094 * (2.21754829180 +  25973.46385288896 * t).Cos();
		rtn += 0.00000000093 * (3.27120904242 +  90695.75207512038 * t).Cos();
		rtn += 0.00000000092 * (4.88825714860 +  26202.34243025941 * t).Cos();
		rtn += 0.00000000091 * (4.99146967087 + 102132.85546210999 * t).Cos();
		rtn += 0.00000000091 * (2.28447351962 + 157057.10981453978 * t).Cos();
		rtn += 0.00000000089 * (3.91487126164 +  68241.87214462319 * t).Cos();
		rtn += 0.00000000089 * (2.82753100547 +  50579.61984086379 * t).Cos();
		rtn += 0.00000000089 * (0.51926466594 +  50593.84693486539 * t).Cos();
		rtn += 0.00000000089 * (0.41552735762 +  26164.16921284980 * t).Cos();
		rtn += 0.00000000088 * (4.54401955709 +  51543.02254383520 * t).Cos();
		rtn += 0.00000000088 * (3.90671333341 +     74.78159856730 * t).Cos();
		rtn += 0.00000000087 * (1.47928882834 +  97670.38771289718 * t).Cos();
		rtn += 0.00000000086 * (0.38069361609 +  74923.09699802278 * t).Cos();
		rtn += 0.00000000085 * (4.50666554965 + 104358.72611329758 * t).Cos();
		rtn += 0.00000000084 * (4.31852113132 +  60055.89543648739 * t).Cos();
		rtn += 0.00000000083 * (1.48347794862 +  54294.57014352679 * t).Cos();
		rtn += 0.00000000082 * (2.80078395016 +  52101.02468458109 * t).Cos();
		rtn += 0.00000000081 * (0.43168464249 + 155571.81910783658 * t).Cos();
		rtn += 0.00000000079 * (4.63574888508 +   2333.19639287200 * t).Cos();
		rtn += 0.00000000078 * (5.85412082904 +  18207.81398823521 * t).Cos();
		rtn += 0.00000000077 * (4.91602955543 +  24491.71669928959 * t).Cos();
		rtn += 0.00000000076 * (4.09119863738 +   1596.18644228460 * t).Cos();
		rtn += 0.00000000076 * (3.32839538947 + 129799.61842155698 * t).Cos();
		rtn += 0.00000000076 * (1.11684262920 +  78731.67441507700 * t).Cos();
		rtn += 0.00000000076 * (0.06676607630 + 157586.80077963437 * t).Cos();
		rtn += 0.00000000075 * (0.13973480485 +   1581.95934828300 * t).Cos();
		rtn += 0.00000000071 * (2.77560894834 +  77829.99768684579 * t).Cos();
		rtn += 0.00000000071 * (2.67007207774 +  24505.94379329119 * t).Cos();
		rtn += 0.00000000071 * (1.21551241620 + 107794.18751126219 * t).Cos();
		rtn += 0.00000000070 * (6.10702300469 +  52278.89905736699 * t).Cos();
		rtn += 0.00000000070 * (1.90064683191 + 204151.27163553478 * t).Cos();
		rtn += 0.00000000069 * (6.04001555481 +  29428.51556827400 * t).Cos();
		rtn += 0.00000000069 * (5.46721744006 +  77844.22478084739 * t).Cos();
		rtn += 0.00000000069 * (4.36673018646 + 207593.84658050018 * t).Cos();
		rtn += 0.00000000068 * (5.29164108644 +  26013.12154300690 * t).Cos();
		rtn += 0.00000000067 * (4.24719146625 +  14477.35118320000 * t).Cos();
		rtn += 0.00000000066 * (1.97272013972 +    632.78373931320 * t).Cos();
		rtn += 0.00000000066 * (1.34921841483 +  52808.59002246159 * t).Cos();
		rtn += 0.00000000066 * (0.61313044187 +  51639.00177105299 * t).Cos();
		rtn += 0.00000000066 * (0.49890308433 +  51951.46148744649 * t).Cos();
		rtn += 0.00000000062 * (6.11793881000 +  22747.29071487440 * t).Cos();
		rtn += 0.00000000060 * (5.62072757879 +  77795.74443436819 * t).Cos();
		rtn += 0.00000000060 * (4.94665488683 +  78257.08086582259 * t).Cos();
		rtn += 0.00000000060 * (4.23924716288 +  52225.80290505260 * t).Cos();
		rtn += 0.00000000060 * (1.79764830651 +  78270.33798362259 * t).Cos();
		rtn += 0.00000000060 * (0.43836944868 + 116783.65521669458 * t).Cos();
		rtn += 0.00000000059 * (5.90340687048 +    103.09277421860 * t).Cos();
		rtn += 0.00000000059 * (3.81127888964 +  76571.54375522019 * t).Cos();
		rtn += 0.00000000059 * (2.80000354604 +  25863.55834587229 * t).Cos();
		rtn += 0.00000000059 * (1.97971323674 +  51219.51712717779 * t).Cos();
		rtn += 0.00000000059 * (1.50474668065 +  26507.38778544939 * t).Cos();
		rtn += 0.00000000058 * (4.41262101447 +  26720.68688088739 * t).Cos();
		rtn += 0.00000000058 * (4.28286858594 +  77410.51304297059 * t).Cos();
		rtn += 0.00000000058 * (2.23088591593 +  52065.59996192899 * t).Cos();
		rtn += 0.00000000058 * (1.63810168022 +  51013.33157874059 * t).Cos();
		rtn += 0.00000000058 * (1.50494628165 +  54509.00267602040 * t).Cos();
		rtn += 0.00000000057 * (3.15657420172 + 104275.34649502118 * t).Cos();
		rtn += 0.00000000057 * (2.64616122722 +  52125.80966124419 * t).Cos();
		rtn += 0.00000000057 * (2.13355985608 + 128320.75184749259 * t).Cos();
		rtn += 0.00000000057 * (1.10422154948 + 130459.18546877075 * t).Cos();
		rtn += 0.00000000057 * (0.41985749035 +  23439.44831610119 * t).Cos();
		rtn += 0.00000000056 * (2.45288584577 + 181026.24909573558 * t).Cos();
		rtn += 0.00000000056 * (2.27809233545 + 182188.72380014337 * t).Cos();
		rtn += 0.00000000055 * (4.74493087072 +  49527.35145767539 * t).Cos();
		rtn += 0.00000000055 * (0.87548003173 + 161079.37234650398 * t).Cos();
		rtn += 0.00000000054 * (3.94217571152 +  52325.36948028299 * t).Cos();
		rtn += 0.00000000054 * (3.73359360369 +  24925.42843716640 * t).Cos();
		rtn += 0.00000000054 * (2.10504641371 +   2648.45482547300 * t).Cos();
		rtn += 0.00000000054 * (0.06047544079 +  52072.71350892979 * t).Cos();
		rtn += 0.00000000053 * (5.00852687358 +  25977.69682035479 * t).Cos();
		rtn += 0.00000000053 * (2.81579181250 +  55516.41870984820 * t).Cos();
		rtn += 0.00000000053 * (0.61042891791 +  53228.07466633679 * t).Cos();
		rtn += 0.00000000053 * (0.06419360550 +    536.80451209540 * t).Cos();
		rtn += 0.00000000052 * (4.17403886040 +  25131.61398560359 * t).Cos();
		rtn += 0.00000000052 * (3.31036935415 +   7880.08915333899 * t).Cos();
		rtn += 0.00000000052 * (0.17883872581 +    224.34479570190 * t).Cos();
		rtn += 0.00000000051 * (5.31772214752 +  66653.15746634839 * t).Cos();
		rtn += 0.00000000051 * (5.16823572193 + 130419.84594697120 * t).Cos();
		rtn += 0.00000000051 * (3.46813929041 +  53242.30176033840 * t).Cos();
		rtn += 0.00000000051 * (2.51127480556 + 183570.92173262799 * t).Cos();
		rtn += 0.00000000050 * (4.77326024770 +  25780.34552060460 * t).Cos();
		rtn += 0.00000000050 * (4.67814206741 + 130226.21661243298 * t).Cos();
		return rtn;
	}

	// MMercury.B1(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 1. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 1. Ordnung.</returns>
	private static double B1(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.00429151362 * ( 3.50169780393 +  26087.90314157420 * t).Cos();
		rtn += 0.00146233668 * ( 3.14159265359 +      0.00000000000 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00022675295 * ( 0.01515366880 +  52175.80628314840 * t).Cos();
		rtn += 0.00010894981 * ( 0.48540174006 +  78263.70942472259 * t).Cos();
		rtn += 0.00006353462 * ( 3.42943919982 + 104351.61256629678 * t).Cos();
		rtn += 0.00002495743 * ( 0.16051210665 + 130439.51570787099 * t).Cos();
		rtn += 0.00000859585 * ( 3.18452433647 + 156527.41884944518 * t).Cos();
		rtn += 0.00000277503 * ( 6.21020774184 + 182615.32199101939 * t).Cos();
		rtn += 0.00000086233 * ( 2.95244391822 + 208703.22513259358 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000027696 * ( 0.29068938889 +  27197.28169366760 * t).Cos();
		rtn += 0.00000026133 * ( 5.97708962692 + 234791.12827416777 * t).Cos();
		rtn += 0.00000012831 * ( 3.37744320558 +  53285.18483524180 * t).Cos();
		rtn += 0.00000012720 * ( 0.53792661684 +  24978.52458948080 * t).Cos();
		rtn += 0.00000007781 * ( 2.71768609268 + 260879.03141574195 * t).Cos();
		rtn += 0.00000007527 * ( 3.58305121268 +  51066.42773105500 * t).Cos();
		rtn += 0.00000006183 * ( 2.92383205004 +  31749.23519072640 * t).Cos();
		rtn += 0.00000005453 * ( 1.97318763801 +  51116.42435295920 * t).Cos();
		rtn += 0.00000003481 * ( 0.10739761667 +  79373.08797681599 * t).Cos();
		rtn += 0.00000003394 * ( 0.34761695275 +  77154.33087262919 * t).Cos();
		rtn += 0.00000002932 * ( 5.95430013169 +  57837.13833230060 * t).Cos();
		rtn += 0.00000002742 * ( 0.98758439378 +  25028.52121138500 * t).Cos();
		rtn += 0.00000002380 * ( 4.00213666550 +  21535.94964451540 * t).Cos();
		rtn += 0.00000002286 * ( 5.74036496396 + 286966.93455731616 * t).Cos();
		rtn += 0.00000002126 * ( 4.16352818018 +  47623.85278608960 * t).Cos();
		rtn += 0.00000001651 * ( 4.43606584681 +  27043.50288318280 * t).Cos();
		rtn += 0.00000001523 * ( 1.97926797181 +   5661.33204915220 * t).Cos();
		rtn += 0.00000001518 * ( 5.01636479848 +  77204.32749453338 * t).Cos();
		rtn += 0.00000001398 * ( 0.66375029294 +  20426.57109242200 * t).Cos();
		rtn += 0.00000001345 * ( 3.39193943388 + 103242.23401420339 * t).Cos();
		rtn += 0.00000001297 * ( 5.34251327744 +  37410.56723987860 * t).Cos();
		rtn += 0.00000001076 * ( 0.95624460335 +  50586.73338786459 * t).Cos();
		rtn += 0.00000001063 * ( 1.28486292967 +  53131.40602475700 * t).Cos();
		rtn += 0.00000001050 * ( 3.00944151152 +  26107.57290247399 * t).Cos();
		rtn += 0.00000000929 * ( 4.81159652409 +  51646.11531805379 * t).Cos();
		rtn += 0.00000000922 * ( 2.30268247092 +   1109.37855209340 * t).Cos();
		rtn += 0.00000000918 * ( 1.89988871166 +   1059.38193018920 * t).Cos();
		rtn += 0.00000000905 * ( 3.34776562702 +  25558.21217647960 * t).Cos();
		rtn += 0.00000000841 * ( 5.93206787810 +  26084.02180621620 * t).Cos();
		rtn += 0.00000000794 * ( 2.16868396183 +  63498.47038145279 * t).Cos();
		rtn += 0.00000000783 * ( 1.50962699410 +  41962.52073693740 * t).Cos();
		rtn += 0.00000000782 * ( 6.08817839271 +    529.69096509460 * t).Cos();
		rtn += 0.00000000755 * ( 4.10910637390 +  26068.23338067440 * t).Cos();
		rtn += 0.00000000739 * ( 3.05842748947 + 105460.99111839019 * t).Cos();
		rtn += 0.00000000731 * ( 0.92148918837 +  73711.75592766379 * t).Cos();
		rtn += 0.00000000721 * ( 1.16472614778 +  46514.47423399620 * t).Cos();
		rtn += 0.00000000703 * ( 2.22466530621 +  10213.28554621100 * t).Cos();
		rtn += 0.00000000681 * ( 1.40695567526 +  51749.20809227239 * t).Cos();
		rtn += 0.00000000669 * ( 4.10310179631 +  72602.37737557039 * t).Cos();
		rtn += 0.00000000665 * ( 2.47994200156 + 313054.83769889036 * t).Cos();
		rtn += 0.00000000638 * ( 1.16941585214 +  26091.78447693220 * t).Cos();
		rtn += 0.00000000633 * ( 3.07427024064 +  30639.85663863300 * t).Cos();
		rtn += 0.00000000616 * ( 5.95368982430 +  39609.65458316560 * t).Cos();
		rtn += 0.00000000610 * ( 2.96796433797 +  25132.30339996560 * t).Cos();
		rtn += 0.00000000495 * ( 0.14776350456 + 129330.13715577759 * t).Cos();
		rtn += 0.00000000494 * ( 0.07430556450 +  28306.66024576099 * t).Cos();
		rtn += 0.00000000474 * ( 2.61466823958 +  32858.61374281979 * t).Cos();
		rtn += 0.00000000470 * ( 5.04436148211 +  13521.75144159140 * t).Cos();
		rtn += 0.00000000467 * ( 5.56622114735 +   4551.95349705880 * t).Cos();
		rtn += 0.00000000459 * ( 5.81611579004 +  51220.20654153979 * t).Cos();
		rtn += 0.00000000436 * ( 1.46213785727 +  43071.89928903080 * t).Cos();
		rtn += 0.00000000433 * ( 2.10197184422 +  24498.83024629040 * t).Cos();
		rtn += 0.00000000430 * ( 3.91046377635 +  76674.63652943878 * t).Cos();
		rtn += 0.00000000424 * ( 0.29775934661 +   1589.07289528380 * t).Cos();
		rtn += 0.00000000383 * ( 6.05537830853 +  52195.47604404819 * t).Cos();
		rtn += 0.00000000378 * ( 5.09810178577 +  53235.18821333759 * t).Cos();
		rtn += 0.00000000369 * ( 4.43217995206 +  22645.32819660879 * t).Cos();
		rtn += 0.00000000364 * ( 5.87784809361 +  58946.51688439399 * t).Cos();
		rtn += 0.00000000358 * ( 6.14890038263 +  56727.75978020720 * t).Cos();
		rtn += 0.00000000352 * ( 5.92675293084 +  25661.30495069820 * t).Cos();
		rtn += 0.00000000352 * ( 0.87939481900 +  52156.13652224860 * t).Cos();
		rtn += 0.00000000346 * ( 2.03170085305 +  27147.28507176339 * t).Cos();
		rtn += 0.00000000345 * ( 0.84406679212 +  98690.28051714458 * t).Cos();
		rtn += 0.00000000338 * ( 1.55189200325 +  52705.49724824299 * t).Cos();
		rtn += 0.00000000335 * ( 0.55996605330 +  23869.14603738740 * t).Cos();
		rtn += 0.00000000329 * ( 2.59508442112 +  65697.55772473979 * t).Cos();
		rtn += 0.00000000314 * ( 2.40932519602 +  83925.04147387479 * t).Cos();
		rtn += 0.00000000310 * ( 2.69873876637 +  52171.92494779040 * t).Cos();
		rtn += 0.00000000308 * ( 3.30225015955 +  54394.56338733519 * t).Cos();
		rtn += 0.00000000291 * ( 4.22929240183 +  52179.68761850640 * t).Cos();
		rtn += 0.00000000286 * ( 2.39648280163 +  19804.82729158280 * t).Cos();
		rtn += 0.00000000263 * ( 4.64138649646 +  69159.80243060499 * t).Cos();
		rtn += 0.00000000253 * ( 4.21581970504 +  79219.30916633119 * t).Cos();
		rtn += 0.00000000251 * ( 1.90047504790 +  14765.23904326980 * t).Cos();
		rtn += 0.00000000248 * ( 2.34396840060 +  51535.90899683439 * t).Cos();
		rtn += 0.00000000245 * ( 4.26996032400 +  19317.19254032860 * t).Cos();
		rtn += 0.00000000239 * ( 3.35169081927 +  52168.69273614759 * t).Cos();
		rtn += 0.00000000235 * ( 5.08060846802 +  59414.48187474840 * t).Cos();
		rtn += 0.00000000234 * ( 2.51108507067 +  77308.10968311399 * t).Cos();
		rtn += 0.00000000229 * ( 5.16737598091 +  36301.18868778519 * t).Cos();
		rtn += 0.00000000223 * ( 2.96569885227 + 110012.94461544899 * t).Cos();
		rtn += 0.00000000215 * ( 4.50903357312 +  78793.40038981718 * t).Cos();
		rtn += 0.00000000212 * ( 5.33861521612 +  15874.61759536320 * t).Cos();
		rtn += 0.00000000210 * ( 3.16281965425 +  29530.47808653960 * t).Cos();
		rtn += 0.00000000207 * ( 2.89949362192 +      7.11354700080 * t).Cos();
		rtn += 0.00000000205 * ( 1.89888752382 +  79323.09135491178 * t).Cos();
		rtn += 0.00000000201 * ( 4.78711687782 +  40853.14218484400 * t).Cos();
		rtn += 0.00000000194 * ( 5.05904557922 +  51109.31080595839 * t).Cos();
		rtn += 0.00000000192 * ( 5.50218209050 + 339142.74084046457 * t).Cos();
		rtn += 0.00000000190 * ( 3.05043439775 +  27676.97603685800 * t).Cos();
		rtn += 0.00000000188 * ( 3.90664116889 +  48733.23133818299 * t).Cos();
		rtn += 0.00000000183 * ( 1.42148796836 +  77734.01845962799 * t).Cos();
		rtn += 0.00000000179 * ( 4.43018837604 +  77837.11123384659 * t).Cos();
		rtn += 0.00000000176 * ( 5.15204624857 +  89586.37352302698 * t).Cos();
		rtn += 0.00000000175 * ( 2.91183047213 +  82815.66292178139 * t).Cos();
		rtn += 0.00000000174 * ( 5.88326736492 + 136100.84775702319 * t).Cos();
		rtn += 0.00000000173 * ( 3.18496771460 + 155418.04029735178 * t).Cos();
		rtn += 0.00000000169 * ( 3.40273824751 +  25874.60404613620 * t).Cos();
		rtn += 0.00000000165 * ( 0.49123694380 +  25035.63475838580 * t).Cos();
		rtn += 0.00000000163 * ( 6.05484015332 +  26080.78959457339 * t).Cos();
		rtn += 0.00000000158 * ( 5.53788931475 +   9103.90699411760 * t).Cos();
		rtn += 0.00000000158 * ( 3.63030783882 +  49957.04917896160 * t).Cos();
		rtn += 0.00000000157 * ( 3.02451795123 +  52182.91983014920 * t).Cos();
		rtn += 0.00000000148 * ( 3.87588943419 + 124778.18365871879 * t).Cos();
		rtn += 0.00000000145 * ( 3.39803928124 +  45892.73043315699 * t).Cos();
		rtn += 0.00000000142 * ( 3.07209103150 +   3442.57494496540 * t).Cos();
		rtn += 0.00000000140 * ( 2.64826898848 +  16983.99614745660 * t).Cos();
		rtn += 0.00000000138 * ( 4.46503235172 +  51123.53789995999 * t).Cos();
		rtn += 0.00000000138 * ( 2.34393108627 +   1052.26838318840 * t).Cos();
		rtn += 0.00000000137 * ( 3.93191153638 +  78244.03966382280 * t).Cos();
		rtn += 0.00000000137 * ( 2.10984857727 +    426.59819087600 * t).Cos();
		rtn += 0.00000000136 * ( 0.24559658100 +  50057.04242277000 * t).Cos();
		rtn += 0.00000000135 * ( 4.66414339767 +  25448.00585526019 * t).Cos();
		rtn += 0.00000000134 * ( 5.35393682799 +    213.29909543800 * t).Cos();
		rtn += 0.00000000134 * ( 0.94930028730 +  25021.40766438420 * t).Cos();
		rtn += 0.00000000126 * ( 1.89432609260 +   1066.49547719000 * t).Cos();
		rtn += 0.00000000125 * ( 1.61827845372 + 129380.13377768178 * t).Cos();
		rtn += 0.00000000124 * ( 2.20590858584 +  33326.57873317420 * t).Cos();
		rtn += 0.00000000123 * ( 4.43265735200 +    639.89728631400 * t).Cos();
		rtn += 0.00000000122 * ( 1.04298624291 +  45405.09568190280 * t).Cos();
		rtn += 0.00000000121 * ( 5.90839328752 +  26095.01668857500 * t).Cos();
		rtn += 0.00000000119 * ( 3.64440622006 +  26617.59410666880 * t).Cos();
		rtn += 0.00000000116 * ( 0.50075235780 + 102762.53967101299 * t).Cos();
		rtn += 0.00000000115 * ( 2.81365851520 +  78283.37918562238 * t).Cos();
		rtn += 0.00000000115 * ( 1.57423656512 +  66941.04532641819 * t).Cos();
		rtn += 0.00000000114 * ( 4.47315411813 +  68050.42387851159 * t).Cos();
		rtn += 0.00000000112 * ( 0.87682090108 +  74821.13447975718 * t).Cos();
		rtn += 0.00000000111 * ( 1.00588061631 +  78267.59076008058 * t).Cos();
		rtn += 0.00000000107 * ( 5.73194510449 + 131548.89425996438 * t).Cos();
		rtn += 0.00000000107 * ( 4.79994153405 +   6770.71060124560 * t).Cos();
		rtn += 0.00000000106 * ( 6.15493608726 +  11322.66409830440 * t).Cos();
		rtn += 0.00000000101 * ( 5.52733987069 + 103396.01282468818 * t).Cos();
		rtn += 0.00000000100 * ( 1.90676485528 + 103292.23063610759 * t).Cos();
		rtn += 0.00000000100 * ( 1.21759895953 + 104881.30353139139 * t).Cos();
		rtn += 0.00000000099 * ( 6.18313188027 +  55618.38122811380 * t).Cos();
		rtn += 0.00000000098 * ( 5.49064814924 +  77623.81213840858 * t).Cos();
		rtn += 0.00000000096 * ( 5.10490831351 +  52389.10537858640 * t).Cos();
		rtn += 0.00000000096 * ( 0.01853371395 +  80482.46652890938 * t).Cos();
		rtn += 0.00000000095 * ( 5.74549458142 +  78259.82808936459 * t).Cos();
		rtn += 0.00000000093 * ( 6.00229475799 +  53764.87917843220 * t).Cos();
		rtn += 0.00000000093 * ( 0.15279056716 +  78256.59587772179 * t).Cos();
		rtn += 0.00000000092 * ( 2.55298032665 +  85034.42002596818 * t).Cos();
		rtn += 0.00000000091 * ( 4.67762120545 + 155468.03691925599 * t).Cos();
		rtn += 0.00000000090 * ( 5.82373560803 +    955.59974160860 * t).Cos();
		rtn += 0.00000000089 * ( 4.95684147986 + 105410.99449648599 * t).Cos();
		rtn += 0.00000000089 * ( 1.62820970873 +   6283.07584999140 * t).Cos();
		rtn += 0.00000000088 * ( 5.00176994115 +  38519.94579197200 * t).Cos();
		rtn += 0.00000000087 * ( 4.20722631983 +  12566.15169998280 * t).Cos();
		rtn += 0.00000000087 * ( 2.61787684648 + 162188.75089859738 * t).Cos();
		rtn += 0.00000000086 * ( 1.23375034376 +  26301.20223701220 * t).Cos();
		rtn += 0.00000000085 * ( 1.88852891739 +  77197.21394753258 * t).Cos();
		rtn += 0.00000000082 * ( 3.75652571856 +  99799.65906923798 * t).Cos();
		rtn += 0.00000000080 * ( 1.98564256640 +   7238.67559160000 * t).Cos();
		rtn += 0.00000000080 * ( 0.75440631101 +   2118.76386037840 * t).Cos();
		rtn += 0.00000000078 * ( 1.79664677749 +  23969.13928119580 * t).Cos();
		rtn += 0.00000000076 * ( 4.44230028342 +  38654.05484155699 * t).Cos();
		rtn += 0.00000000075 * ( 2.50722139185 +   2218.75710418680 * t).Cos();
		rtn += 0.00000000073 * ( 6.11603054445 +  78270.82297172339 * t).Cos();
		rtn += 0.00000000073 * ( 5.93728826025 + 108903.56606335558 * t).Cos();
		rtn += 0.00000000070 * ( 2.07147354168 +  25934.12433108940 * t).Cos();
		rtn += 0.00000000069 * ( 1.37976390686 +  77211.44104153418 * t).Cos();
		rtn += 0.00000000068 * ( 2.15267768357 +  64607.84893354619 * t).Cos();
		rtn += 0.00000000064 * ( 1.19785741966 +  64741.95798313119 * t).Cos();
		rtn += 0.00000000063 * ( 0.40577774917 +  76044.95232053580 * t).Cos();
		rtn += 0.00000000061 * ( 3.20728040856 +  76144.94556434419 * t).Cos();
		rtn += 0.00000000060 * ( 5.95179539253 +  18849.22754997420 * t).Cos();
		rtn += 0.00000000060 * ( 2.12727479557 +  88476.99497093359 * t).Cos();
		rtn += 0.00000000058 * ( 6.22316473811 + 181505.94343892598 * t).Cos();
		rtn += 0.00000000058 * ( 0.98126270514 +  51962.50718771040 * t).Cos();
		rtn += 0.00000000057 * ( 0.63495768344 + 150866.08680029298 * t).Cos();
		rtn += 0.00000000055 * ( 5.47526225139 +  62389.09182935939 * t).Cos();
		rtn += 0.00000000055 * ( 4.79762177368 +  94138.32702008578 * t).Cos();
		rtn += 0.00000000055 * ( 1.20462687751 +  95247.70557217918 * t).Cos();
		rtn += 0.00000000054 * ( 2.23964604878 +  44937.13069154840 * t).Cos();
		rtn += 0.00000000053 * ( 1.34424134476 +  51742.09454527159 * t).Cos();
		rtn += 0.00000000052 * ( 4.11944860444 +  71492.99882347698 * t).Cos();
		rtn += 0.00000000051 * ( 5.56459812422 +  52602.40447402440 * t).Cos();
		rtn += 0.00000000051 * ( 1.08082309375 +  25619.93815121980 * t).Cos();
		rtn += 0.00000000050 * ( 4.62948267835 +  93028.94846799239 * t).Cos();
		rtn += 0.00000000050 * ( 2.21530140501 + 365230.64398203876 * t).Cos();
		rtn += 0.00000000050 * ( 1.46644208786 + 120226.23016165999 * t).Cos();
		return rtn;
	}

	// MMercury.B2(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 2. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 2. Ordnung.</returns>
	private static double B2(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00011830934 * ( 4.79065585784 +  26087.90314157420 * t).Cos();
		rtn += 0.00001913516 * ( 0.00000000000 +      0.00000000000 * t).Cos();
		rtn += 0.00001044801 * ( 1.21216540536 +  52175.80628314840 * t).Cos();
		rtn += 0.00000266213 * ( 4.43418336532 +  78263.70942472259 * t).Cos();
		rtn += 0.00000170280 * ( 1.62255638714 + 104351.61256629678 * t).Cos();
		rtn += 0.00000096300 * ( 4.80023692017 + 130439.51570787099 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000044692 * ( 1.60758267772 + 156527.41884944518 * t).Cos();
		rtn += 0.00000018316 * ( 4.66904655377 + 182615.32199101939 * t).Cos();
		rtn += 0.00000006927 * ( 1.43404888930 + 208703.22513259358 * t).Cos();
		rtn += 0.00000002479 * ( 4.47495202955 + 234791.12827416777 * t).Cos();
		rtn += 0.00000001739 * ( 1.83080039600 +  27197.28169366760 * t).Cos();
		rtn += 0.00000000852 * ( 1.22749255198 + 260879.03141574195 * t).Cos();
		rtn += 0.00000000641 * ( 4.87358642253 +  53285.18483524180 * t).Cos();
		rtn += 0.00000000306 * ( 5.03912693671 +  24978.52458948080 * t).Cos();
		rtn += 0.00000000301 * ( 1.96098924430 +  51066.42773105500 * t).Cos();
		rtn += 0.00000000284 * ( 4.25874901943 + 286966.93455731616 * t).Cos();
		rtn += 0.00000000235 * ( 3.14549432371 +  51116.42435295920 * t).Cos();
		rtn += 0.00000000232 * ( 4.22847849119 +  31749.23519072640 * t).Cos();
		rtn += 0.00000000186 * ( 5.05207772442 +  77154.33087262919 * t).Cos();
		rtn += 0.00000000143 * ( 5.71074961492 +  21535.94964451540 * t).Cos();
		rtn += 0.00000000123 * ( 1.51066137419 +  79373.08797681599 * t).Cos();
		rtn += 0.00000000114 * ( 5.62232460770 +  27043.50288318280 * t).Cos();
		rtn += 0.00000000093 * ( 1.83776226489 + 103242.23401420339 * t).Cos();
		rtn += 0.00000000093 * ( 1.01040170383 + 313054.83769889036 * t).Cos();
		rtn += 0.00000000081 * ( 0.85802178989 +  57837.13833230060 * t).Cos();
		rtn += 0.00000000079 * ( 5.50027152752 +  47623.85278608960 * t).Cos();
		rtn += 0.00000000074 * ( 2.28645155343 +  50586.73338786459 * t).Cos();
		rtn += 0.00000000061 * ( 1.64891174657 +  20426.57109242200 * t).Cos();
		rtn += 0.00000000060 * ( 0.54679388547 +  37410.56723987860 * t).Cos();
		rtn += 0.00000000058 * ( 5.88387132512 +  77204.32749453338 * t).Cos();
		rtn += 0.00000000058 * ( 2.35944147105 +  53131.40602475700 * t).Cos();
		rtn += 0.00000000052 * ( 3.58488737294 +  25558.21217647960 * t).Cos();
		return rtn;
	}

	// MMercury.B3(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 3. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 3. Ordnung.</returns>
	private static double B3(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00000235423 * (0.35387524604 +  26087.90314157420 * t).Cos();
		rtn += 0.00000160537 * (0.00000000000 +      0.00000000000 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000018904 * (4.36275460261 +  52175.80628314840 * t).Cos();
		rtn += 0.00000006376 * (2.50715381439 +  78263.70942472259 * t).Cos();
		rtn += 0.00000004580 * (6.14257817571 + 104351.61256629678 * t).Cos();
		rtn += 0.00000003061 * (3.12497552681 + 130439.51570787099 * t).Cos();
		rtn += 0.00000001732 * (6.26642412058 + 156527.41884944518 * t).Cos();
		rtn += 0.00000000857 * (3.07673166705 + 182615.32199101939 * t).Cos();
		rtn += 0.00000000384 * (6.14815319932 + 208703.22513259358 * t).Cos();
		rtn += 0.00000000159 * (2.92437378320 + 234791.12827416777 * t).Cos();
		rtn += 0.00000000062 * (5.97292432097 + 260879.03141574195 * t).Cos();
		rtn += 0.00000000054 * (3.31612529961 +  27197.28169366760 * t).Cos();
		return rtn;
	}

	// MMercury.B4(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 4. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 4. Ordnung.</returns>
	private static double B4(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000004276 * (1.74579932115 +  26087.90314157420 * t).Cos();
		rtn += 0.00000001023 * (3.14159265359 +      0.00000000000 * t).Cos();
		rtn += 0.00000000425 * (4.03419509143 +  52175.80628314840 * t).Cos();
		rtn += 0.00000000257 * (0.20643590425 +  78263.70942472259 * t).Cos();
		rtn += 0.00000000116 * (3.75237354024 + 104351.61256629678 * t).Cos();
		rtn += 0.00000000073 * (1.18210375402 + 130439.51570787099 * t).Cos();
		rtn += 0.00000000051 * (4.54581086194 + 156527.41884944518 * t).Cos();
		return rtn;
	}

	// MMercury.B5(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 5. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 5. Ordnung.</returns>
	private static double B5(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000000106 * (3.94555784256 + 26087.90314157420 * t).Cos();
		rtn += 0.00000000075 * (3.14159265359 +     0.00000000000 * t).Cos();
		return rtn;
	}

	// MMercury.Latitude(EPrecision)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur aktuellen Systemzeit.</returns>
	public static double Latitude(EPrecision value)
	{
		// Lokale Felder einrichten
		double jd = DateTime.Now.ToJdn();
		return MMercury.Latitude(value, jd);
	}

	// MMercury.Latitude(EPrecision, double)
	/// <summary>
	/// Liefert die heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="jd">Julianische Tageszahl.</param>
	/// <returns>Heliozentrisch-ekliptikale Breite zur julianischen Tageszahl.</returns>
	public static double Latitude(EPrecision value, double jd)
	{
		// Lokale Felder einrichten
		double t  = (jd - MCalendar.Jdn20000101) / 365250.0; // Jahrhundertbruchteil
		double b0 = MMercury.B0(value, t);
		double b1 = MMercury.B1(value, t);
		double b2 = MMercury.B2(value, t);
		double b3 = MMercury.B3(value, t);
		double b4 = MMercury.B4(value, t);
		double b5 = MMercury.B5(value, t);

		// Breite berechnen
		return MMath.Polynome(t, b0, b1, b2, b3, b4, b5);
	}
}
