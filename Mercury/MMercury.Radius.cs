using Acamat.LCore;
using Acamat.LMath;
using System;

namespace Acamat.LCalendar;

public static partial class MMercury
{
	// ------------------- //
	// Felder und Methoden //
	// ------------------- //
	// MMercury.R0(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 0. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 0. Ordnung.</returns>
	private static double R0(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.39528271652 * (0.00000000000 +      0.00000000000 * t).Cos();
		rtn += 0.07834131817 * (6.19233722599 +  26087.90314157420 * t).Cos();
		rtn += 0.00795525557 * (2.95989690096 +  52175.80628314840 * t).Cos();
		rtn += 0.00121281763 * (6.01064153805 +  78263.70942472259 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00021921969 * (2.77820093975 + 104351.61256629678 * t).Cos();
		rtn += 0.00004354065 * (5.82894543257 + 130439.51570787099 * t).Cos();
		rtn += 0.00000918228 * (2.59650562598 + 156527.41884944518 * t).Cos();
		rtn += 0.00000289955 * (1.42441936951 +  25028.52121138500 * t).Cos();
		rtn += 0.00000260033 * (3.02817753482 +  27197.28169366760 * t).Cos();
		rtn += 0.00000201855 * (5.64725040350 + 182615.32199101939 * t).Cos();
		rtn += 0.00000201499 * (5.59227724202 +  31749.23519072640 * t).Cos();
		rtn += 0.00000141980 * (6.25264202645 +  24978.52458948080 * t).Cos();
		rtn += 0.00000100144 * (3.73435608689 +  21535.94964451540 * t).Cos();
		rtn += 0.00000077561 * (3.66972526976 +  20426.57109242200 * t).Cos();
		rtn += 0.00000075500 * (4.47428642962 +  51116.42435295920 * t).Cos();
		rtn += 0.00000066754 * (2.52520309182 +   5661.33204915220 * t).Cos();
		rtn += 0.00000063277 * (4.29905918105 +  25558.21217647960 * t).Cos();
		rtn += 0.00000062951 * (4.76588899933 +   1059.38193018920 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000048266 * (6.06824478778 +  53285.18483524180 * t).Cos();
		rtn += 0.00000045748 * (2.41480951648 + 208703.22513259358 * t).Cos();
		rtn += 0.00000044234 * (1.21957314874 +  15874.61759536320 * t).Cos();
		rtn += 0.00000040815 * (2.35882016415 +  57837.13833230060 * t).Cos();
		rtn += 0.00000037203 * (0.51733821470 +  47623.85278608960 * t).Cos();
		rtn += 0.00000035224 * (1.05917802674 +  27043.50288318280 * t).Cos();
		rtn += 0.00000033873 * (0.86381554651 +  25661.30495069820 * t).Cos();
		rtn += 0.00000030903 * (0.88366335532 +  24498.83024629040 * t).Cos();
		rtn += 0.00000030092 * (1.79500530627 +  37410.56723987860 * t).Cos();
		rtn += 0.00000028417 * (3.02063625668 +  51066.42773105500 * t).Cos();
		rtn += 0.00000026105 * (2.15021963174 +  39609.65458316560 * t).Cos();
		rtn += 0.00000021270 * (5.36857139841 +  13521.75144159140 * t).Cos();
		rtn += 0.00000019422 * (4.98378647655 +  10213.28554621100 * t).Cos();
		rtn += 0.00000018699 * (4.96496008403 +  11322.66409830440 * t).Cos();
		rtn += 0.00000017087 * (1.24077764194 +  77204.32749453338 * t).Cos();
		rtn += 0.00000016941 * (3.88765393402 +  26617.59410666880 * t).Cos();
		rtn += 0.00000016297 * (2.63293587817 +  19804.82729158280 * t).Cos();
		rtn += 0.00000015109 * (0.44510589948 +  46514.47423399620 * t).Cos();
		rtn += 0.00000015012 * (4.28173463507 +  41962.52073693740 * t).Cos();
		rtn += 0.00000013977 * (4.77056848793 +  33326.57873317420 * t).Cos();
		rtn += 0.00000013940 * (1.62573946865 +  27147.28507176339 * t).Cos();
		rtn += 0.00000013938 * (1.99984876578 +  25132.30339996560 * t).Cos();
		rtn += 0.00000013382 * (1.07657890477 +  51646.11531805379 * t).Cos();
		rtn += 0.00000012794 * (6.06437138766 +   1109.37855209340 * t).Cos();
		rtn += 0.00000012754 * (2.07613721222 +    529.69096509460 * t).Cos();
		rtn += 0.00000012069 * (2.84997619452 +  79373.08797681599 * t).Cos();
		rtn += 0.00000011933 * (2.36500939134 +   4551.95349705880 * t).Cos();
		rtn += 0.00000010612 * (5.46555460932 + 234791.12827416777 * t).Cos();
		rtn += 0.00000009491 * (0.83697007534 +  12566.15169998280 * t).Cos();
		rtn += 0.00000009379 * (5.41195286503 +  83925.04147387479 * t).Cos();
		rtn += 0.00000009069 * (1.21263611811 +  14765.23904326980 * t).Cos();
		rtn += 0.00000008853 * (3.87737694074 +  50586.73338786459 * t).Cos();
		rtn += 0.00000008492 * (3.56622930635 +  73711.75592766379 * t).Cos();
		rtn += 0.00000007653 * (3.91505031889 +  51749.20809227239 * t).Cos();
		rtn += 0.00000007499 * (2.44636811119 +  30639.85663863300 * t).Cos();
		rtn += 0.00000007463 * (5.53233943198 +  32858.61374281979 * t).Cos();
		rtn += 0.00000007215 * (1.17101960691 +  16983.99614745660 * t).Cos();
		rtn += 0.00000007109 * (5.32625264624 +    426.59819087600 * t).Cos();
		rtn += 0.00000006885 * (5.31108526630 +   1589.07289528380 * t).Cos();
		rtn += 0.00000006863 * (1.82313992707 +  36301.18868778519 * t).Cos();
		rtn += 0.00000006560 * (4.27818149213 +  43071.89928903080 * t).Cos();
		rtn += 0.00000006460 * (6.07127449283 +  77154.33087262919 * t).Cos();
		rtn += 0.00000005943 * (4.06893157254 +  53131.40602475700 * t).Cos();
		rtn += 0.00000005415 * (5.20028107807 +  65697.55772473979 * t).Cos();
		rtn += 0.00000005186 * (3.56743214904 +   6283.07584999140 * t).Cos();
		rtn += 0.00000004428 * (5.69109527379 +  45892.73043315699 * t).Cos();
		rtn += 0.00000004120 * (1.65386255382 +  25448.00585526019 * t).Cos();
		rtn += 0.00000004090 * (3.67593658710 +  22645.32819660879 * t).Cos();
		rtn += 0.00000004075 * (4.29142111073 + 103292.23063610759 * t).Cos();
		rtn += 0.00000003614 * (2.95861599353 +  28306.66024576099 * t).Cos();
		rtn += 0.00000003426 * (0.64911736234 +  52705.49724824299 * t).Cos();
		rtn += 0.00000003354 * (3.49345105494 +  72602.37737557039 * t).Cos();
		rtn += 0.00000003278 * (3.13863529552 +  25874.60404613620 * t).Cos();
		rtn += 0.00000003261 * (1.03195890028 +  68050.42387851159 * t).Cos();
		rtn += 0.00000003054 * (4.12578324522 +  77734.01845962799 * t).Cos();
		rtn += 0.00000003044 * (5.90613310181 + 105460.99111839019 * t).Cos();
		rtn += 0.00000002820 * (4.62628436074 +  18849.22754997420 * t).Cos();
		rtn += 0.00000002792 * (5.05148206806 +  51220.20654153979 * t).Cos();
		rtn += 0.00000002755 * (5.67587087632 +  26107.57290247399 * t).Cos();
		rtn += 0.00000002746 * (4.67880529205 +  53235.18821333759 * t).Cos();
		rtn += 0.00000002741 * (4.75427920262 +  63498.47038145279 * t).Cos();
		rtn += 0.00000002713 * (3.56874913980 +  26068.23338067440 * t).Cos();
		rtn += 0.00000002557 * (2.95114696617 +  26080.78959457339 * t).Cos();
		rtn += 0.00000002526 * (0.34535290139 +  23969.13928119580 * t).Cos();
		rtn += 0.00000002507 * (2.23312085627 + 260879.03141574195 * t).Cos();
		rtn += 0.00000002274 * (0.50173671332 +  32370.97899156560 * t).Cos();
		rtn += 0.00000002267 * (2.17941340037 + 110012.94461544899 * t).Cos();
		rtn += 0.00000002135 * (0.84621449019 +  76674.63652943878 * t).Cos();
		rtn += 0.00000002084 * (2.19427123968 +  26301.20223701220 * t).Cos();
		rtn += 0.00000002022 * (0.33828477567 +  99799.65906923798 * t).Cos();
		rtn += 0.00000001971 * (3.77455887616 +  19317.19254032860 * t).Cos();
		rtn += 0.00000001971 * (0.47407494310 +  48733.23133818299 * t).Cos();
		rtn += 0.00000001965 * (1.37420902653 +   7238.67559160000 * t).Cos();
		rtn += 0.00000001945 * (2.37383894182 +   6770.71060124560 * t).Cos();
		rtn += 0.00000001873 * (0.69327393635 +  26091.78447693220 * t).Cos();
		rtn += 0.00000001872 * (3.93046425037 +  38654.05484155699 * t).Cos();
		rtn += 0.00000001863 * (2.26591720786 +  26084.02180621620 * t).Cos();
		rtn += 0.00000001818 * (4.20870869718 +  25938.33994443960 * t).Cos();
		rtn += 0.00000001780 * (0.91702846577 +  79219.30916633119 * t).Cos();
		rtn += 0.00000001750 * (5.50651903992 +  56727.75978020720 * t).Cos();
		rtn += 0.00000001743 * (0.68269002122 +  77837.11123384659 * t).Cos();
		rtn += 0.00000001703 * (4.28965990785 +  40853.14218484400 * t).Cos();
		rtn += 0.00000001672 * (2.15275897581 +  26514.50133245020 * t).Cos();
		rtn += 0.00000001657 * (4.98021773372 +   9103.90699411760 * t).Cos();
		rtn += 0.00000001640 * (4.66281337712 +  25021.40766438420 * t).Cos();
		rtn += 0.00000001614 * (1.27565104562 +  25035.63475838580 * t).Cos();
		rtn += 0.00000001563 * (5.84795233948 +  26095.01668857500 * t).Cos();
		rtn += 0.00000001552 * (2.83910580545 + 103242.23401420339 * t).Cos();
		rtn += 0.00000001533 * (1.54503054415 +    955.59974160860 * t).Cos();
		rtn += 0.00000001525 * (2.15720744047 +  27676.97603685800 * t).Cos();
		rtn += 0.00000001436 * (0.05742216761 +  23869.14603738740 * t).Cos();
		rtn += 0.00000001389 * (4.85102048256 +  62389.09182935939 * t).Cos();
		rtn += 0.00000001249 * (1.97225274067 +  91785.46086631398 * t).Cos();
		rtn += 0.00000001160 * (1.73113341823 +  38519.94579197200 * t).Cos();
		rtn += 0.00000001105 * (4.55512109515 +  26011.63707029860 * t).Cos();
		rtn += 0.00000001041 * (2.78036322434 +    213.29909543800 * t).Cos();
		rtn += 0.00000001005 * (1.05898314860 + 129380.13377768178 * t).Cos();
		rtn += 0.00000000979 * (2.43870419667 +  71980.63357473118 * t).Cos();
		rtn += 0.00000000965 * (4.70784179954 +  51535.90899683439 * t).Cos();
		rtn += 0.00000000952 * (2.53604676495 +  29530.47808653960 * t).Cos();
		rtn += 0.00000000874 * (4.53679970936 +    639.89728631400 * t).Cos();
		rtn += 0.00000000853 * (0.56334001923 +  20760.42703319140 * t).Cos();
		rtn += 0.00000000828 * (2.88184821542 +  19406.67828817460 * t).Cos();
		rtn += 0.00000000797 * (0.26237215917 +  98690.28051714458 * t).Cos();
		rtn += 0.00000000783 * (3.69782403005 +  78793.40038981718 * t).Cos();
		rtn += 0.00000000782 * (3.25257254691 +  50057.04242277000 * t).Cos();
		rtn += 0.00000000773 * (2.67893222158 + 131548.89425996438 * t).Cos();
		rtn += 0.00000000772 * (4.08714349549 +  94138.32702008578 * t).Cos();
		rtn += 0.00000000734 * (0.89243669490 + 103821.92160120218 * t).Cos();
		rtn += 0.00000000705 * (4.73705371920 +  26241.68195205900 * t).Cos();
		rtn += 0.00000000691 * (6.19733262608 +  51962.50718771040 * t).Cos();
		rtn += 0.00000000676 * (4.50357599360 +  25934.12433108940 * t).Cos();
		rtn += 0.00000000668 * (3.73113394924 +  46848.33017476560 * t).Cos();
		rtn += 0.00000000635 * (4.87720838965 +  12432.04265039780 * t).Cos();
		rtn += 0.00000000635 * (1.81903685898 +  77308.10968311399 * t).Cos();
		rtn += 0.00000000622 * (1.05579535631 +  59414.48187474840 * t).Cos();
		rtn += 0.00000000619 * (1.44855037685 +  79323.09135491178 * t).Cos();
		rtn += 0.00000000602 * (5.28399057704 + 286966.93455731616 * t).Cos();
		rtn += 0.00000000577 * (5.85654734429 +   2118.76386037840 * t).Cos();
		rtn += 0.00000000563 * (5.22994296186 + 136100.84775702319 * t).Cos();
		rtn += 0.00000000559 * (2.44355554028 +  52195.47604404819 * t).Cos();
		rtn += 0.00000000556 * (5.44324390449 +  85034.42002596818 * t).Cos();
		rtn += 0.00000000551 * (0.33644229836 +  52156.13652224860 * t).Cos();
		rtn += 0.00000000546 * (4.78005317483 +  22747.29071487440 * t).Cos();
		rtn += 0.00000000543 * (1.40877130839 +  44937.13069154840 * t).Cos();
		rtn += 0.00000000520 * (6.00172746972 +  52168.69273614759 * t).Cos();
		rtn += 0.00000000517 * (3.93195379429 + 102762.53967101299 * t).Cos();
		rtn += 0.00000000511 * (5.88243734524 +  45494.58142974879 * t).Cos();
		rtn += 0.00000000496 * (3.39004132624 + 125887.56221081219 * t).Cos();
		rtn += 0.00000000482 * (0.98165400059 +  25654.19140369739 * t).Cos();
		rtn += 0.00000000474 * (5.94330512040 +  54394.56338733519 * t).Cos();
		rtn += 0.00000000464 * (3.98651628073 + 105307.21230790539 * t).Cos();
		rtn += 0.00000000463 * (3.67549187956 +  25668.41849769900 * t).Cos();
		rtn += 0.00000000452 * (3.53009000682 +  58458.88213313979 * t).Cos();
		rtn += 0.00000000440 * (1.46381183715 +  89586.37352302698 * t).Cos();
		rtn += 0.00000000425 * (5.24511927496 +  52389.10537858640 * t).Cos();
		rtn += 0.00000000425 * (1.43228996047 +  51109.31080595839 * t).Cos();
		rtn += 0.00000000418 * (3.73369494476 + 103925.01437542078 * t).Cos();
		rtn += 0.00000000417 * (4.32916053867 +  51123.53789995999 * t).Cos();
		rtn += 0.00000000412 * (2.26754404446 +  82815.66292178139 * t).Cos();
		rtn += 0.00000000397 * (0.69014608020 +  64741.95798313119 * t).Cos();
		rtn += 0.00000000385 * (5.88991948790 + 129330.13715577759 * t).Cos();
		rtn += 0.00000000385 * (2.47184729453 +  25234.70675982219 * t).Cos();
		rtn += 0.00000000382 * (0.97683830518 +  52026.24308601380 * t).Cos();
		rtn += 0.00000000380 * (3.74413132157 +  52179.68761850640 * t).Cos();
		rtn += 0.00000000378 * (5.31676765847 +  52171.92494779040 * t).Cos();
		rtn += 0.00000000375 * (1.97920050124 +    149.56319713460 * t).Cos();
		rtn += 0.00000000375 * (0.55187466535 +  45405.09568190280 * t).Cos();
		rtn += 0.00000000359 * (5.50961077408 +  26555.86813192860 * t).Cos();
		rtn += 0.00000000355 * (1.52732265492 +   1066.49547719000 * t).Cos();
		rtn += 0.00000000354 * (1.04383146533 +  66941.04532641819 * t).Cos();
		rtn += 0.00000000351 * (2.00433341730 +  24395.73747207180 * t).Cos();
		rtn += 0.00000000348 * (4.91064019959 +   1052.26838318840 * t).Cos();
		rtn += 0.00000000329 * (5.20636278221 +  52602.40447402440 * t).Cos();
		rtn += 0.00000000324 * (1.62975761811 +  88476.99497093359 * t).Cos();
		rtn += 0.00000000315 * (2.61613386386 +  52182.91983014920 * t).Cos();
		rtn += 0.00000000304 * (6.00190488272 +   2218.75710418680 * t).Cos();
		rtn += 0.00000000302 * (5.21113786435 +  53764.87917843220 * t).Cos();
		rtn += 0.00000000301 * (5.02488829134 + 117873.36400788819 * t).Cos();
		rtn += 0.00000000289 * (6.19161799918 +  26094.53170047421 * t).Cos();
		rtn += 0.00000000289 * (3.05373259745 +  26081.27458267419 * t).Cos();
		rtn += 0.00000000286 * (3.77170690304 +      7.11354700080 * t).Cos();
		rtn += 0.00000000284 * (3.10942616808 +  49957.04917896160 * t).Cos();
		rtn += 0.00000000271 * (5.74710334372 +  25455.11940226100 * t).Cos();
		rtn += 0.00000000268 * (1.09037236588 +  18093.37469954999 * t).Cos();
		rtn += 0.00000000267 * (2.86410554301 +  80482.46652890938 * t).Cos();
		rtn += 0.00000000262 * (4.14850032709 +  24491.71669928959 * t).Cos();
		rtn += 0.00000000259 * (1.82921035765 +  24505.94379329119 * t).Cos();
		rtn += 0.00000000259 * (1.28296039354 +  13655.86049117640 * t).Cos();
		rtn += 0.00000000256 * (3.71117332461 +  25619.93815121980 * t).Cos();
		rtn += 0.00000000255 * (4.20635818545 +  44181.27784112419 * t).Cos();
		rtn += 0.00000000251 * (4.10979574073 + 155468.03691925599 * t).Cos();
		rtn += 0.00000000244 * (4.14399890076 +  95247.70557217918 * t).Cos();
		rtn += 0.00000000244 * (2.15621668050 +   3442.57494496540 * t).Cos();
		rtn += 0.00000000242 * (5.05501089774 +  42153.96900304900 * t).Cos();
		rtn += 0.00000000242 * (3.29851820234 +   6681.22485339960 * t).Cos();
		rtn += 0.00000000236 * (4.08612620637 +  26013.12154300690 * t).Cos();
		rtn += 0.00000000233 * (5.49033130906 +  98068.53671630539 * t).Cos();
		rtn += 0.00000000232 * (5.45165695316 +  33967.99229491319 * t).Cos();
		rtn += 0.00000000232 * (2.21576531181 +  16066.06586147480 * t).Cos();
		rtn += 0.00000000228 * (1.46077047931 +  77623.81213840858 * t).Cos();
		rtn += 0.00000000227 * (1.63236736805 +     76.26607127560 * t).Cos();
		rtn += 0.00000000226 * (1.32354627258 +  52099.54021187280 * t).Cos();
		rtn += 0.00000000225 * (0.44449338810 +  76144.94556434419 * t).Cos();
		rtn += 0.00000000206 * (5.59196913034 +  55618.38122811380 * t).Cos();
		rtn += 0.00000000205 * (1.00234895959 +  26190.99591579279 * t).Cos();
		rtn += 0.00000000203 * (1.64252462466 +  58946.51688439399 * t).Cos();
		rtn += 0.00000000200 * (1.81376901527 +  25863.55834587229 * t).Cos();
		rtn += 0.00000000197 * (5.73307583430 + 157636.79740153858 * t).Cos();
		rtn += 0.00000000197 * (1.36693360783 +  26727.80042788820 * t).Cos();
		rtn += 0.00000000196 * (0.06606260924 +  40565.25432477420 * t).Cos();
		rtn += 0.00000000195 * (3.31297083154 + 124778.18365871879 * t).Cos();
		rtn += 0.00000000192 * (1.82761158300 +  25551.09862947879 * t).Cos();
		rtn += 0.00000000191 * (5.57428963071 +   5327.47610838280 * t).Cos();
		rtn += 0.00000000187 * (0.86187283408 + 120226.23016165999 * t).Cos();
		rtn += 0.00000000187 * (0.46291089182 + 104881.30353139139 * t).Cos();
		rtn += 0.00000000185 * (6.10038742063 +  23439.44831610119 * t).Cos();
		rtn += 0.00000000179 * (3.94252428767 + 129909.82474277639 * t).Cos();
		rtn += 0.00000000178 * (2.54823795050 +  26720.68688088739 * t).Cos();
		rtn += 0.00000000177 * (3.29620848300 +  25131.61398560359 * t).Cos();
		rtn += 0.00000000176 * (2.97410942402 +  24925.42843716640 * t).Cos();
		rtn += 0.00000000169 * (1.69270064342 +  90695.75207512038 * t).Cos();
		rtn += 0.00000000167 * (3.61983109002 +  23754.70674870219 * t).Cos();
		rtn += 0.00000000166 * (0.40320638452 + 100909.03762133139 * t).Cos();
		rtn += 0.00000000159 * (3.48396967776 +  25977.69682035479 * t).Cos();
		rtn += 0.00000000156 * (2.96616703196 +  78050.41032928458 * t).Cos();
		rtn += 0.00000000154 * (1.27206049137 +  25984.81036735560 * t).Cos();
		rtn += 0.00000000152 * (4.87194153709 + 103396.01282468818 * t).Cos();
		rtn += 0.00000000150 * (5.20072476078 +  69159.80243060499 * t).Cos();
		rtn += 0.00000000147 * (4.50311642422 + 105410.99449648599 * t).Cos();
		rtn += 0.00000000145 * (2.05409839424 + 313054.83769889036 * t).Cos();
		rtn += 0.00000000145 * (1.35569389554 +   3340.61242669980 * t).Cos();
		rtn += 0.00000000144 * (1.89319156163 +  64607.84893354619 * t).Cos();
		rtn += 0.00000000142 * (1.50696203402 +  52329.58509363319 * t).Cos();
		rtn += 0.00000000141 * (1.99770625298 + 162188.75089859738 * t).Cos();
		rtn += 0.00000000137 * (3.86782217557 +  24609.03656750980 * t).Cos();
		rtn += 0.00000000137 * (1.77306412615 +  35191.81013569180 * t).Cos();
		rtn += 0.00000000135 * (1.27363012793 +  52022.02747266360 * t).Cos();
		rtn += 0.00000000132 * (4.86901248209 +  24712.12934172840 * t).Cos();
		rtn += 0.00000000129 * (4.00691218396 +  72936.23331633979 * t).Cos();
		rtn += 0.00000000128 * (5.41891989692 +  26162.68474014150 * t).Cos();
		rtn += 0.00000000127 * (5.49703075555 +  78283.37918562238 * t).Cos();
		rtn += 0.00000000127 * (0.70464976569 + 128850.44281258718 * t).Cos();
		rtn += 0.00000000126 * (3.97006576134 +  29428.51556827400 * t).Cos();
		rtn += 0.00000000126 * (2.70555128398 +  28206.66700195260 * t).Cos();
		rtn += 0.00000000126 * (1.61963252183 +  48835.19385644859 * t).Cos();
		rtn += 0.00000000126 * (0.94870979828 + 121335.60871375339 * t).Cos();
		rtn += 0.00000000125 * (3.38994834526 +  78244.03966382280 * t).Cos();
		rtn += 0.00000000125 * (1.87932536282 +  26610.48055966799 * t).Cos();
		rtn += 0.00000000123 * (0.15629905349 + 151975.46535238638 * t).Cos();
		rtn += 0.00000000120 * (4.45261989231 +  71025.03383312259 * t).Cos();
		rtn += 0.00000000119 * (2.77644375904 +  78256.59587772179 * t).Cos();
		rtn += 0.00000000118 * (0.76511176346 + 131395.11544947959 * t).Cos();
		rtn += 0.00000000117 * (3.31644134053 +  25771.51127191760 * t).Cos();
		rtn += 0.00000000113 * (5.88733575390 +  26404.29501123080 * t).Cos();
		rtn += 0.00000000110 * (3.87954702440 +  85502.38501632259 * t).Cos();
		rtn += 0.00000000110 * (2.63249934300 +  71582.48457132299 * t).Cos();
		rtn += 0.00000000108 * (4.03679713919 +  51742.09454527159 * t).Cos();
		rtn += 0.00000000104 * (5.05004528676 +  50483.64061364600 * t).Cos();
		rtn += 0.00000000104 * (0.29849788751 +  84546.78527471398 * t).Cos();
		rtn += 0.00000000103 * (0.46416881502 +  51756.32163927320 * t).Cos();
		rtn += 0.00000000102 * (5.40465219833 +  26137.89976347840 * t).Cos();
		rtn += 0.00000000102 * (0.50487650429 + 130012.91751699499 * t).Cos();
		rtn += 0.00000000101 * (5.20997240587 +    433.71173787680 * t).Cos();
		rtn += 0.00000000100 * (5.32142188276 + 108903.56606335558 * t).Cos();
		rtn += 0.00000000098 * (2.01417457095 +  78477.00852016058 * t).Cos();
		rtn += 0.00000000097 * (2.66105435933 + 155418.04029735178 * t).Cos();
		rtn += 0.00000000096 * (4.47724179825 +  77197.21394753258 * t).Cos();
		rtn += 0.00000000095 * (4.44018421307 + 115674.27666460119 * t).Cos();
		rtn += 0.00000000095 * (0.34221817875 +  26507.38778544939 * t).Cos();
		rtn += 0.00000000093 * (4.20604773511 +  38813.35657634920 * t).Cos();
		rtn += 0.00000000093 * (3.80346806552 +  26037.90651966999 * t).Cos();
		rtn += 0.00000000093 * (2.37389467504 +    419.48464387520 * t).Cos();
		rtn += 0.00000000093 * (1.09569161440 +  77211.44104153418 * t).Cos();
		rtn += 0.00000000092 * (5.52103093635 +  51322.60990139639 * t).Cos();
		rtn += 0.00000000092 * (3.74335845403 +  90829.86112470538 * t).Cos();
		rtn += 0.00000000091 * (2.63082094391 +  28421.09953444620 * t).Cos();
		rtn += 0.00000000087 * (1.77296830923 +  25440.89230825939 * t).Cos();
		rtn += 0.00000000086 * (5.14039556935 +  26237.46633870879 * t).Cos();
		rtn += 0.00000000086 * (4.03030391951 +  78114.14622758799 * t).Cos();
		rtn += 0.00000000086 * (4.01653667598 +  10021.83728009940 * t).Cos();
		rtn += 0.00000000086 * (2.08697748680 +  78259.82808936459 * t).Cos();
		rtn += 0.00000000086 * (1.86276413658 +  27140.17152476259 * t).Cos();
		rtn += 0.00000000086 * (0.51423355089 +  78267.59076008058 * t).Cos();
		rtn += 0.00000000083 * (4.10355702051 +  93028.94846799239 * t).Cos();
		rtn += 0.00000000083 * (3.12647584943 +  14477.35118320000 * t).Cos();
		rtn += 0.00000000082 * (5.22677693918 +  27999.10262479140 * t).Cos();
		rtn += 0.00000000082 * (3.73510592110 +    853.19638175200 * t).Cos();
		rtn += 0.00000000082 * (3.59482991001 +  71492.99882347698 * t).Cos();
		rtn += 0.00000000082 * (1.02659883956 +  74821.13447975718 * t).Cos();
		rtn += 0.00000000079 * (4.68108496987 +  27154.39861876420 * t).Cos();
		rtn += 0.00000000078 * (4.66831173790 + 114564.89811250778 * t).Cos();
		rtn += 0.00000000078 * (4.20137623264 +   1692.16566950240 * t).Cos();
		rtn += 0.00000000078 * (2.88001982141 +  29416.03879785439 * t).Cos();
		rtn += 0.00000000078 * (0.40338105541 +  49842.60989027639 * t).Cos();
		rtn += 0.00000000076 * (2.65553220848 +  34282.17847478280 * t).Cos();
		rtn += 0.00000000075 * (1.78927060530 + 143961.26714946238 * t).Cos();
		rtn += 0.00000000074 * (5.66833060422 +  78270.82297172339 * t).Cos();
		rtn += 0.00000000074 * (1.97833720876 +  78690.30761559859 * t).Cos();
		rtn += 0.00000000074 * (0.86501751700 +  50579.61984086379 * t).Cos();
		rtn += 0.00000000073 * (2.27328552013 +  52643.77127350280 * t).Cos();
		rtn += 0.00000000073 * (2.06220281759 + 111122.32316754239 * t).Cos();
		rtn += 0.00000000071 * (4.89150553141 +  50593.84693486539 * t).Cos();
		rtn += 0.00000000068 * (1.98236355905 +  79852.78232000639 * t).Cos();
		rtn += 0.00000000067 * (0.24182046727 +  66653.15746634839 * t).Cos();
		rtn += 0.00000000066 * (5.20298814290 +  26294.08869001139 * t).Cos();
		rtn += 0.00000000066 * (2.28151075383 +   7880.08915333899 * t).Cos();
		rtn += 0.00000000064 * (6.15935356751 +  76044.95232053580 * t).Cos();
		rtn += 0.00000000064 * (5.55115814500 +  25764.39772491679 * t).Cos();
		rtn += 0.00000000064 * (0.87558639332 + 181555.94006083018 * t).Cos();
		rtn += 0.00000000062 * (0.94273311929 +  25344.91308104160 * t).Cos();
		rtn += 0.00000000061 * (2.81500265978 +  26202.34243025941 * t).Cos();
		rtn += 0.00000000061 * (2.61493039721 +  49527.35145767539 * t).Cos();
		rtn += 0.00000000059 * (2.45952644668 +  51543.02254383520 * t).Cos();
		rtn += 0.00000000058 * (6.09746566424 +  52169.17772424839 * t).Cos();
		rtn += 0.00000000058 * (4.20402726578 +  96357.08412427259 * t).Cos();
		rtn += 0.00000000058 * (3.80571138237 +  99024.13645791399 * t).Cos();
		rtn += 0.00000000058 * (2.95861781205 +  52182.43484204840 * t).Cos();
		rtn += 0.00000000058 * (2.06211216656 +   1596.18644228460 * t).Cos();
		rtn += 0.00000000058 * (1.43409045174 +  23866.04650697719 * t).Cos();
		rtn += 0.00000000057 * (4.37167017012 +   1581.95934828300 * t).Cos();
		rtn += 0.00000000057 * (2.27689377996 + 124156.43985787958 * t).Cos();
		rtn += 0.00000000055 * (4.51497762833 + 103711.71527998279 * t).Cos();
		rtn += 0.00000000055 * (0.12465494356 +  25973.46385288896 * t).Cos();
		rtn += 0.00000000054 * (4.79303212221 +  26164.16921284980 * t).Cos();
		rtn += 0.00000000054 * (4.62784653733 +  25881.71759313700 * t).Cos();
		rtn += 0.00000000054 * (3.87143037686 +  18207.81398823521 * t).Cos();
		rtn += 0.00000000054 * (3.05622204718 +  25565.32572348040 * t).Cos();
		rtn += 0.00000000053 * (4.37486529196 +  78187.44335344699 * t).Cos();
		rtn += 0.00000000053 * (4.32548272270 +  70269.18098269838 * t).Cos();
		rtn += 0.00000000053 * (0.58517949906 +  26624.70765366959 * t).Cos();
		rtn += 0.00000000052 * (0.19368783267 +  92741.06060792258 * t).Cos();
		rtn += 0.00000000051 * (1.57829002915 +  12725.45343477500 * t).Cos();
		rtn += 0.00000000050 * (2.50066877650 + 183724.70054311278 * t).Cos();
		return rtn;
	}

	// MMercury.R1(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 1. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 1. Ordnung.</returns>
	private static double R1(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;

		// Terme aufsummieren
		rtn += 0.00217347739 * (4.65617158663 +  26087.90314157420 * t).Cos();
		if(value == EPrecision.Low) return rtn;
		rtn += 0.00044141826 * (1.42385543975 +  52175.80628314840 * t).Cos();
		rtn += 0.00010094479 * (4.47466326316 +  78263.70942472259 * t).Cos();
		rtn += 0.00002432804 * (1.24226083435 + 104351.61256629678 * t).Cos();
		rtn += 0.00001624367 * (0.00000000000 +      0.00000000000 * t).Cos();
		rtn += 0.00000603996 * (4.29303116561 + 130439.51570787099 * t).Cos();
		rtn += 0.00000152851 * (1.06060779810 + 156527.41884944518 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000039202 * (4.11136751416 + 182615.32199101939 * t).Cos();
		rtn += 0.00000017999 * (4.71193725810 +  24978.52458948080 * t).Cos();
		rtn += 0.00000017760 * (4.54424653085 +  27197.28169366760 * t).Cos();
		rtn += 0.00000010154 * (0.87893548494 + 208703.22513259358 * t).Cos();
		rtn += 0.00000008086 * (3.00540854890 +  25028.52121138500 * t).Cos();
		rtn += 0.00000004444 * (2.13639058123 +  20426.57109242200 * t).Cos();
		rtn += 0.00000004393 * (1.48074475165 +  51066.42773105500 * t).Cos();
		rtn += 0.00000003510 * (3.21171223697 +   1059.38193018920 * t).Cos();
		rtn += 0.00000003133 * (5.23846336855 +  21535.94964451540 * t).Cos();
		rtn += 0.00000002650 * (3.92968881423 + 234791.12827416777 * t).Cos();
		rtn += 0.00000002498 * (2.02623950395 +  24498.83024629040 * t).Cos();
		rtn += 0.00000002011 * (1.23911360588 +  53285.18483524180 * t).Cos();
		rtn += 0.00000001963 * (4.04524902962 +   5661.33204915220 * t).Cos();
		rtn += 0.00000001546 * (2.61849590442 +  26617.59410666880 * t).Cos();
		rtn += 0.00000001542 * (2.35659537465 +  27043.50288318280 * t).Cos();
		rtn += 0.00000001417 * (1.37876323533 +   1109.37855209340 * t).Cos();
		rtn += 0.00000001295 * (5.19094850935 +  46514.47423399620 * t).Cos();
		rtn += 0.00000001271 * (0.56437938715 +  25132.30339996560 * t).Cos();
		rtn += 0.00000001241 * (0.21246226135 +  11322.66409830440 * t).Cos();
		rtn += 0.00000001177 * (4.53194022227 +  77154.33087262919 * t).Cos();
		rtn += 0.00000001120 * (0.86374628388 +  57837.13833230060 * t).Cos();
		rtn += 0.00000001090 * (6.23733263925 +  27147.28507176339 * t).Cos();
		rtn += 0.00000001005 * (3.28272284427 +  37410.56723987860 * t).Cos();
		rtn += 0.00000000935 * (2.37277497611 +  25661.30495069820 * t).Cos();
		rtn += 0.00000000863 * (5.55308682281 +  25558.21217647960 * t).Cos();
		rtn += 0.00000000841 * (5.96261035419 +  14765.23904326980 * t).Cos();
		rtn += 0.00000000742 * (0.77751594919 +  32858.61374281979 * t).Cos();
		rtn += 0.00000000736 * (4.06885296570 +   1589.07289528380 * t).Cos();
		rtn += 0.00000000712 * (2.70884051645 +  16983.99614745660 * t).Cos();
		rtn += 0.00000000707 * (0.92992556568 +  30639.85663863300 * t).Cos();
		rtn += 0.00000000696 * (0.69734796212 + 260879.03141574195 * t).Cos();
		rtn += 0.00000000678 * (2.02193885930 +  26068.23338067440 * t).Cos();
		rtn += 0.00000000608 * (3.65993973133 +  25448.00585526019 * t).Cos();
		rtn += 0.00000000608 * (0.85708468483 +   4551.95349705880 * t).Cos();
		rtn += 0.00000000606 * (4.50215566301 +  28306.66024576099 * t).Cos();
		rtn += 0.00000000597 * (4.64867954048 +  26080.78959457339 * t).Cos();
		rtn += 0.00000000572 * (3.50125649521 +  10213.28554621100 * t).Cos();
		rtn += 0.00000000572 * (0.62751016416 +  13521.75144159140 * t).Cos();
		rtn += 0.00000000546 * (5.38138962861 +  26091.78447693220 * t).Cos();
		rtn += 0.00000000533 * (0.93587795381 +  26107.57290247399 * t).Cos();
		rtn += 0.00000000532 * (5.21855381213 +  22645.32819660879 * t).Cos();
		rtn += 0.00000000523 * (0.06439941262 +  25021.40766438420 * t).Cos();
		rtn += 0.00000000516 * (3.89421000089 +  83925.04147387479 * t).Cos();
		rtn += 0.00000000515 * (4.83662922562 +  50586.73338786459 * t).Cos();
		rtn += 0.00000000507 * (5.55466020276 +  12566.15169998280 * t).Cos();
		rtn += 0.00000000487 * (4.23950195756 +  26095.01668857500 * t).Cos();
		rtn += 0.00000000472 * (6.00507778421 +  77204.32749453338 * t).Cos();
		rtn += 0.00000000453 * (0.72803137250 +    529.69096509460 * t).Cos();
		rtn += 0.00000000443 * (3.86758570847 +  26084.02180621620 * t).Cos();
		rtn += 0.00000000436 * (5.86659160961 +  25035.63475838580 * t).Cos();
		rtn += 0.00000000435 * (5.79043985706 +  43071.89928903080 * t).Cos();
		rtn += 0.00000000429 * (0.26260280461 +  36301.18868778519 * t).Cos();
		rtn += 0.00000000418 * (2.77521418660 +  41962.52073693740 * t).Cos();
		rtn += 0.00000000406 * (5.60324652352 +  52705.49724824299 * t).Cos();
		rtn += 0.00000000390 * (3.81996185881 +    426.59819087600 * t).Cos();
		rtn += 0.00000000379 * (1.95647626585 +  72602.37737557039 * t).Cos();
		rtn += 0.00000000358 * (6.00165335616 +  33326.57873317420 * t).Cos();
		rtn += 0.00000000347 * (1.39524259509 +  23969.13928119580 * t).Cos();
		rtn += 0.00000000340 * (0.24111380317 +  26301.20223701220 * t).Cos();
		rtn += 0.00000000332 * (3.59235758173 +  51220.20654153979 * t).Cos();
		rtn += 0.00000000326 * (1.30033833957 + 103242.23401420339 * t).Cos();
		rtn += 0.00000000325 * (4.78747749132 +  23869.14603738740 * t).Cos();
		rtn += 0.00000000316 * (2.22791434675 +  19317.19254032860 * t).Cos();
		rtn += 0.00000000290 * (3.04044859601 +  53235.18821333759 * t).Cos();
		rtn += 0.00000000264 * (3.93160763696 +   6770.71060124560 * t).Cos();
		rtn += 0.00000000235 * (2.24050503260 +  25874.60404613620 * t).Cos();
		rtn += 0.00000000223 * (2.76528831516 + 103292.23063610759 * t).Cos();
		rtn += 0.00000000218 * (2.11865566044 +  73711.75592766379 * t).Cos();
		rtn += 0.00000000215 * (6.16660008496 +  51646.11531805379 * t).Cos();
		rtn += 0.00000000215 * (3.97996009773 +  56727.75978020720 * t).Cos();
		rtn += 0.00000000208 * (2.74551899929 +  40853.14218484400 * t).Cos();
		rtn += 0.00000000207 * (5.89082708705 +  31749.23519072640 * t).Cos();
		rtn += 0.00000000205 * (3.20844012088 +  18849.22754997420 * t).Cos();
		rtn += 0.00000000204 * (3.44654782597 +   9103.90699411760 * t).Cos();
		rtn += 0.00000000197 * (0.80026289238 +  27676.97603685800 * t).Cos();
		rtn += 0.00000000196 * (1.99924288764 +  48733.23133818299 * t).Cos();
		rtn += 0.00000000189 * (0.65681038131 + 110012.94461544899 * t).Cos();
		rtn += 0.00000000185 * (0.98966099528 +  29530.47808653960 * t).Cos();
		rtn += 0.00000000184 * (3.74837387583 + 286966.93455731616 * t).Cos();
		rtn += 0.00000000174 * (5.81264188702 +  68050.42387851159 * t).Cos();
		rtn += 0.00000000163 * (4.00380715262 +  79373.08797681599 * t).Cos();
		rtn += 0.00000000154 * (3.26437373895 +  38519.94579197200 * t).Cos();
		rtn += 0.00000000152 * (5.07389967152 +  52156.13652224860 * t).Cos();
		rtn += 0.00000000151 * (2.83369443311 +    955.59974160860 * t).Cos();
		rtn += 0.00000000151 * (2.66028539824 +  25654.19140369739 * t).Cos();
		rtn += 0.00000000151 * (0.40953650210 +  26514.50133245020 * t).Cos();
		rtn += 0.00000000150 * (3.69230644689 +  65697.55772473979 * t).Cos();
		rtn += 0.00000000150 * (2.60376479044 +    639.89728631400 * t).Cos();
		rtn += 0.00000000147 * (2.32191248197 +  38654.05484155699 * t).Cos();
		rtn += 0.00000000140 * (2.05736044462 +   6283.07584999140 * t).Cos();
		rtn += 0.00000000132 * (2.71837382155 +  77734.01845962799 * t).Cos();
		rtn += 0.00000000124 * (3.13058661995 +  51109.31080595839 * t).Cos();
		rtn += 0.00000000123 * (6.13795219131 +   1066.49547719000 * t).Cos();
		rtn += 0.00000000123 * (2.65137961558 +  51123.53789995999 * t).Cos();
		rtn += 0.00000000123 * (2.07840148125 +  25668.41849769900 * t).Cos();
		rtn += 0.00000000122 * (3.31361750281 +  62389.09182935939 * t).Cos();
		rtn += 0.00000000121 * (2.15433834534 +  52179.68761850640 * t).Cos();
		rtn += 0.00000000120 * (4.06567300860 +  45892.73043315699 * t).Cos();
		rtn += 0.00000000118 * (0.51913709271 +  51535.90899683439 * t).Cos();
		rtn += 0.00000000113 * (2.33243126122 +  78793.40038981718 * t).Cos();
		rtn += 0.00000000112 * (5.00798069297 +  98690.28051714458 * t).Cos();
		rtn += 0.00000000112 * (4.78983902693 +  53131.40602475700 * t).Cos();
		rtn += 0.00000000107 * (5.12738291017 +  99799.65906923798 * t).Cos();
		rtn += 0.00000000107 * (1.01316358023 +  52182.91983014920 * t).Cos();
		rtn += 0.00000000106 * (1.42997322881 +  52168.69273614759 * t).Cos();
		rtn += 0.00000000106 * (1.31393069594 +  47623.85278608960 * t).Cos();
		rtn += 0.00000000106 * (0.14583281261 +  12432.04265039780 * t).Cos();
		rtn += 0.00000000104 * (4.51477063494 +  25234.70675982219 * t).Cos();
		rtn += 0.00000000096 * (5.03438502363 +  32370.97899156560 * t).Cos();
		rtn += 0.00000000093 * (0.34539006564 +  77308.10968311399 * t).Cos();
		rtn += 0.00000000092 * (4.72811907093 +   2118.76386037840 * t).Cos();
		rtn += 0.00000000092 * (3.97747935513 +  52195.47604404819 * t).Cos();
		rtn += 0.00000000091 * (5.75408440781 +  24491.71669928959 * t).Cos();
		rtn += 0.00000000091 * (4.35481864546 + 129330.13715577759 * t).Cos();
		rtn += 0.00000000091 * (4.22099920434 +  50057.04242277000 * t).Cos();
		rtn += 0.00000000085 * (2.50332044483 +   7238.67559160000 * t).Cos();
		rtn += 0.00000000084 * (5.81442139422 + 129380.13377768178 * t).Cos();
		rtn += 0.00000000084 * (0.32848825294 +   1052.26838318840 * t).Cos();
		rtn += 0.00000000082 * (6.11445014523 +  79323.09135491178 * t).Cos();
		rtn += 0.00000000079 * (3.35596277474 +  52389.10537858640 * t).Cos();
		rtn += 0.00000000078 * (1.17633266287 +  76674.63652943878 * t).Cos();
		rtn += 0.00000000078 * (0.63585741399 +  52171.92494779040 * t).Cos();
		rtn += 0.00000000076 * (1.62577226881 +  15874.61759536320 * t).Cos();
		rtn += 0.00000000072 * (1.56170832500 +  49957.04917896160 * t).Cos();
		rtn += 0.00000000070 * (5.28692696943 +  45405.09568190280 * t).Cos();
		rtn += 0.00000000068 * (1.18946361248 +  54394.56338733519 * t).Cos();
		rtn += 0.00000000068 * (0.44378826429 +  91785.46086631398 * t).Cos();
		rtn += 0.00000000065 * (2.12942233842 +      7.11354700080 * t).Cos();
		rtn += 0.00000000064 * (5.09677055426 +  51962.50718771040 * t).Cos();
		rtn += 0.00000000064 * (2.57311321703 +  94138.32702008578 * t).Cos();
		rtn += 0.00000000063 * (1.29883580487 +   2218.75710418680 * t).Cos();
		rtn += 0.00000000062 * (3.70751240431 + 136100.84775702319 * t).Cos();
		rtn += 0.00000000061 * (0.73867692725 +  82815.66292178139 * t).Cos();
		rtn += 0.00000000060 * (6.25938912295 +  24505.94379329119 * t).Cos();
		rtn += 0.00000000057 * (1.92365363632 +  20760.42703319140 * t).Cos();
		rtn += 0.00000000054 * (6.22009952451 +  44937.13069154840 * t).Cos();
		rtn += 0.00000000054 * (0.89448628916 +  71980.63357473118 * t).Cos();
		rtn += 0.00000000052 * (5.77930503293 +  66941.04532641819 * t).Cos();
		rtn += 0.00000000052 * (5.71476972233 + 103821.92160120218 * t).Cos();
		rtn += 0.00000000052 * (3.43365769233 +  25551.09862947879 * t).Cos();
		rtn += 0.00000000052 * (2.63638299982 +  18093.37469954999 * t).Cos();
		rtn += 0.00000000051 * (6.02427997984 +  13655.86049117640 * t).Cos();
		rtn += 0.00000000051 * (4.71710385051 + 105460.99111839019 * t).Cos();
		rtn += 0.00000000050 * (5.76150579489 +  25938.33994443960 * t).Cos();
		return rtn;
	}

	// MMercury.R2(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 2. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 2. Ordnung.</returns>
	private static double R2(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low) return rtn;

		// Terme aufsummieren
		rtn += 0.00003117867 * (3.08231840296 +  26087.90314157420 * t).Cos();
		rtn += 0.00001245396 * (6.15183317423 +  52175.80628314840 * t).Cos();
		rtn += 0.00000424822 * (2.92583352960 +  78263.70942472259 * t).Cos();
		rtn += 0.00000136130 * (5.97983925842 + 104351.61256629678 * t).Cos();
		if(value == EPrecision.Medium) return rtn;
		rtn += 0.00000042175 * (2.74936980629 + 130439.51570787099 * t).Cos();
		rtn += 0.00000021759 * (3.14159265359 +      0.00000000000 * t).Cos();
		rtn += 0.00000012793 * (5.80143162209 + 156527.41884944518 * t).Cos();
		rtn += 0.00000003825 * (2.56993599584 + 182615.32199101939 * t).Cos();
		rtn += 0.00000001131 * (5.62142196970 + 208703.22513259358 * t).Cos();
		rtn += 0.00000001042 * (3.14648120079 +  24978.52458948080 * t).Cos();
		rtn += 0.00000000483 * (6.14307654520 +  27197.28169366760 * t).Cos();
		rtn += 0.00000000332 * (2.38992575670 + 234791.12827416777 * t).Cos();
		rtn += 0.00000000320 * (6.20674766565 +  51066.42773105500 * t).Cos();
		rtn += 0.00000000120 * (0.56745598887 +  20426.57109242200 * t).Cos();
		rtn += 0.00000000113 * (3.28048907943 +  24498.83024629040 * t).Cos();
		rtn += 0.00000000105 * (4.36663468239 +  25028.52121138500 * t).Cos();
		rtn += 0.00000000103 * (2.98038190305 +  77154.33087262919 * t).Cos();
		rtn += 0.00000000097 * (5.44128884026 + 260879.03141574195 * t).Cos();
		rtn += 0.00000000095 * (1.70276410782 +   1059.38193018920 * t).Cos();
		rtn += 0.00000000074 * (1.28630381800 +  26617.59410666880 * t).Cos();
		rtn += 0.00000000066 * (5.68201233964 +  25132.30339996560 * t).Cos();
		rtn += 0.00000000059 * (3.10922979724 +  27043.50288318280 * t).Cos();
		rtn += 0.00000000057 * (2.96753362980 +   1109.37855209340 * t).Cos();
		rtn += 0.00000000053 * (3.63699398162 +  46514.47423399620 * t).Cos();
		rtn += 0.00000000053 * (0.66673109494 +  21535.94964451540 * t).Cos();
		return rtn;
	}

	// MMercury.R3(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 3. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 3. Ordnung.</returns>
	private static double R3(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000032676 * (1.67971635359 +  26087.90314157420 * t).Cos();
		rtn += 0.00000024166 * (4.63403168997 +  52175.80628314840 * t).Cos();
		rtn += 0.00000012133 * (1.38983781545 +  78263.70942472259 * t).Cos();
		rtn += 0.00000005140 * (4.43915386930 + 104351.61256629678 * t).Cos();
		rtn += 0.00000001981 * (1.20733880274 + 130439.51570787099 * t).Cos();
		rtn += 0.00000001460 * (3.14159265359 +      0.00000000000 * t).Cos();
		rtn += 0.00000000719 * (4.25913631362 + 156527.41884944518 * t).Cos();
		rtn += 0.00000000250 * (1.02794425848 + 182615.32199101939 * t).Cos();
		rtn += 0.00000000084 * (4.08008618813 + 208703.22513259358 * t).Cos();
		return rtn;
	}

	// MMercury.R4(EPrecision, double)
	/// <summary>
	/// Liefert die Summe der Terme 4. Ordnung zur Genauigkeitskennung und Jahrhundertbruchteil.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="t">Jahrhundertbruchteil.</param>
	/// <returns>Liefert die Summe der Terme 4. Ordnung.</returns>
	private static double R4(EPrecision value, double t)
	{
		// Lokale Felder einrichten
		double rtn = 0.0;
		if(value == EPrecision.Low)    return rtn;
		if(value == EPrecision.Medium) return rtn;

		// Terme aufsummieren
		rtn += 0.00000000394 * (0.36735403840 +  26087.90314157420 * t).Cos();
		rtn += 0.00000000387 * (3.18568771507 +  52175.80628314840 * t).Cos();
		rtn += 0.00000000270 * (6.16983616444 +  78263.70942472259 * t).Cos();
		rtn += 0.00000000149 * (2.91591904641 + 104351.61256629678 * t).Cos();
		return rtn;
	}

	// MMercury.Radius(EPrecision)
	/// <summary>
	/// Liefert den heliozentrisch-ekliptikalen Radius zur aktuellen Systemzeit.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <returns>Heliozentrisch-ekliptikalen Radius zur aktuellen Systemzeit.</returns>
	public static double Radius(EPrecision value)
	{
		// Lokale Felder einrichten
		double jd = DateTime.Now.ToJdn();
		return MMercury.Radius(value, jd);
	}

	// MMercury.Radius(EPrecision, double)
	/// <summary>
	/// Liefert den heliozentrisch-ekliptikalen Radius zur julianischen Tageszahl.
	/// </summary>
	/// <param name="value">Genauigkeitskennung.</param>
	/// <param name="jd">Julianische Tageszahl.</param>
	/// <returns>Heliozentrisch-ekliptikalen Radius zur julianischen Tageszahl.</returns>
	public static double Radius(EPrecision value, double jd)
	{
		// Lokale Felder einrichten
		double t  = (jd - MCalendar.Jdn20000101) / 365250.0; // Jahrhundertbruchteil
		double r0 = MMercury.R0(value, t);
		double r1 = MMercury.R1(value, t);
		double r2 = MMercury.R2(value, t);
		double r3 = MMercury.R3(value, t);
		double r4 = MMercury.R4(value, t);

		// Radius berechnen
		return MMath.Polynome(t, r0, r1, r2, r3, r4);
	}
}
